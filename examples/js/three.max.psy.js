// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"54dev"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setContextStyle:function(a){a=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/i.exec(a);this.r=parseInt(a[1],10)/255;this.g=parseInt(a[2],10)/255;this.b=parseInt(a[3],10)/255;return this},getHSV:function(a){var b=
this.r,c=this.g,d=this.b,e=Math.max(Math.max(b,c),d),f=Math.min(Math.min(b,c),d);if(f===e)f=b=0;else{var g=e-f,f=g/e,b=(b===e?(c-d)/g:c===e?2+(d-b)/g:4+(b-c)/g)/6;0>b&&(b+=1);1<b&&(b-=1)}void 0===a&&(a={h:0,s:0,v:0});a.h=b;a.s=f;a.v=e;return a},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],k=d[9],j=d[2],l=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(l,i),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?
(this.y=Math.atan2(g,d),this.z=Math.atan2(h,i)):(this.y=Math.atan2(-j,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(l)),0.99999>Math.abs(l)?(this.y=Math.atan2(-j,d),this.z=Math.atan2(-f,i)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(j)),0.99999>Math.abs(j)?(this.x=Math.atan2(l,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,i))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,i),this.y=Math.atan2(-j,e)):(this.x=0,this.y=Math.atan2(g,d))):
"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(l,i),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*
(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+
a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},
clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],i=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(i-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(i+b)&&0.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;i=(i+b)/4;e>h&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/
b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=i/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=i/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-i)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=b[0]*c+b[3]*d+b[6]*e;a.y=b[1]*c+b[4]*d+b[7]*e;a.z=b[2]*c+b[5]*d+b[8]*e;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix3.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*
b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,j=this.elements;j[0]=b*a;j[1]=b*c;j[2]=b*d;j[3]=b*e;j[4]=b*f;j[5]=b*g;j[6]=b*h;j[7]=b*i;j[8]=b*k;return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;
a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix3.__v1=new THREE.Vector3;THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,k,j,l,m,o,p,q){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,i||0,k||0,void 0!==j?j:1,l||0,m||0,o||0,p||0,void 0!==q?q:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,k,j,l,m,o,p,q){var t=this.elements;t[0]=a;t[4]=b;t[8]=c;t[12]=d;t[1]=e;t[5]=f;t[9]=g;t[13]=h;t[2]=i;t[6]=k;t[10]=j;t[14]=l;t[3]=m;t[7]=o;t[11]=p;t[15]=q;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],k=c[1],j=c[5],l=c[9],m=c[13],o=c[2],p=c[6],q=c[10],t=c[14],s=c[3],y=c[7],w=c[11],c=c[15],r=d[0],B=d[4],v=d[8],
u=d[12],x=d[1],F=d[5],C=d[9],E=d[13],M=d[2],D=d[6],K=d[10],I=d[14],N=d[3],O=d[7],P=d[11],d=d[15];e[0]=f*r+g*x+h*M+i*N;e[4]=f*B+g*F+h*D+i*O;e[8]=f*v+g*C+h*K+i*P;e[12]=f*u+g*E+h*I+i*d;e[1]=k*r+j*x+l*M+m*N;e[5]=k*B+j*F+l*D+m*O;e[9]=k*v+j*C+l*K+m*P;e[13]=k*u+j*E+l*I+m*d;e[2]=o*r+p*x+q*M+t*N;e[6]=o*B+p*F+q*D+t*O;e[10]=o*v+p*C+q*K+t*P;e[14]=o*u+p*E+q*I+t*d;e[3]=s*r+y*x+w*M+c*N;e[7]=s*B+y*F+w*D+c*O;e[11]=s*v+y*C+w*K+c*P;e[15]=s*u+y*E+w*I+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],k=a[2],j=a[6],l=a[10],m=a[14],o=a[3],p=a[7],q=a[11],a=a[15];return e*h*j*o-d*i*j*o-e*g*l*o+c*i*l*o+d*g*m*o-c*h*m*o-e*h*k*p+d*i*k*p+e*f*l*p-b*i*l*p-d*f*m*p+b*h*m*p+e*g*k*q-c*i*k*q-e*f*j*q+b*i*j*q+c*f*m*q-b*g*m*q-d*g*k*a+c*h*k*a+d*f*j*a-b*h*j*a-c*f*l*a+b*g*l*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],k=c[9],j=c[13],l=c[2],m=c[6],o=c[10],p=c[14],q=c[3],t=c[7],s=c[11],c=c[15];b[0]=k*p*t-j*o*t+j*m*s-i*p*s-k*m*c+i*o*c;b[4]=g*o*t-f*p*t-g*m*s+e*p*s+f*m*c-e*o*c;b[8]=f*j*t-g*k*t+g*i*s-e*j*s-f*i*c+e*k*c;b[12]=g*k*m-f*j*m-g*i*o+e*j*o+f*i*p-e*k*p;b[1]=j*o*q-k*p*q-j*l*s+h*p*s+k*l*c-h*o*c;b[5]=f*p*q-g*o*q+g*l*s-d*p*s-f*l*c+d*o*c;b[9]=g*k*q-f*j*q-g*h*s+d*j*s+f*h*c-d*k*c;b[13]=f*j*l-g*k*l+g*h*o-d*j*o-f*h*p+d*k*p;b[2]=i*p*q-j*m*q+j*l*t-h*p*
t-i*l*c+h*m*c;b[6]=g*m*q-e*p*q-g*l*t+d*p*t+e*l*c-d*m*c;b[10]=e*j*q-g*i*q+g*h*t-d*j*t-e*h*c+d*i*c;b[14]=g*i*l-e*j*l-g*h*m+d*j*m+e*h*p-d*i*p;b[3]=k*m*q-i*o*q-k*l*t+h*o*t+i*l*s-h*m*s;b[7]=e*o*q-f*m*q+f*l*t-d*o*t-e*l*s+d*m*s;b[11]=f*i*q-e*k*q-f*h*t+d*k*t+e*h*s-d*i*s;b[15]=e*k*l-f*i*l+f*h*m-d*k*m-e*h*o+d*i*o;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=
Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*i,j=g*f,l=d*i,m=d*f;c[0]=h*i;c[4]=-h*f;c[8]=e;c[1]=j+l*e;c[5]=k-m*e;c[9]=-d*h;c[2]=m-k*e;c[6]=l+j*e;c[10]=g*h}else"YXZ"===b?(k=h*i,j=h*f,l=e*i,m=e*f,c[0]=k+m*d,c[4]=l*d-j,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=j*d-l,c[6]=m+k*d,c[10]=g*h):"ZXY"===b?(k=h*i,j=h*f,l=e*i,m=e*f,c[0]=k-m*d,c[4]=-g*f,c[8]=l+j*d,c[1]=j+l*d,c[5]=g*i,c[9]=m-k*d,c[2]=-g*e,c[6]=d,c[10]=g*h):"ZYX"===b?(k=g*i,j=g*f,l=d*i,m=d*f,c[0]=h*i,c[4]=l*e-j,c[8]=k*e+m,c[1]=h*f,c[5]=m*e+k,c[9]=
j*e-l,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,j=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=m-k*f,c[8]=l*f+j,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=j*f+l,c[10]=k-m*f):"XZY"===b&&(k=g*h,j=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=k*f+m,c[5]=g*i,c[9]=j*f-l,c[2]=l*f-j,c[6]=d*i,c[10]=m*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,k=c*h,c=c*i,j=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;b[0]=1-(j+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=1-(a+
e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+j);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=
b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],k=b[11],j=Math.cos(a),a=Math.sin(a);b[4]=j*c+a*g;b[5]=j*d+a*h;b[6]=j*e+a*i;b[7]=j*f+a*k;b[8]=j*g-a*c;b[9]=j*h-a*d;b[10]=j*i-a*e;b[11]=j*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],k=b[11],j=Math.cos(a),a=Math.sin(a);b[0]=j*c-a*g;b[1]=j*d-a*h;b[2]=j*e-a*i;b[3]=j*f-a*k;b[8]=j*g+a*c;b[9]=j*h+a*d;b[10]=
j*i+a*e;b[11]=j*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],k=b[7],j=Math.cos(a),a=Math.sin(a);b[0]=j*c+a*g;b[1]=j*d+a*h;b[2]=j*e+a*i;b[3]=j*f+a*k;b[4]=j*g-a*c;b[5]=j*h-a*d;b[6]=j*i-a*e;b[7]=j*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,
g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,k=Math.cos(b),j=Math.sin(b),l=1-k,m=d*e*l,o=d*f*l,l=e*f*l,d=d*j,p=e*j,j=f*j,f=g+(1-g)*k,g=m+j,e=o-p,m=m-j,h=h+(1-h)*k,j=l+d,o=o+p,l=l-d,i=i+(1-i)*k,k=c[0],d=c[1],p=c[2],q=c[3],t=c[4],s=c[5],y=c[6],w=c[7],r=c[8],B=c[9],v=c[10],u=c[11];c[0]=f*k+g*t+e*r;c[1]=f*d+g*s+e*B;c[2]=f*p+g*y+e*v;c[3]=f*q+g*w+e*u;c[4]=m*k+h*t+j*r;c[5]=m*d+h*s+j*B;c[6]=m*p+h*y+j*v;c[7]=m*q+h*w+j*u;c[8]=o*k+l*t+i*r;c[9]=o*d+l*s+i*B;c[10]=o*p+l*y+i*v;c[11]=o*q+l*w+i*u;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,k=e*g;this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,k*g+c,k*h-d*f,0,i*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,k=f-e;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/i;g[9]=0;g[13]=-((c+d)/i);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],i=c[6],k=c[7],j=c[8],l=c[9],m=c[10],o=c[11],p=c[12],q=c[13],t=c[14],c=c[15];b[0].set(f-a,k-g,o-j,c-p);b[1].set(f+a,k+g,o+j,c+p);b[2].set(f+d,k+h,o+l,c+q);b[3].set(f-d,k-h,o-l,c-q);b[4].set(f-e,k-i,o-m,c-t);b[5].set(f+e,k+i,o+m,c+t);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3;new a.Vector3;var f=new a.Vector3,g=new a.Matrix4,h=function(a,b){return a.distance-b.distance},i=new a.Vector3,k=new a.Vector3,j=new a.Vector3,l=function(a,b,c){i.sub(c,a);var d=i.dot(b),a=k.add(a,j.copy(b).multiplyScalar(d));return c.distanceTo(a)},m=function(a,b,c,d){i.sub(d,b);k.sub(c,b);j.sub(a,
b);var a=i.dot(i),b=i.dot(k),c=i.dot(j),e=k.dot(k),d=k.dot(j),f=1/(a*e-b*b),e=(e*c-b*d)*f,a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},o=function(h,i,j){if(h instanceof a.Particle){var k=l(i.origin,i.direction,h.matrixWorld.getPosition());if(k>h.scale.x)return j;j.push({distance:k,point:h.position,face:null,object:h})}else if(h instanceof a.Mesh){var o=h.geometry.boundingSphere.radius*h.matrixWorld.getMaxScaleOnAxis(),k=l(i.origin,i.direction,h.matrixWorld.getPosition());if(k>o)return j;var o=h.geometry,
p=o.vertices,B=h.material instanceof a.MeshFaceMaterial,v=!0===B?h.material.materials:null,k=h.material.side,u,x,F,C=i.precision;h.matrixRotationWorld.extractRotation(h.matrixWorld);b.copy(i.origin);g.getInverse(h.matrixWorld);c.copy(b);g.multiplyVector3(c);d.copy(i.direction);g.rotateAxis(d).normalize();for(var E=0,M=o.faces.length;E<M;E++){var D=o.faces[E],k=!0===B?v[D.materialIndex]:h.material;if(void 0!==k&&(k=k.side,e.sub(D.centroid,c),x=D.normal,u=d.dot(x),!(Math.abs(u)<C)&&(x=x.dot(e)/u,!(0>
x)&&(k===a.DoubleSide||(k===a.FrontSide?0>u:0<u)))))if(f.add(c,d.multiplyScalar(x)),D instanceof a.Face3)k=p[D.a],u=p[D.b],x=p[D.c],m(f,k,u,x)&&(u=h.matrixWorld.multiplyVector3(f.clone()),k=b.distanceTo(u),k<i.near||k>i.far||j.push({distance:k,point:u,face:D,faceIndex:E,object:h}));else if(D instanceof a.Face4&&(k=p[D.a],u=p[D.b],x=p[D.c],F=p[D.d],m(f,k,u,F)||m(f,u,x,F)))u=h.matrixWorld.multiplyVector3(f.clone()),k=b.distanceTo(u),k<i.near||k>i.far||j.push({distance:k,point:u,face:D,faceIndex:E,object:h})}}},
p=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)o(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&p(a,this,c);o(a,this,c);c.sort(h);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)o(a[d],this,c),!0===b&&p(a[d],this,c);c.sort(h);return c}})(THREE);
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,j,l){h=!1;b=f;c=g;d=j;e=l;a()};this.addPoint=function(f,g){!0===h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>
g?e:g);a()};this.add3Points=function(f,g,j,l,m,o){!0===h?(h=!1,b=f<j?f<m?f:m:j<m?j:m,c=g<l?g<o?g:o:l<o?l:o,d=f>j?f>m?f:m:j>m?j:m,e=g>l?g>o?g:o:l>o?l:o):(b=f<j?f<m?f<b?f:b:m<b?m:b:j<m?j<b?j:b:m<b?m:b,c=g<l?g<o?g<c?g:c:o<c?o:c:l<o?l<c?l:c:o<c?o:c,d=f>j?f>m?f>d?f:d:m>d?m:d:j>m?j>d?j:d:m>d?m:d,e=g>l?g>o?g>e?g:e:o>e?o:e:l>o?l>e?l:e:o>e?o:e);a()};this.addRectangle=function(f){!0===h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),
d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(a){if(a===
this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},
traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);
!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):
this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);
a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++)a.add(this.children[b].clone());
return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];
THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(k===l){var a=new THREE.RenderableVertex;j.push(a);l++;k++;return a}return j[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,i,k,j=[],l=0,m,o,p=[],q=0,t,s=[],y=0,w,r,B=[],v=0,u,x,F=[],C=0,E={objects:[],sprites:[],lights:[],elements:[]},M=new THREE.Vector3,D=new THREE.Vector4,K=new THREE.Matrix4,I=new THREE.Matrix4,N=new THREE.Matrix3,O=new THREE.Frustum,P=new THREE.Vector4,T=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);K.multiply(b.projectionMatrix,b.matrixWorldInverse);K.multiplyVector3(a);return a};
this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);K.multiply(b.matrixWorld,b.projectionMatrixInverse);K.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,l,J){var S=h.near,ca=h.far,la=!1,L,R,ea,W,da,V,fa,$,cb,Aa,ua,pa,xa,Ta,Ya;x=r=t=o=0;E.elements.length=0;g.updateMatrixWorld();
void 0===h.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);K.multiply(h.projectionMatrix,h.matrixWorldInverse);O.setFromMatrix(K);f=0;E.objects.length=0;E.sprites.length=0;E.lights.length=0;var Sa=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)E.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===O.contains(f))e=a(),e.object=f,null!==f.renderDepth?
e.z=f.renderDepth:(M.copy(f.matrixWorld.getPosition()),K.multiplyVector3(M),e.z=M.z),E.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(M.copy(f.matrixWorld.getPosition()),K.multiplyVector3(M),e.z=M.z),E.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(M.copy(f.matrixWorld.getPosition()),K.multiplyVector3(M),e.z=M.z),E.objects.push(e));Sa(f)}}};Sa(g);!0===l&&E.objects.sort(c);g=0;for(l=E.objects.length;g<
l;g++)if($=E.objects[g].object,cb=$.matrixWorld,k=0,$ instanceof THREE.Mesh){Aa=$.geometry;ea=Aa.vertices;ua=Aa.faces;Aa=Aa.faceVertexUvs;N.getInverse(cb);N.transpose();xa=$.material instanceof THREE.MeshFaceMaterial;Ta=!0===xa?$.material:null;L=0;for(R=ea.length;L<R;L++)i=b(),i.positionWorld.copy(ea[L]),cb.multiplyVector3(i.positionWorld),i.positionScreen.copy(i.positionWorld),K.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.visible=
i.positionScreen.z>S&&i.positionScreen.z<ca;ea=0;for(L=ua.length;ea<L;ea++)if(R=ua[ea],Ya=!0===xa?Ta.materials[R.materialIndex]:$.material,void 0!==Ya){V=Ya.side;if(R instanceof THREE.Face3)if(W=j[R.a],da=j[R.b],fa=j[R.c],!0===W.visible&&!0===da.visible&&!0===fa.visible)if(la=0>(fa.positionScreen.x-W.positionScreen.x)*(da.positionScreen.y-W.positionScreen.y)-(fa.positionScreen.y-W.positionScreen.y)*(da.positionScreen.x-W.positionScreen.x),V===THREE.DoubleSide||la===(V===THREE.FrontSide))o===q?(pa=
new THREE.RenderableFace3,p.push(pa),q++,o++,m=pa):m=p[o++],m.v1.copy(W),m.v2.copy(da),m.v3.copy(fa);else continue;else continue;else if(R instanceof THREE.Face4)if(W=j[R.a],da=j[R.b],fa=j[R.c],pa=j[R.d],!0===W.visible&&!0===da.visible&&!0===fa.visible&&!0===pa.visible)if(la=0>(pa.positionScreen.x-W.positionScreen.x)*(da.positionScreen.y-W.positionScreen.y)-(pa.positionScreen.y-W.positionScreen.y)*(da.positionScreen.x-W.positionScreen.x)||0>(da.positionScreen.x-fa.positionScreen.x)*(pa.positionScreen.y-
fa.positionScreen.y)-(da.positionScreen.y-fa.positionScreen.y)*(pa.positionScreen.x-fa.positionScreen.x),V===THREE.DoubleSide||la===(V===THREE.FrontSide)){if(t===y){var Oa=new THREE.RenderableFace4;s.push(Oa);y++;t++;m=Oa}else m=s[t++];m.v1.copy(W);m.v2.copy(da);m.v3.copy(fa);m.v4.copy(pa)}else continue;else continue;m.normalWorld.copy(R.normal);!1===la&&(V===THREE.BackSide||V===THREE.DoubleSide)&&m.normalWorld.negate();N.multiplyVector3(m.normalWorld).normalize();m.centroidWorld.copy(R.centroid);
cb.multiplyVector3(m.centroidWorld);m.centroidScreen.copy(m.centroidWorld);K.multiplyVector3(m.centroidScreen);fa=R.vertexNormals;W=0;for(da=fa.length;W<da;W++)pa=m.vertexNormalsWorld[W],pa.copy(fa[W]),!1===la&&(V===THREE.BackSide||V===THREE.DoubleSide)&&pa.negate(),N.multiplyVector3(pa).normalize();m.vertexNormalsLength=fa.length;W=0;for(da=Aa.length;W<da;W++)if(pa=Aa[W][ea],void 0!==pa){V=0;for(fa=pa.length;V<fa;V++)m.uvs[W][V]=pa[V]}m.color=R.color;m.material=Ya;m.z=m.centroidScreen.z;E.elements.push(m)}}else if($ instanceof
THREE.Line){I.multiply(K,cb);ea=$.geometry.vertices;W=b();W.positionScreen.copy(ea[0]);I.multiplyVector4(W.positionScreen);cb=$.type===THREE.LinePieces?2:1;L=1;for(R=ea.length;L<R;L++)W=b(),W.positionScreen.copy(ea[L]),I.multiplyVector4(W.positionScreen),0<(L+1)%cb||(da=j[k-2],P.copy(W.positionScreen),T.copy(da.positionScreen),!0===d(P,T)&&(P.multiplyScalar(1/P.w),T.multiplyScalar(1/T.w),r===v?(ua=new THREE.RenderableLine,B.push(ua),v++,r++,w=ua):w=B[r++],w.v1.positionScreen.copy(P),w.v2.positionScreen.copy(T),
w.z=Math.max(P.z,T.z),w.material=$.material,E.elements.push(w)))}g=0;for(l=E.sprites.length;g<l;g++)$=E.sprites[g].object,cb=$.matrixWorld,$ instanceof THREE.Particle&&(D.set(cb.elements[12],cb.elements[13],cb.elements[14],1),K.multiplyVector4(D),D.z/=D.w,0<D.z&&1>D.z&&(x===C?(S=new THREE.RenderableParticle,F.push(S),C++,x++,u=S):u=F[x++],u.object=$,u.x=D.x/D.w,u.y=D.y/D.w,u.z=D.z,u.rotation=$.rotation.z,u.scale.x=$.scale.x*Math.abs(u.x-(D.x+h.projectionMatrix.elements[0])/(D.w+h.projectionMatrix.elements[12])),
u.scale.y=$.scale.y*Math.abs(u.y-(D.y+h.projectionMatrix.elements[5])/(D.w+h.projectionMatrix.elements[13])),u.material=$.material,E.elements.push(u)));!0===J&&E.elements.sort(c);return E}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*
h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],i=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(i-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(i-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+i)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+i)/c,this.z=0.25*c);return this},inverse:function(){this.conjugate().normalize();
return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,h=b.y,i=b.z,k=b.w;this.x=c*k+d*i-e*h+f*g;this.y=-c*i+d*k+e*g+f*h;this.z=c*h-
d*g+e*k+f*i;this.w=-c*g-d*h-e*i+f*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z,a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,i=this.w,k=i*c+g*e-h*d,j=i*d+h*c-f*e,l=i*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=k*i+c*-f+j*-h-l*-g;b.y=j*i+c*-g+l*-f-k*-h;b.z=l*i+c*-h+k*-g-j*-f;return b},slerpSelf:function(a,b){var c=
this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(0.001>Math.abs(i))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/i;h=Math.sin(b*h)/i;this.w=f*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+this.y*h;this.z=e*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,
this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var b=Math.acos(e),f=Math.sqrt(1-e*e);if(0.001>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=
this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix3;b.getInverse(a).transpose();for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal).normalize();for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]).normalize();a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=
this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;
a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.normalize(),c.normal.copy(g)},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,
new THREE.Vector3]:d instanceof THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{e=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}if(a){var f,g,h,i=new THREE.Vector3,k=new THREE.Vector3,j=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],i.sub(g,f),k.sub(a,f),i.crossSelf(k),
e[d.a].addSelf(i),e[d.b].addSelf(i),e[d.c].addSelf(i)):d instanceof THREE.Face4&&(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],h=this.vertices[d.d],j.sub(h,f),k.sub(a,f),j.crossSelf(k),e[d.a].addSelf(j),e[d.b].addSelf(j),e[d.d].addSelf(j),l.sub(h,g),m.sub(f,g),l.crossSelf(m),e[d.b].addSelf(l),e[d.c].addSelf(l),e[d.d].addSelf(l))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal)):
d instanceof THREE.Face4&&(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal),e[d.d].addSelf(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),d.vertexNormals[3].copy(e[d.d]))},
computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<
b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(k)}g=this.morphNormals[a];f.vertices=
this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=g.faceNormals[c],k=g.vertexNormals[c],i.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,
e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,x){h=a.vertices[b];i=a.vertices[c];k=a.vertices[d];j=g[e];l=g[f];m=g[x];o=i.x-h.x;p=k.x-h.x;q=i.y-h.y;t=k.y-h.y;s=i.z-h.z;y=k.z-h.z;w=l.u-j.u;r=m.u-j.u;B=l.v-j.v;v=m.v-j.v;u=1/(w*v-r*B);E.set((v*o-B*p)*u,(v*q-B*t)*u,(v*s-B*y)*u);M.set((w*p-r*o)*u,(w*t-r*q)*u,(w*y-r*s)*u);F[b].addSelf(E);F[c].addSelf(E);F[d].addSelf(E);C[b].addSelf(M);C[c].addSelf(M);C[d].addSelf(M)}var b,c,d,e,f,g,h,i,k,j,l,m,o,p,q,t,s,y,
w,r,B,v,u,x,F=[],C=[],E=new THREE.Vector3,M=new THREE.Vector3,D=new THREE.Vector3,K=new THREE.Vector3,I=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)F[b]=new THREE.Vector3,C[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var N=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<
f.vertexNormals.length;d++)I.copy(f.vertexNormals[d]),e=f[N[d]],x=F[e],D.copy(x),D.subSelf(I.multiplyScalar(I.dot(x))).normalize(),K.cross(f.vertexNormals[d],x),e=K.dot(C[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(D.x,D.y,D.z,e)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});
if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)(a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z)?b.z=a.z:a.z>c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=
0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,i;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];
else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(i=this.faceVertexUvs[d][f])&&i.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=
b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.UV(e[g].u,e[g].v));a.faceVertexUvs[0].push(f)}return a},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];
THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix3,b.getInverse(a).transpose(),b.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,
Infinity,Infinity),max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)(c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z)?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});
var a=this.attributes.position.array;if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var e=this.offsets,f=this.attributes.index.array,g=this.attributes.position.array,h=this.attributes.normal.array,i,k,j,l,m,o,p=new THREE.Vector3,q=new THREE.Vector3,t=new THREE.Vector3,s=new THREE.Vector3,y=new THREE.Vector3;c=0;for(d=e.length;c<d;++c){b=e[c].start;i=e[c].count;var w=e[c].index;a=b;for(b+=i;a<b;a+=3)i=w+f[a],k=w+f[a+1],j=w+f[a+2],l=g[3*i],m=g[3*i+1],o=g[3*i+2],p.set(l,m,o),l=g[3*k],m=g[3*k+1],o=g[3*k+2],q.set(l,m,o),l=g[3*j],m=g[3*j+1],o=g[3*j+2],t.set(l,m,o),s.sub(t,q),y.sub(p,
q),s.crossSelf(y),h[3*i]+=s.x,h[3*i+1]+=s.y,h[3*i+2]+=s.z,h[3*k]+=s.x,h[3*k+1]+=s.y,h[3*k+2]+=s.z,h[3*j]+=s.x,h[3*j+1]+=s.y,h[3*j+2]+=s.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){ba.x=d[3*a];ba.y=d[3*a+1];ba.z=d[3*a+2];Q.copy(ba);J=i[a];P.copy(J);P.subSelf(ba.multiplyScalar(ba.dot(J))).normalize();
T.cross(Q,J);S=T.dot(k[a]);G=0>S?-1:1;h[4*a]=P.x;h[4*a+1]=P.y;h[4*a+2]=P.z;h[4*a+3]=G}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=
4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,i=[],k=[],g=0;g<f;g++)i[g]=new THREE.Vector3,k[g]=new THREE.Vector3;var j,l,m,o,p,q,t,s,y,w,r,B,v,u,x,f=new THREE.Vector3,g=new THREE.Vector3,F,C,E,M,D,K,I,N=this.offsets;E=0;for(M=N.length;E<M;++E){C=N[E].start;D=N[E].count;var O=N[E].index;F=C;for(C+=D;F<C;F+=3)D=O+b[F],K=O+b[F+1],I=O+b[F+2],j=c[3*D],l=c[3*D+1],m=c[3*D+2],o=c[3*K],p=c[3*K+1],q=c[3*K+2],t=c[3*I],s=c[3*I+1],y=c[3*
I+2],w=e[2*D],r=e[2*D+1],B=e[2*K],v=e[2*K+1],u=e[2*I],x=e[2*I+1],o-=j,j=t-j,p-=l,l=s-l,q-=m,m=y-m,B-=w,w=u-w,v-=r,r=x-r,x=1/(B*r-w*v),f.set((r*o-v*j)*x,(r*p-v*l)*x,(r*q-v*m)*x),g.set((B*j-w*o)*x,(B*l-w*p)*x,(B*m-w*q)*x),i[D].addSelf(f),i[K].addSelf(f),i[I].addSelf(f),k[D].addSelf(g),k[K].addSelf(g),k[I].addSelf(g)}var P=new THREE.Vector3,T=new THREE.Vector3,ba=new THREE.Vector3,Q=new THREE.Vector3,G,J,S;E=0;for(M=N.length;E<M;++E){C=N[E].start;D=N[E].count;O=N[E].index;F=C;for(C+=D;F<C;F+=3)D=O+b[F],
K=O+b[F+1],I=O+b[F+2],a(D),a(K),a(I)}this.tangentsNeedUpdate=this.hasTangents=!0}},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,k,j,l,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];j=this.points[c[1]];l=this.points[c[2]];m=this.points[c[3]];h=g*g;i=g*h;d.x=b(k.x,j.x,l.x,m.x,g,h,i);d.y=b(k.y,j.y,l.y,m.y,g,h,i);d.z=b(k.z,j.z,l.z,m.z,g,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=i,e=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,j=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1];g=Math.ceil(a*c/j.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);
THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};
THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=
new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,i,k,t){var s=f.toLowerCase().endsWith(".dds"),y=b+"/"+f;if(s){var w=THREE.ImageUtils.loadCompressedTexture(y);a[e]=w}else w=document.createElement("canvas"),a[e]=new THREE.Texture(w);a[e].sourceFile=f;if(h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]))a[e].wrapT=THREE.RepeatWrapping;i&&a[e].offset.set(i[0],i[1]);if(k&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},
void 0!==f[k[0]]&&(a[e].wrapS=f[k[0]]),void 0!==f[k[1]]))a[e].wrapT=f[k[1]];t&&(a[e].anisotropy=t);if(!s){var r=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);r.image.width=a;r.image.height=b;r.image.getContext("2d").drawImage(this,0,0,a,b)}else r.image=this;r.needsUpdate=true};a.crossOrigin=g.crossOrigin;a.src=y}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",i={color:15658734,opacity:1,map:null,
lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(i.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)i.transparent=a.transparent;void 0!==a.depthTest&&(i.depthTest=a.depthTest);void 0!==a.depthWrite&&(i.depthWrite=a.depthWrite);void 0!==a.visible&&(i.visible=a.visible);void 0!==a.flipSided&&(i.side=THREE.BackSide);
void 0!==a.doubleSided&&(i.side=THREE.DoubleSide);void 0!==a.wireframe&&(i.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?i.vertexColors=THREE.FaceColors:a.vertexColors&&(i.vertexColors=THREE.VertexColors));a.colorDiffuse?i.color=f(a.colorDiffuse):a.DbgColor&&(i.color=a.DbgColor);a.colorSpecular&&(i.specular=f(a.colorSpecular));a.colorAmbient&&(i.ambient=f(a.colorAmbient));a.transparency&&(i.opacity=a.transparency);a.specularCoef&&(i.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(i,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(i,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(i,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(i,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(i,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(i.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=i.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),i.map&&(k.tDiffuse.value=i.map,k.enableDiffuse.value=!0),i.specularMap&&(k.tSpecular.value=i.specularMap,k.enableSpecular.value=!0),i.lightMap&&(k.tAO.value=i.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(i.color),
k.uSpecularColor.value.setHex(i.specular),k.uAmbientColor.value.setHex(i.ambient),k.uShininess.value=i.shininess,void 0!==i.opacity&&(k.uOpacity.value=i.opacity),i=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0})):i=new THREE[h](i);void 0!==a.DbgName&&(i.name=a.DbgName);return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c&&"string"===typeof c?c:this.extractUrlBase(a),d=d&&"string"===typeof d?d:this.extractUrlBase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):
2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(){var b,c,d,e,k,j,l,m,o,p,q,t,s,y,w,r;function B(a){return a%4?4-a%4:0}function v(a,b){return(new Uint8Array(a,b,1))[0]}function u(a,b){return(new Uint32Array(a,b,1))[0]}function x(b,c){var d,e,f,g,h,i,j,k=new Uint32Array(a,c,3*b);for(d=0;d<b;d++)e=k[3*d],f=k[3*d+1],g=k[3*d+2],h=O[2*e],e=O[2*e+1],i=O[2*f],j=O[2*f+1],f=O[2*g],g=O[2*g+1],K.faceVertexUvs[0].push([new THREE.UV(h,e),new THREE.UV(i,j),new THREE.UV(f,g)])}function F(b,
c){var d,e,f,g,h,i,j,k,m,l=new Uint32Array(a,c,4*b);for(d=0;d<b;d++)e=l[4*d],f=l[4*d+1],g=l[4*d+2],h=l[4*d+3],i=O[2*e],e=O[2*e+1],j=O[2*f],k=O[2*f+1],f=O[2*g],m=O[2*g+1],g=O[2*h],h=O[2*h+1],K.faceVertexUvs[0].push([new THREE.UV(i,e),new THREE.UV(j,k),new THREE.UV(f,m),new THREE.UV(g,h)])}function C(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=i[d],K.faces.push(new THREE.Face3(e,f,g,null,null,h))}function E(b,c,d){for(var e,
f,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],i=j[d],K.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function M(b,c,d,e){for(var f,g,h,i,j,k,m,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),l=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];j=d[3*e];k=d[3*e+1];m=d[3*e+2];i=l[e];var o=N[3*k],p=N[3*k+1];k=N[3*k+2];var r=N[3*m],q=N[3*m+1];m=N[3*m+2];K.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(N[3*
j],N[3*j+1],N[3*j+2]),new THREE.Vector3(o,p,k),new THREE.Vector3(r,q,m)],null,i))}}function D(b,c,d,e){for(var f,g,h,i,j,k,m,l,o,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),p=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];i=c[4*e+3];k=d[4*e];m=d[4*e+1];l=d[4*e+2];o=d[4*e+3];j=p[e];var r=N[3*m],q=N[3*m+1];m=N[3*m+2];var s=N[3*l],t=N[3*l+1];l=N[3*l+2];var u=N[3*o],w=N[3*o+1];o=N[3*o+2];K.faces.push(new THREE.Face4(f,g,h,i,[new THREE.Vector3(N[3*k],N[3*k+1],N[3*k+2]),new THREE.Vector3(r,
q,m),new THREE.Vector3(s,t,l),new THREE.Vector3(u,w,o)],null,j))}}var K=this,I=0,N=[],O=[],P,T,ba;THREE.Geometry.call(this);r=a;T=I;y=new Uint8Array(r,T,12);p="";for(s=0;12>s;s++)p+=String.fromCharCode(y[T+s]);b=v(r,T+12);v(r,T+13);v(r,T+14);v(r,T+15);c=v(r,T+16);d=v(r,T+17);e=v(r,T+18);k=v(r,T+19);j=u(r,T+20);l=u(r,T+20+4);m=u(r,T+20+8);o=u(r,T+20+12);p=u(r,T+20+16);q=u(r,T+20+20);t=u(r,T+20+24);s=u(r,T+20+28);y=u(r,T+20+32);w=u(r,T+20+36);r=u(r,T+20+40);I+=b;T=3*c+k;ba=4*c+k;P=o*T;b=p*(T+3*d);c=
q*(T+3*e);k=t*(T+3*d+3*e);T=s*ba;d=y*(ba+4*d);e=w*(ba+4*e);ba=I;var I=new Float32Array(a,I,3*j),Q,G,J,S;for(Q=0;Q<j;Q++)G=I[3*Q],J=I[3*Q+1],S=I[3*Q+2],K.vertices.push(new THREE.Vector3(G,J,S));j=I=ba+3*j*Float32Array.BYTES_PER_ELEMENT;if(l){I=new Int8Array(a,I,3*l);for(ba=0;ba<l;ba++)Q=I[3*ba],G=I[3*ba+1],J=I[3*ba+2],N.push(Q/127,G/127,J/127)}I=j+3*l*Int8Array.BYTES_PER_ELEMENT;l=I+=B(3*l);if(m){j=new Float32Array(a,I,2*m);for(I=0;I<m;I++)ba=j[2*I],Q=j[2*I+1],O.push(ba,Q)}m=I=l+2*m*Float32Array.BYTES_PER_ELEMENT;
P=m+P+B(2*o);l=P+b+B(2*p);b=l+c+B(2*q);c=b+k+B(2*t);T=c+T+B(2*s);k=T+d+B(2*y);d=k+e+B(2*w);q&&(e=l+3*q*Uint32Array.BYTES_PER_ELEMENT,C(q,l,e+3*q*Uint32Array.BYTES_PER_ELEMENT),x(q,e));t&&(q=b+3*t*Uint32Array.BYTES_PER_ELEMENT,e=q+3*t*Uint32Array.BYTES_PER_ELEMENT,M(t,b,q,e+3*t*Uint32Array.BYTES_PER_ELEMENT),x(t,e));w&&(t=k+4*w*Uint32Array.BYTES_PER_ELEMENT,E(w,k,t+4*w*Uint32Array.BYTES_PER_ELEMENT),F(w,t));r&&(w=d+4*r*Uint32Array.BYTES_PER_ELEMENT,t=w+4*r*Uint32Array.BYTES_PER_ELEMENT,D(r,d,w,t+4*
r*Uint32Array.BYTES_PER_ELEMENT),F(r,t));o&&C(o,m,m+3*o*Uint32Array.BYTES_PER_ELEMENT);p&&(o=P+3*p*Uint32Array.BYTES_PER_ELEMENT,M(p,P,o,o+3*p*Uint32Array.BYTES_PER_ELEMENT));s&&E(s,c,c+4*s*Uint32Array.BYTES_PER_ELEMENT);y&&(p=T+4*y*Uint32Array.BYTES_PER_ELEMENT,D(y,T,p,p+4*y*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals()};e.prototype=Object.create(THREE.Geometry.prototype);e=new e(c);c=this.initMaterials(d,c);this.needsTangents(c)&&e.computeTangents();b(e,c)};
THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};
THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.withCredentials=this.withCredentials;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===
f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1,f,g,h,i,k,j,l,m,o,p,q,t,s,y,w,r=a.faces;p=a.vertices;var B=a.normals,v=a.colors,u=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&u++;for(f=0;f<u;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];i=0;for(k=p.length;i<k;)j=new THREE.Vector3,j.x=p[i++]*e,j.y=p[i++]*e,j.z=p[i++]*e,d.vertices.push(j);i=0;for(k=r.length;i<k;){p=r[i++];j=p&1;h=p&2;f=p&4;g=p&8;m=p&16;l=p&32;q=p&64;p&=128;j?(t=new THREE.Face4,
t.a=r[i++],t.b=r[i++],t.c=r[i++],t.d=r[i++],j=4):(t=new THREE.Face3,t.a=r[i++],t.b=r[i++],t.c=r[i++],j=3);h&&(h=r[i++],t.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<u;f++)s=a.uvs[f],o=r[i++],w=s[2*o],o=s[2*o+1],d.faceUvs[f][h]=new THREE.UV(w,o);if(g)for(f=0;f<u;f++){s=a.uvs[f];y=[];for(g=0;g<j;g++)o=r[i++],w=s[2*o],o=s[2*o+1],y[g]=new THREE.UV(w,o);d.faceVertexUvs[f][h]=y}m&&(m=3*r[i++],g=new THREE.Vector3,g.x=B[m++],g.y=B[m++],g.z=B[m],t.normal=g);if(l)for(f=0;f<j;f++)m=3*r[i++],g=new THREE.Vector3,
g.x=B[m++],g.y=B[m++],g.z=B[m],t.vertexNormals.push(g);q&&(l=r[i++],l=new THREE.Color(v[l]),t.color=l);if(p)for(f=0;f<j;f++)l=r[i++],l=new THREE.Color(v[l]),t.vertexColors.push(l);d.faces.push(t)}if(a.skinWeights){i=0;for(k=a.skinWeights.length;i<k;i+=2)r=a.skinWeights[i],B=a.skinWeights[i+1],d.skinWeights.push(new THREE.Vector4(r,B,0,0))}if(a.skinIndices){i=0;for(k=a.skinIndices.length;i<k;i+=2)r=a.skinIndices[i],B=a.skinIndices[i+1],d.skinIndices.push(new THREE.Vector4(r,B,0,0))}d.bones=a.bones;
d.animation=a.animation;if(void 0!==a.morphTargets){i=0;for(k=a.morphTargets.length;i<k;i++){d.morphTargets[i]={};d.morphTargets[i].name=a.morphTargets[i].name;d.morphTargets[i].vertices=[];v=d.morphTargets[i].vertices;u=a.morphTargets[i].vertices;r=0;for(B=u.length;r<B;r+=3)p=new THREE.Vector3,p.x=u[r]*e,p.y=u[r+1]*e,p.z=u[r+2]*e,v.push(p)}}if(void 0!==a.morphColors){i=0;for(k=a.morphColors.length;i<k;i++){d.morphColors[i]={};d.morphColors[i].name=a.morphColors[i].name;d.morphColors[i].colors=[];
B=d.morphColors[i].colors;v=a.morphColors[i].colors;e=0;for(r=v.length;e<r;e+=3)u=new THREE.Color(16755200),u.setRGB(v[e],v[e+1],v[e+2]),B.push(u)}}d.computeCentroids();d.computeFaceNormals();a=this.initMaterials(a.materials,c);this.needsTangents(a)&&d.computeTangents();b(d,a)};
THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:l+"/"+a}function e(){f(Q.scene,J.objects)}function f(a,b){for(var c in b)if(void 0===Q.objects[c]){var e=b[c],g=null;if(e.type&&e.type in j.hierarchyHandlerMap&&void 0===e.loading){var i={},k;for(k in t)"type"!==k&&"url"!==k&&(i[k]=t[k]);C=Q.materials[e.material];e.loading=!0;var m=j.hierarchyHandlerMap[e.type].loaderObject;m.addEventListener?(m.addEventListener("load",h(c,a,C,e)),m.load(d(e.url,J.urlBaseType))):
m.options?m.load(d(e.url,J.urlBaseType),h(c,a,C,e)):m.load(d(e.url,J.urlBaseType),h(c,a,C,e),i)}else if(void 0!==e.geometry){if(F=Q.geometries[e.geometry]){g=!1;C=Q.materials[e.material];g=C instanceof THREE.ShaderMaterial;w=e.position;r=e.rotation;B=e.quaternion;v=e.scale;s=e.matrix;B=0;e.material||(C=new THREE.MeshFaceMaterial(Q.face_materials[e.geometry]));C instanceof THREE.MeshFaceMaterial&&0===C.materials.length&&(C=new THREE.MeshFaceMaterial(Q.face_materials[e.geometry]));if(C instanceof THREE.MeshFaceMaterial)for(i=
0;i<C.materials.length;i++)g=g||C.materials[i]instanceof THREE.ShaderMaterial;g&&F.computeTangents();e.skin?g=new THREE.SkinnedMesh(F,C):e.morph?(g=new THREE.MorphAnimMesh(F,C),void 0!==e.duration&&(g.duration=e.duration),void 0!==e.time&&(g.time=e.time),void 0!==e.mirroredLoop&&(g.mirroredLoop=e.mirroredLoop),C.morphNormals&&F.computeMorphNormals()):g=new THREE.Mesh(F,C);g.name=c;s?(g.matrixAutoUpdate=!1,g.matrix.set(s[0],s[1],s[2],s[3],s[4],s[5],s[6],s[7],s[8],s[9],s[10],s[11],s[12],s[13],s[14],
s[15])):(g.position.set(w[0],w[1],w[2]),B?(g.quaternion.set(B[0],B[1],B[2],B[3]),g.useQuaternion=!0):g.rotation.set(r[0],r[1],r[2]),g.scale.set(v[0],v[1],v[2]));g.visible=e.visible;g.castShadow=e.castShadow;g.receiveShadow=e.receiveShadow;a.add(g);Q.objects[c]=g}}else"DirectionalLight"===e.type||"PointLight"===e.type||"AmbientLight"===e.type?(I=void 0!==e.color?e.color:16777215,N=void 0!==e.intensity?e.intensity:1,"DirectionalLight"===e.type?(w=e.direction,K=new THREE.DirectionalLight(I,N),K.position.set(w[0],
w[1],w[2]),e.target&&(G.push({object:K,targetName:e.target}),K.target=null)):"PointLight"===e.type?(w=e.position,y=e.distance,K=new THREE.PointLight(I,N,y),K.position.set(w[0],w[1],w[2])):"AmbientLight"===e.type&&(K=new THREE.AmbientLight(I)),a.add(K),K.name=c,Q.lights[c]=K,Q.objects[c]=K):"PerspectiveCamera"===e.type||"OrthographicCamera"===e.type?("PerspectiveCamera"===e.type?E=new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far):"OrthographicCamera"===e.type&&(E=new THREE.OrthographicCamera(u.left,
u.right,u.top,u.bottom,u.near,u.far)),w=e.position,E.position.set(w[0],w[1],w[2]),a.add(E),E.name=c,Q.cameras[c]=E,Q.objects[c]=E):(w=e.position,r=e.rotation,B=e.quaternion,v=e.scale,B=0,g=new THREE.Object3D,g.name=c,g.position.set(w[0],w[1],w[2]),B?(g.quaternion.set(B[0],B[1],B[2],B[3]),g.useQuaternion=!0):g.rotation.set(r[0],r[1],r[2]),g.scale.set(v[0],v[1],v[2]),g.visible=void 0!==e.visible?e.visible:!1,a.add(g),Q.objects[c]=g,Q.empties[c]=g);if(g){if(void 0!==e.properties)for(var l in e.properties)g.properties[l]=
e.properties[l];void 0!==e.children&&f(g,e.children)}}}function g(a){return function(b,c){Q.geometries[a]=b;Q.face_materials[a]=c;e();O-=1;j.onLoadComplete();k()}}function h(a,b,c,d){return function(f){var f=f.content?f.content:f.dae?f.scene:f,g=d.position,h=d.rotation,i=d.quaternion,m=d.scale;f.position.set(g[0],g[1],g[2]);i?(f.quaternion.set(i[0],i[1],i[2],i[3]),f.useQuaternion=!0):f.rotation.set(h[0],h[1],h[2]);f.scale.set(m[0],m[1],m[2]);c&&f.traverse(function(a){a.material=c});b.add(f);Q.objects[a]=
f;e();O-=1;j.onLoadComplete();k()}}function i(a){return function(b,c){Q.geometries[a]=b;Q.face_materials[a]=c}}function k(){j.callbackProgress({totalModels:T,totalTextures:ba,loadedModels:T-O,loadedTextures:ba-P},Q);j.onLoadProgress();if(0===O&&0===P){for(var a=0;a<G.length;a++){var c=G[a],d=Q.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,Q.scene.add(c.object.target));c.object.target.properties.targetInverse=c.object}b(Q)}}var j=this,l=THREE.Loader.prototype.extractUrlBase(c),
m,o,p,q,t,s,y,w,r,B,v,u,x,F,C,E,M,D,K,I,N,O,P,T,ba,Q,G=[],J=a,S;for(S in this.geometryHandlerMap)a=this.geometryHandlerMap[S].loaderClass,this.geometryHandlerMap[S].loaderObject=new a;for(S in this.hierarchyHandlerMap)a=this.hierarchyHandlerMap[S].loaderClass,this.hierarchyHandlerMap[S].loaderObject=new a;P=O=0;Q={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(J.transform&&(S=J.transform.position,a=J.transform.rotation,
c=J.transform.scale,S&&Q.scene.position.set(S[0],S[1],S[2]),a&&Q.scene.rotation.set(a[0],a[1],a[2]),c&&Q.scene.scale.set(c[0],c[1],c[2]),S||a||c))Q.scene.updateMatrix(),Q.scene.updateMatrixWorld();S=function(a){return function(){P-=a;k();j.onLoadComplete()}};for(p in J.fogs)a=J.fogs[p],"linear"===a.type?M=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(M=new THREE.FogExp2(0,a.density)),u=a.color,M.color.setRGB(u[0],u[1],u[2]),Q.fogs[p]=M;for(m in J.geometries)t=J.geometries[m],t.type in this.geometryHandlerMap&&
(O+=1,j.onLoadStart());for(var ca in J.objects)p=J.objects[ca],p.type&&p.type in this.hierarchyHandlerMap&&(O+=1,j.onLoadStart());T=O;for(m in J.geometries)if(t=J.geometries[m],"cube"===t.type)F=new THREE.CubeGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments),Q.geometries[m]=F;else if("plane"===t.type)F=new THREE.PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments),Q.geometries[m]=F;else if("sphere"===t.type)F=new THREE.SphereGeometry(t.radius,t.widthSegments,
t.heightSegments),Q.geometries[m]=F;else if("cylinder"===t.type)F=new THREE.CylinderGeometry(t.topRad,t.botRad,t.height,t.radSegs,t.heightSegs),Q.geometries[m]=F;else if("torus"===t.type)F=new THREE.TorusGeometry(t.radius,t.tube,t.segmentsR,t.segmentsT),Q.geometries[m]=F;else if("icosahedron"===t.type)F=new THREE.IcosahedronGeometry(t.radius,t.subdivisions),Q.geometries[m]=F;else if(t.type in this.geometryHandlerMap){ca={};for(D in t)"type"!==D&&"url"!==D&&(ca[D]=t[D]);this.geometryHandlerMap[t.type].loaderObject.load(d(t.url,
J.urlBaseType),g(m),ca)}else"embedded"===t.type&&(ca=J.embeds[t.id],ca.metadata=J.metadata,ca&&this.geometryHandlerMap.ascii.loaderObject.createModel(ca,i(m),""));for(q in J.textures)if(m=J.textures[q],m.url instanceof Array){P+=m.url.length;for(D=0;D<m.url.length;D++)j.onLoadStart()}else P+=1,j.onLoadStart();ba=P;for(q in J.textures){m=J.textures[q];void 0!==m.mapping&&void 0!==THREE[m.mapping]&&(m.mapping=new THREE[m.mapping]);if(m.url instanceof Array){ca=m.url.length;p=[];for(D=0;D<ca;D++)p[D]=
d(m.url[D],J.urlBaseType);D=(D=p[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(p,m.mapping,S(ca)):THREE.ImageUtils.loadTextureCube(p,m.mapping,S(ca))}else{D=m.url.toLowerCase().endsWith(".dds");ca=d(m.url,J.urlBaseType);p=S(1);D=D?THREE.ImageUtils.loadCompressedTexture(ca,m.mapping,p):THREE.ImageUtils.loadTexture(ca,m.mapping,p);void 0!==THREE[m.minFilter]&&(D.minFilter=THREE[m.minFilter]);void 0!==THREE[m.magFilter]&&(D.magFilter=THREE[m.magFilter]);m.anisotropy&&(D.anisotropy=
m.anisotropy);if(m.repeat&&(D.repeat.set(m.repeat[0],m.repeat[1]),1!==m.repeat[0]&&(D.wrapS=THREE.RepeatWrapping),1!==m.repeat[1]))D.wrapT=THREE.RepeatWrapping;m.offset&&D.offset.set(m.offset[0],m.offset[1]);if(m.wrap&&(ca={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==ca[m.wrap[0]]&&(D.wrapS=ca[m.wrap[0]]),void 0!==ca[m.wrap[1]]))D.wrapT=ca[m.wrap[1]]}Q.textures[q]=D}for(o in J.materials){s=J.materials[o];for(x in s.parameters)"envMap"===x||"map"===x||"lightMap"===x||
"bumpMap"===x?s.parameters[x]=Q.textures[s.parameters[x]]:"shading"===x?s.parameters[x]="flat"===s.parameters[x]?THREE.FlatShading:THREE.SmoothShading:"side"===x?s.parameters[x]="double"==s.parameters[x]?THREE.DoubleSide:"back"==s.parameters[x]?THREE.BackSide:THREE.FrontSide:"blending"===x?s.parameters[x]=s.parameters[x]in THREE?THREE[s.parameters[x]]:THREE.NormalBlending:"combine"===x?s.parameters[x]="MixOperation"==s.parameters[x]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===x?"face"==
s.parameters[x]?s.parameters[x]=THREE.FaceColors:s.parameters[x]&&(s.parameters[x]=THREE.VertexColors):"wrapRGB"===x&&(q=s.parameters[x],s.parameters[x]=new THREE.Vector3(q[0],q[1],q[2]));void 0!==s.parameters.opacity&&1>s.parameters.opacity&&(s.parameters.transparent=!0);s.parameters.normalMap?(q=THREE.ShaderUtils.lib.normal,S=THREE.UniformsUtils.clone(q.uniforms),m=s.parameters.color,D=s.parameters.specular,ca=s.parameters.ambient,p=s.parameters.shininess,S.tNormal.value=Q.textures[s.parameters.normalMap],
s.parameters.normalScale&&S.uNormalScale.value.set(s.parameters.normalScale[0],s.parameters.normalScale[1]),s.parameters.map&&(S.tDiffuse.value=s.parameters.map,S.enableDiffuse.value=!0),s.parameters.envMap&&(S.tCube.value=s.parameters.envMap,S.enableReflection.value=!0,S.uReflectivity.value=s.parameters.reflectivity),s.parameters.lightMap&&(S.tAO.value=s.parameters.lightMap,S.enableAO.value=!0),s.parameters.specularMap&&(S.tSpecular.value=Q.textures[s.parameters.specularMap],S.enableSpecular.value=
!0),s.parameters.displacementMap&&(S.tDisplacement.value=Q.textures[s.parameters.displacementMap],S.enableDisplacement.value=!0,S.uDisplacementBias.value=s.parameters.displacementBias,S.uDisplacementScale.value=s.parameters.displacementScale),S.uDiffuseColor.value.setHex(m),S.uSpecularColor.value.setHex(D),S.uAmbientColor.value.setHex(ca),S.uShininess.value=p,s.parameters.opacity&&(S.uOpacity.value=s.parameters.opacity),C=new THREE.ShaderMaterial({fragmentShader:q.fragmentShader,vertexShader:q.vertexShader,
uniforms:S,lights:!0,fog:!0})):C=new THREE[s.type](s.parameters);Q.materials[o]=C}for(o in J.materials)if(s=J.materials[o],s.parameters.materials){x=[];for(D=0;D<s.parameters.materials.length;D++)x.push(Q.materials[s.parameters.materials[D]]);Q.materials[o].materials=x}e();Q.cameras&&J.defaults.camera&&(Q.currentCamera=Q.cameras[J.defaults.camera]);Q.fogs&&J.defaults.fog&&(Q.scene.fog=Q.fogs[J.defaults.fog]);u=J.defaults.bgcolor;Q.bgColor=new THREE.Color;Q.bgColor.setRGB(u[0],u[1],u[2]);Q.bgColorAlpha=
J.defaults.bgalpha;j.callbackSync(Q);k()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.Texture=function(a,b,c,d,e,f,g,h,i){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.name="";this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);
-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,k){THREE.Texture.call(this,null,f,g,h,i,k,d,e);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,k){THREE.Texture.call(this,null,f,g,h,i,k,d,e);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};
THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=
0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,
this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)if(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time)this.time=0,this.directionBackwards=!1}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(a){THREE.Object3D.call(this);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==
a.useScreenCoordinates?a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center.clone();this.fog=void 0!==a.fog?a.fog:!1;this.rotation3d=this.rotation;this.rotation=
0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.alphaTest=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite({}));a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.fog=this.fog;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,
a);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.CanvasRenderer=function(a){function b(a){y!==a&&(y=q.globalAlpha=a)}function c(a){w!==a&&(a===THREE.NormalBlending?q.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?q.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(q.globalCompositeOperation="darker"),w=a)}function d(a){r!==a&&(r=q.strokeStyle=a)}function e(a){B!==a&&(B=q.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},f=this,g,h,i,k=new THREE.Projector,j=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),l,m,o,p,q=j.getContext("2d"),t=new THREE.Color(0),s=0,y=1,w=0,r=null,B=null,v=null,u=null,x=null,F,C,E,M,D=new THREE.RenderableVertex,K=new THREE.RenderableVertex,I,N,O,P,T,ba,Q,G,J,S,ca,la,L=new THREE.Color,R=new THREE.Color,ea=new THREE.Color,W=new THREE.Color,da=new THREE.Color,V=new THREE.Color,fa=new THREE.Color,$={},cb={},Aa,ua,pa,xa,Ta,Ya,Sa,Oa,Ua,qb,fb=new THREE.Rectangle,va=new THREE.Rectangle,ya=new THREE.Rectangle,mb=!1,qa=new THREE.Color,Ma=new THREE.Color,
Fa=new THREE.Color,wa=new THREE.Vector3,ka,Qa,rb,Ea,Va,jb,a=16;ka=document.createElement("canvas");ka.width=ka.height=2;Qa=ka.getContext("2d");Qa.fillStyle="rgba(0,0,0,1)";Qa.fillRect(0,0,2,2);rb=Qa.getImageData(0,0,2,2);Ea=rb.data;Va=document.createElement("canvas");Va.width=Va.height=a;jb=Va.getContext("2d");jb.translate(-a/2,-a/2);jb.scale(a,a);a--;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){l=a;m=b;o=
Math.floor(l/2);p=Math.floor(m/2);j.width=l;j.height=m;fb.set(-o,-p,o,p);va.set(-o,-p,o,p);y=1;w=0;x=u=v=B=r=null};this.setClearColor=function(a,b){t.copy(a);s=void 0!==b?b:1;va.set(-o,-p,o,p)};this.setClearColorHex=function(a,b){t.setHex(a);s=void 0!==b?b:1;va.set(-o,-p,o,p)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){q.setTransform(1,0,0,-1,o,p);!1===va.isEmpty()&&(va.minSelf(fb),va.inflate(2),1>s&&q.clearRect(Math.floor(va.getX()),Math.floor(va.getY()),Math.floor(va.getWidth()),
Math.floor(va.getHeight())),0<s&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*t.r)+","+Math.floor(255*t.g)+","+Math.floor(255*t.b)+","+s+")"),q.fillRect(Math.floor(va.getX()),Math.floor(va.getY()),Math.floor(va.getWidth()),Math.floor(va.getHeight()))),va.empty())};this.render=function(a,j){function m(a,b,c){for(var d=0,e=i.length;d<e;d++){var f=i[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),j=b.dot(h);0>=j||(j*=f.intensity,c.r+=g.r*j,
c.g+=g.g*j,c.b+=g.b*j)}else f instanceof THREE.PointLight&&(h=f.matrixWorld.getPosition(),j=b.dot(wa.sub(h,a).normalize()),0>=j||(j*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=j&&(j*=f.intensity,c.r+=g.r*j,c.g+=g.g*j,c.b+=g.b*j)))}}function n(a,d,e,g,h,i,k,n){f.info.render.vertices+=3;f.info.render.faces++;b(n.opacity);c(n.blending);I=a.positionScreen.x;N=a.positionScreen.y;O=d.positionScreen.x;P=d.positionScreen.y;T=e.positionScreen.x;ba=e.positionScreen.y;l(I,N,O,P,T,ba);(n instanceof
THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)&&null===n.map&&null===n.map?(V.copy(n.color),fa.copy(n.emissive),n.vertexColors===THREE.FaceColors&&(V.r*=k.color.r,V.g*=k.color.g,V.b*=k.color.b),!0===mb)?!1===n.wireframe&&n.shading==THREE.SmoothShading&&3==k.vertexNormalsLength?(R.r=ea.r=W.r=qa.r,R.g=ea.g=W.g=qa.g,R.b=ea.b=W.b=qa.b,m(k.v1.positionWorld,k.vertexNormalsWorld[0],R),m(k.v2.positionWorld,k.vertexNormalsWorld[1],ea),m(k.v3.positionWorld,k.vertexNormalsWorld[2],W),R.r=R.r*
V.r+fa.r,R.g=R.g*V.g+fa.g,R.b=R.b*V.b+fa.b,ea.r=ea.r*V.r+fa.r,ea.g=ea.g*V.g+fa.g,ea.b=ea.b*V.b+fa.b,W.r=W.r*V.r+fa.r,W.g=W.g*V.g+fa.g,W.b=W.b*V.b+fa.b,da.r=0.5*(ea.r+W.r),da.g=0.5*(ea.g+W.g),da.b=0.5*(ea.b+W.b),pa=B(R,ea,W,da),y(I,N,O,P,T,ba,0,0,1,0,0,1,pa)):(L.r=qa.r,L.g=qa.g,L.b=qa.b,m(k.centroidWorld,k.normalWorld,L),L.r=L.r*V.r+fa.r,L.g=L.g*V.g+fa.g,L.b=L.b*V.b+fa.b,!0===n.wireframe?s(L,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):t(L)):!0===n.wireframe?s(n.color,n.wireframeLinewidth,
n.wireframeLinecap,n.wireframeLinejoin):t(n.color):n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial?null!==n.map?n.map.mapping instanceof THREE.UVMapping&&(xa=k.uvs[0],w(I,N,O,P,T,ba,xa[g].u,xa[g].v,xa[h].u,xa[h].v,xa[i].u,xa[i].v,n.map)):null!==n.envMap?n.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=j.matrixWorldInverse,wa.copy(k.vertexNormalsWorld[g]),Ta=0.5*(wa.x*a.elements[0]+wa.y*a.elements[4]+wa.z*a.elements[8])+
0.5,Ya=0.5*(wa.x*a.elements[1]+wa.y*a.elements[5]+wa.z*a.elements[9])+0.5,wa.copy(k.vertexNormalsWorld[h]),Sa=0.5*(wa.x*a.elements[0]+wa.y*a.elements[4]+wa.z*a.elements[8])+0.5,Oa=0.5*(wa.x*a.elements[1]+wa.y*a.elements[5]+wa.z*a.elements[9])+0.5,wa.copy(k.vertexNormalsWorld[i]),Ua=0.5*(wa.x*a.elements[0]+wa.y*a.elements[4]+wa.z*a.elements[8])+0.5,qb=0.5*(wa.x*a.elements[1]+wa.y*a.elements[5]+wa.z*a.elements[9])+0.5,w(I,N,O,P,T,ba,Ta,Ya,Sa,Oa,Ua,qb,n.envMap)):(L.copy(n.color),n.vertexColors===THREE.FaceColors&&
(L.r*=k.color.r,L.g*=k.color.g,L.b*=k.color.b),!0===n.wireframe?s(L,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):t(L)):n instanceof THREE.MeshDepthMaterial?(Aa=j.near,ua=j.far,R.r=R.g=R.b=1-Za(a.positionScreen.z,Aa,ua),ea.r=ea.g=ea.b=1-Za(d.positionScreen.z,Aa,ua),W.r=W.g=W.b=1-Za(e.positionScreen.z,Aa,ua),da.r=0.5*(ea.r+W.r),da.g=0.5*(ea.g+W.g),da.b=0.5*(ea.b+W.b),pa=B(R,ea,W,da),y(I,N,O,P,T,ba,0,0,1,0,0,1,pa)):n instanceof THREE.MeshNormalMaterial&&(L.r=Fb(k.normalWorld.x),L.g=Fb(k.normalWorld.y),
L.b=Fb(k.normalWorld.z),!0===n.wireframe?s(L,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):t(L))}function l(a,b,c,d,e,f){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.closePath()}function r(a,b,c,d,e,f,g,h){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.lineTo(g,h);q.closePath()}function s(a,b,c,e){v!==b&&(v=q.lineWidth=b);u!==c&&(u=q.lineCap=c);x!==e&&(x=q.lineJoin=e);d(a.getContextStyle());q.stroke();ya.inflate(2*b)}function t(a){e(a.getContextStyle());q.fill()}
function w(a,b,c,d,f,g,h,i,j,k,m,n,l){if(!(l instanceof THREE.DataTexture||void 0===l.image||0==l.image.width)){if(!0===l.needsUpdate){var o=l.wrapS==THREE.RepeatWrapping,p=l.wrapT==THREE.RepeatWrapping;$[l.id]=q.createPattern(l.image,!0===o&&!0===p?"repeat":!0===o&&!1===p?"repeat-x":!1===o&&!0===p?"repeat-y":"no-repeat");l.needsUpdate=!1}void 0===$[l.id]?e("rgba(0,0,0,1)"):e($[l.id]);var o=l.offset.x/l.repeat.x,p=l.offset.y/l.repeat.y,r=l.image.width*l.repeat.x,Fb=l.image.height*l.repeat.y,h=(h+
o)*r,i=(1-i+p)*Fb,c=c-a,d=d-b,f=f-a,g=g-b,j=(j+o)*r-h,k=(1-k+p)*Fb-i,m=(m+o)*r-h,n=(1-n+p)*Fb-i,o=j*n-m*k;0===o?(void 0===cb[l.id]&&(b=document.createElement("canvas"),b.width=l.image.width,b.height=l.image.height,b=b.getContext("2d"),b.drawImage(l.image,0,0),cb[l.id]=b.getImageData(0,0,l.image.width,l.image.height).data),b=cb[l.id],h=4*(Math.floor(h)+Math.floor(i)*l.image.width),L.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),t(L)):(o=1/o,l=(n*c-k*f)*o,k=(n*d-k*g)*o,c=(j*f-m*c)*o,d=(j*g-m*d)*o,a=a-l*h-
c*i,h=b-k*h-d*i,q.save(),q.transform(l,k,c,d,a,h),q.fill(),q.restore())}}function y(a,b,c,d,e,f,g,h,i,j,k,m,n){var l,o;l=n.width-1;o=n.height-1;g*=l;h*=o;c-=a;d-=b;e-=a;f-=b;i=i*l-g;j=j*o-h;k=k*l-g;m=m*o-h;o=1/(i*m-k*j);l=(m*c-j*e)*o;j=(m*d-j*f)*o;c=(i*e-k*c)*o;d=(i*f-k*d)*o;a=a-l*g-c*h;b=b-j*g-d*h;q.save();q.transform(l,j,c,d,a,b);q.clip();q.drawImage(n,0,0);q.restore()}function B(a,b,c,d){Ea[0]=255*a.r|0;Ea[1]=255*a.g|0;Ea[2]=255*a.b|0;Ea[4]=255*b.r|0;Ea[5]=255*b.g|0;Ea[6]=255*b.b|0;Ea[8]=255*c.r|
0;Ea[9]=255*c.g|0;Ea[10]=255*c.b|0;Ea[12]=255*d.r|0;Ea[13]=255*d.g|0;Ea[14]=255*d.b|0;Qa.putImageData(rb,0,0);jb.drawImage(ka,0,0);return Va}function Za(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function Fb(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Vb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===j instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Wb,sc,na,ha;!0===
this.autoClear?this.clear():q.setTransform(1,0,0,-1,o,p);f.info.render.vertices=0;f.info.render.faces=0;g=k.projectScene(a,j,this.sortObjects,this.sortElements);h=g.elements;i=g.lights;mb=0<i.length;if(!0===mb){qa.setRGB(0,0,0);Ma.setRGB(0,0,0);Fa.setRGB(0,0,0);Wb=0;for(sc=i.length;Wb<sc;Wb++){ha=i[Wb];var oa=ha.color;ha instanceof THREE.AmbientLight?(qa.r+=oa.r,qa.g+=oa.g,qa.b+=oa.b):ha instanceof THREE.DirectionalLight?(Ma.r+=oa.r,Ma.g+=oa.g,Ma.b+=oa.b):ha instanceof THREE.PointLight&&(Fa.r+=oa.r,
Fa.g+=oa.g,Fa.b+=oa.b)}}Wb=0;for(sc=h.length;Wb<sc;Wb++)if(na=h[Wb],ha=na.material,!(void 0===ha||!1===ha.visible)){ya.empty();if(na instanceof THREE.RenderableParticle){F=na;F.x*=o;F.y*=p;var oa=F,kb=na;b(ha.opacity);c(ha.blending);var Bb=void 0,Cb=void 0,vb=void 0,wb=void 0,cc=na=void 0,Jc=void 0;ha instanceof THREE.ParticleBasicMaterial?null===ha.map?(vb=kb.object.scale.x,wb=kb.object.scale.y,vb*=kb.scale.x*o,wb*=kb.scale.y*p,ya.set(oa.x-vb,oa.y-wb,oa.x+vb,oa.y+wb),!1!==fb.intersects(ya)&&(e(ha.color.getContextStyle()),
q.save(),q.translate(oa.x,oa.y),q.rotate(-kb.rotation),q.scale(vb,wb),q.fillRect(-1,-1,2,2),q.restore())):(na=ha.map.image,cc=na.width>>1,Jc=na.height>>1,vb=kb.scale.x*o,wb=kb.scale.y*p,Bb=vb*cc,Cb=wb*Jc,ya.set(oa.x-Bb,oa.y-Cb,oa.x+Bb,oa.y+Cb),!1!==fb.intersects(ya)&&(q.save(),q.translate(oa.x,oa.y),q.rotate(-kb.rotation),q.scale(vb,-wb),q.translate(-cc,-Jc),q.drawImage(na,0,0),q.restore())):ha instanceof THREE.ParticleCanvasMaterial&&(Bb=kb.scale.x*o,Cb=kb.scale.y*p,ya.set(oa.x-Bb,oa.y-Cb,oa.x+Bb,
oa.y+Cb),!1!==fb.intersects(ya)&&(d(ha.color.getContextStyle()),e(ha.color.getContextStyle()),q.save(),q.translate(oa.x,oa.y),q.rotate(-kb.rotation),q.scale(Bb,Cb),ha.program(q),q.restore()))}else if(na instanceof THREE.RenderableLine){if(F=na.v1,C=na.v2,F.positionScreen.x*=o,F.positionScreen.y*=p,C.positionScreen.x*=o,C.positionScreen.y*=p,ya.addPoint(F.positionScreen.x,F.positionScreen.y),ya.addPoint(C.positionScreen.x,C.positionScreen.y),!0===fb.intersects(ya)&&(oa=F,kb=C,b(ha.opacity),c(ha.blending),
q.beginPath(),q.moveTo(oa.positionScreen.x,oa.positionScreen.y),q.lineTo(kb.positionScreen.x,kb.positionScreen.y),ha instanceof THREE.LineBasicMaterial))oa=ha.linewidth,v!==oa&&(v=q.lineWidth=oa),oa=ha.linecap,u!==oa&&(u=q.lineCap=oa),oa=ha.linejoin,x!==oa&&(x=q.lineJoin=oa),d(ha.color.getContextStyle()),q.stroke(),ya.inflate(2*ha.linewidth)}else if(na instanceof THREE.RenderableFace3)F=na.v1,C=na.v2,E=na.v3,F.positionScreen.x*=o,F.positionScreen.y*=p,C.positionScreen.x*=o,C.positionScreen.y*=p,E.positionScreen.x*=
o,E.positionScreen.y*=p,!0===ha.overdraw&&(Vb(F.positionScreen,C.positionScreen),Vb(C.positionScreen,E.positionScreen),Vb(E.positionScreen,F.positionScreen)),ya.add3Points(F.positionScreen.x,F.positionScreen.y,C.positionScreen.x,C.positionScreen.y,E.positionScreen.x,E.positionScreen.y),!0===fb.intersects(ya)&&n(F,C,E,0,1,2,na,ha,a);else if(na instanceof THREE.RenderableFace4&&(F=na.v1,C=na.v2,E=na.v3,M=na.v4,F.positionScreen.x*=o,F.positionScreen.y*=p,C.positionScreen.x*=o,C.positionScreen.y*=p,E.positionScreen.x*=
o,E.positionScreen.y*=p,M.positionScreen.x*=o,M.positionScreen.y*=p,D.positionScreen.copy(C.positionScreen),K.positionScreen.copy(M.positionScreen),!0===ha.overdraw&&(Vb(F.positionScreen,C.positionScreen),Vb(C.positionScreen,M.positionScreen),Vb(M.positionScreen,F.positionScreen),Vb(E.positionScreen,D.positionScreen),Vb(E.positionScreen,K.positionScreen)),ya.addPoint(F.positionScreen.x,F.positionScreen.y),ya.addPoint(C.positionScreen.x,C.positionScreen.y),ya.addPoint(E.positionScreen.x,E.positionScreen.y),
ya.addPoint(M.positionScreen.x,M.positionScreen.y),!0===fb.intersects(ya)))(oa=F,kb=C,Bb=E,Cb=M,vb=D,wb=K,cc=a,f.info.render.vertices+=4,f.info.render.faces++,b(ha.opacity),c(ha.blending),void 0!==ha.map&&null!==ha.map||void 0!==ha.envMap&&null!==ha.envMap)?(n(oa,kb,Cb,0,1,3,na,ha,cc),n(vb,Bb,wb,1,2,3,na,ha,cc)):(I=oa.positionScreen.x,N=oa.positionScreen.y,O=kb.positionScreen.x,P=kb.positionScreen.y,T=Bb.positionScreen.x,ba=Bb.positionScreen.y,Q=Cb.positionScreen.x,G=Cb.positionScreen.y,J=vb.positionScreen.x,
S=vb.positionScreen.y,ca=wb.positionScreen.x,la=wb.positionScreen.y,ha instanceof THREE.MeshLambertMaterial||ha instanceof THREE.MeshPhongMaterial)?(V.copy(ha.color),fa.copy(ha.emissive),ha.vertexColors===THREE.FaceColors&&(V.r*=na.color.r,V.g*=na.color.g,V.b*=na.color.b),!0===mb)?!1===ha.wireframe&&ha.shading==THREE.SmoothShading&&4==na.vertexNormalsLength?(R.r=ea.r=W.r=da.r=qa.r,R.g=ea.g=W.g=da.g=qa.g,R.b=ea.b=W.b=da.b=qa.b,m(na.v1.positionWorld,na.vertexNormalsWorld[0],R),m(na.v2.positionWorld,
na.vertexNormalsWorld[1],ea),m(na.v4.positionWorld,na.vertexNormalsWorld[3],W),m(na.v3.positionWorld,na.vertexNormalsWorld[2],da),R.r=R.r*V.r+fa.r,R.g=R.g*V.g+fa.g,R.b=R.b*V.b+fa.b,ea.r=ea.r*V.r+fa.r,ea.g=ea.g*V.g+fa.g,ea.b=ea.b*V.b+fa.b,W.r=W.r*V.r+fa.r,W.g=W.g*V.g+fa.g,W.b=W.b*V.b+fa.b,da.r=da.r*V.r+fa.r,da.g=da.g*V.g+fa.g,da.b=da.b*V.b+fa.b,pa=B(R,ea,W,da),l(I,N,O,P,Q,G),y(I,N,O,P,Q,G,0,0,1,0,0,1,pa),l(J,S,T,ba,ca,la),y(J,S,T,ba,ca,la,1,0,1,1,0,1,pa)):(L.r=qa.r,L.g=qa.g,L.b=qa.b,m(na.centroidWorld,
na.normalWorld,L),L.r=L.r*V.r+fa.r,L.g=L.g*V.g+fa.g,L.b=L.b*V.b+fa.b,r(I,N,O,P,T,ba,Q,G),!0===ha.wireframe?s(L,ha.wireframeLinewidth,ha.wireframeLinecap,ha.wireframeLinejoin):t(L)):(L.r=V.r+fa.r,L.g=V.g+fa.g,L.b=V.b+fa.b,r(I,N,O,P,T,ba,Q,G),!0===ha.wireframe?s(L,ha.wireframeLinewidth,ha.wireframeLinecap,ha.wireframeLinejoin):t(L)):ha instanceof THREE.MeshBasicMaterial?(L.copy(ha.color),ha.vertexColors===THREE.FaceColors&&(L.r*=na.color.r,L.g*=na.color.g,L.b*=na.color.b),r(I,N,O,P,T,ba,Q,G),!0===ha.wireframe?
s(L,ha.wireframeLinewidth,ha.wireframeLinecap,ha.wireframeLinejoin):t(L)):ha instanceof THREE.MeshNormalMaterial?(L.r=Fb(na.normalWorld.x),L.g=Fb(na.normalWorld.y),L.b=Fb(na.normalWorld.z),r(I,N,O,P,T,ba,Q,G),!0===ha.wireframe?s(L,ha.wireframeLinewidth,ha.wireframeLinecap,ha.wireframeLinejoin):t(L)):ha instanceof THREE.MeshDepthMaterial&&(Aa=j.near,ua=j.far,R.r=R.g=R.b=1-Za(oa.positionScreen.z,Aa,ua),ea.r=ea.g=ea.b=1-Za(kb.positionScreen.z,Aa,ua),W.r=W.g=W.b=1-Za(Cb.positionScreen.z,Aa,ua),da.r=da.g=
da.b=1-Za(Bb.positionScreen.z,Aa,ua),pa=B(R,ea,W,da),l(I,N,O,P,Q,G),y(I,N,O,P,Q,G,0,0,1,0,0,1,pa),l(J,S,T,ba,ca,la),y(J,S,T,ba,ca,la,1,0,1,1,0,1,pa));va.addRectangle(ya)}q.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",
value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)n.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?
g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=n.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function d(a,b){var c=b.geometry,d=a.faces3,h=a.faces4,i=3*d.length+4*h.length,j=1*d.length+2*h.length,h=3*d.length+4*h.length,d=e(b,a),k=g(d),m=f(d),l=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*i);m&&(a.__normalArray=new Float32Array(3*i));c.hasTangents&&(a.__tangentArray=new Float32Array(4*i));l&&
(a.__colorArray=new Float32Array(3*i));if(k){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*i);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*i)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*i),a.__skinWeightArray=new Float32Array(4*i));a.__faceArray=new Uint16Array(3*j);a.__lineArray=new Uint16Array(2*h);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(k=a.numMorphTargets;c<
k;c++)a.__morphTargetsArrays.push(new Float32Array(3*i))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(k=a.numMorphNormals;c<k;c++)a.__morphNormalsArrays.push(new Float32Array(3*i))}a.__webglFaceCount=3*j;a.__webglLineCount=2*h;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var o in d.attributes){var j=d.attributes[o],c={},p;for(p in j)c[p]=j[p];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,h=1,"v2"===c.type?h=2:
"v3"===c.type?h=3:"v4"===c.type?h=4:"c"===c.type&&(h=3),c.size=h,c.array=new Float32Array(i*h),c.buffer=n.createBuffer(),c.buffer.belongsToAttribute=o,j.needsUpdate=!0,c.__original=j;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function e(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function f(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function g(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function h(a){var b,c,d;for(b in a.attributes)d="index"===b?n.ELEMENT_ARRAY_BUFFER:n.ARRAY_BUFFER,c=a.attributes[b],c.buffer=n.createBuffer(),n.bindBuffer(d,c.buffer),n.bufferData(d,c.array,n.STATIC_DRAW)}function i(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var i=a.colors,j=i.length,k=a.__vertexArray,m=a.__colorArray,l=a.__sortArray,
o=a.verticesNeedUpdate,p=a.colorsNeedUpdate,r=a.__webglCustomAttributesList;if(c.sortParticles){Va.copy(Ea);Va.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],jb.copy(e),Va.multiplyVector3(jb),l[d]=[jb.z,d];l.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[l[d][1]],f=3*d,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;for(d=0;d<j;d++)f=3*d,e=i[l[d][1]],m[f]=e.r,m[f+1]=e.g,m[f+2]=e.b;if(r){i=0;for(j=r.length;i<j;i++)if(h=r[i],void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=
0;d<e;d++)g=l[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=l[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=l[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=l[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=l[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(o)for(d=
0;d<g;d++)e=h[d],f=3*d,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;if(p)for(d=0;d<j;d++)e=i[d],f=3*d,m[f]=e.r,m[f+1]=e.g,m[f+2]=e.b;if(r){i=0;for(j=r.length;i<j;i++)if(h=r[i],h.needsUpdate&&(void 0===h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=
0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}if(o||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,k,b);if(p||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,m,b);if(r){i=0;for(j=r.length;i<j;i++)if(h=r[i],h.needsUpdate||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,
h.buffer),n.bufferData(n.ARRAY_BUFFER,h.array,b)}}function k(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,h=d.uv,i=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==e&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.buffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(n.bindBuffer(n.ARRAY_BUFFER,f.buffer),n.bufferData(n.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(n.bindBuffer(n.ARRAY_BUFFER,g.buffer),n.bufferData(n.ARRAY_BUFFER,g.array,b));
a.uvsNeedUpdate&&void 0!==h&&(n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.bufferData(n.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==i&&(n.bindBuffer(n.ARRAY_BUFFER,i.buffer),n.bufferData(n.ARRAY_BUFFER,i.array,b));a.tangentsNeedUpdate&&void 0!==d&&(n.bindBuffer(n.ARRAY_BUFFER,d.buffer),n.bufferData(n.ARRAY_BUFFER,d.array,b));if(c)for(var j in a.attributes)delete a.attributes[j].array}function j(a){Qa[a]||(n.enableVertexAttribArray(a),Qa[a]=!0)}function l(){for(var a in Qa)Qa[a]&&(n.disableVertexAttribArray(a),
Qa[a]=!1)}function m(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}function o(a,b){return b[1]-a[1]}function p(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)$=W=null,V=fa=pa=ua=Ua=Oa=xa=-1,sb=!0,a[d].render(b,c,wa,ka),$=W=null,V=fa=pa=ua=Ua=Oa=xa=-1,sb=!0}function q(a,b,c,d,e,f,g,h){var i,j,k,m;b?(j=a.length-1,m=b=-1):(j=0,b=a.length,m=1);for(var n=j;n!==b;n+=m)if(i=a[n],i.render){j=i.object;k=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;g&&L.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);
L.setDepthTest(i.depthTest);L.setDepthWrite(i.depthWrite);E(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}L.setMaterialFaces(i);k instanceof THREE.BufferGeometry?L.renderBufferDirect(d,e,f,i,k,j):L.renderBuffer(d,e,f,i,k,j)}}function t(a,b,c,d,e,f,g){for(var h,i,j=0,k=a.length;j<k;j++)if(h=a[j],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&L.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);L.setDepthTest(h.depthTest);L.setDepthWrite(h.depthWrite);E(h.polygonOffset,
h.polygonOffsetFactor,h.polygonOffsetUnits)}L.renderImmediateObject(c,d,e,h,i)}}function s(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function y(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function w(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function r(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function B(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function v(a,b,c,d,e){Aa=0;d.needsUpdate&&
(d.program&&L.deallocateMaterial(d),L.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(L.maxMorphTargets));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;g!==W&&(n.useProgram(g),W=g,f=!0);d.id!==V&&(V=d.id,f=!0);if(f||a!==$)n.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==$&&($=a);if(d.skinning)if(Za&&e.useVertexTexture){if(null!==h.boneTexture){var j=u();n.uniform1i(h.boneTexture,j);L.setTexture(e.boneTexture,
j)}}else null!==h.boneGlobalMatrices&&n.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(sb){for(var k=0,m=0,l=0,o,p,r,q=ga,ka=q.directional.colors,s=q.directional.positions,t=q.point.colors,Qa=q.point.positions,rb=q.point.distances,
w=q.spot.colors,v=q.spot.positions,y=q.spot.distances,x=q.spot.directions,B=q.spot.anglesCos,Ea=q.spot.exponents,D=q.hemi.skyColors,G=q.hemi.groundColors,E=q.hemi.positions,Va=0,I=0,J=0,M=0,N=0,Q=0,T=0,jb=0,R=p=0,c=R=R=0,f=b.length;c<f;c++)j=b[c],j.onlyShadow||(o=j.color,r=j.intensity,p=j.distance,j instanceof THREE.AmbientLight?j.visible&&(L.gammaInput?(k+=o.r*o.r,m+=o.g*o.g,l+=o.b*o.b):(k+=o.r,m+=o.g,l+=o.b)):j instanceof THREE.DirectionalLight?(N+=1,j.visible&&(p=3*Va,L.gammaInput?F(ka,p,o,r*r):
C(ka,p,o,r),ib.copy(j.matrixWorld.getPosition()),ib.subSelf(j.target.matrixWorld.getPosition()),ib.normalize(),s[p]=ib.x,s[p+1]=ib.y,s[p+2]=ib.z,Va+=1)):j instanceof THREE.PointLight?(Q+=1,j.visible&&(R=3*I,L.gammaInput?F(t,R,o,r*r):C(t,R,o,r),r=j.matrixWorld.getPosition(),Qa[R]=r.x,Qa[R+1]=r.y,Qa[R+2]=r.z,rb[I]=p,I+=1)):j instanceof THREE.SpotLight?(T+=1,j.visible&&(R=3*J,L.gammaInput?F(w,R,o,r*r):C(w,R,o,r),r=j.matrixWorld.getPosition(),v[R]=r.x,v[R+1]=r.y,v[R+2]=r.z,y[J]=p,ib.copy(r),ib.subSelf(j.target.matrixWorld.getPosition()),
ib.normalize(),x[R]=ib.x,x[R+1]=ib.y,x[R+2]=ib.z,B[J]=Math.cos(j.angle),Ea[J]=j.exponent,J+=1)):j instanceof THREE.HemisphereLight&&(jb+=1,j.visible&&(o=j.color,p=j.groundColor,R=3*M,L.gammaInput?(r*=r,F(D,R,o,r),F(G,R,p,r)):(C(D,R,o,r),C(G,R,p,r)),ib.copy(j.matrixWorld.getPosition()),ib.normalize(),E[R]=ib.x,E[R+1]=ib.y,E[R+2]=ib.z,M+=1)));c=3*Va;for(f=Math.max(ka.length,3*N);c<f;c++)ka[c]=0;c=3*Va;for(f=Math.max(s.length,3*N);c<f;c++)s[c]=0;c=3*I;for(f=Math.max(t.length,3*Q);c<f;c++)t[c]=0;c=3*
I;for(f=Math.max(Qa.length,3*Q);c<f;c++)Qa[c]=0;c=I;for(f=Math.max(rb.length,Q);c<f;c++)rb[c]=0;c=3*J;for(f=Math.max(w.length,3*T);c<f;c++)w[c]=0;c=3*J;for(f=Math.max(v.length,3*T);c<f;c++)v[c]=0;c=3*J;for(f=Math.max(x.length,3*T);c<f;c++)x[c]=0;c=J;for(f=Math.max(B.length,T);c<f;c++)B[c]=0;c=J;for(f=Math.max(Ea.length,T);c<f;c++)Ea[c]=0;c=J;for(f=Math.max(y.length,T);c<f;c++)y[c]=0;c=3*M;for(f=Math.max(D.length,3*jb);c<f;c++)D[c]=0;c=3*M;for(f=Math.max(G.length,3*jb);c<f;c++)G[c]=0;c=3*M;for(f=Math.max(E.length,
3*jb);c<f;c++)E[c]=0;q.directional.length=Va;q.point.length=I;q.spot.length=J;q.hemi.length=M;q.ambient[0]=k;q.ambient[1]=m;q.ambient[2]=l;sb=!1}c=ga;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances;i.spotLightColor.value=c.spot.colors;i.spotLightPosition.value=c.spot.positions;
i.spotLightDistance.value=c.spot.distances;i.spotLightDirection.value=c.spot.directions;i.spotLightAngleCos.value=c.spot.anglesCos;i.spotLightExponent.value=c.spot.exponents;i.hemisphereLightSkyColor.value=c.hemi.skyColors;i.hemisphereLightGroundColor.value=c.hemi.groundColors;i.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=d.opacity;L.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):
i.diffuse.value=d.color;i.map.value=d.map;i.lightMap.value=d.lightMap;i.specularMap.value=d.specularMap;d.bumpMap&&(i.bumpMap.value=d.bumpMap,i.bumpScale.value=d.bumpScale);d.normalMap&&(i.normalMap.value=d.normalMap,i.normalScale.value.copy(d.normalScale));var S;d.map?S=d.map:d.specularMap?S=d.specularMap:d.normalMap?S=d.normalMap:d.bumpMap&&(S=d.bumpMap);void 0!==S&&(c=S.offset,S=S.repeat,i.offsetRepeat.value.set(c.x,c.y,S.x,S.y));i.envMap.value=d.envMap;i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?
1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio;i.combine.value=d.combine;i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity,i.dashSize.value=d.dashSize,i.totalSize.value=d.dashSize+d.gapSize,i.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?
(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=P.height/2,i.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,L.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?
(L.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&i.shadowMatrix){c=S=0;for(f=b.length;c<f;c++)if(j=b[c],j.castShadow&&(j instanceof
THREE.SpotLight||j instanceof THREE.DirectionalLight&&!j.shadowCascade))i.shadowMap.value[S]=j.shadowMap,i.shadowMapSize.value[S]=j.shadowMapSize,i.shadowMatrix.value[S]=j.shadowMatrix,i.shadowDarkness.value[S]=j.shadowDarkness,i.shadowBias.value[S]=j.shadowBias,S++}b=d.uniformsList;i=0;for(S=b.length;i<S;i++)if(f=g.uniforms[b[i][1]])if(c=b[i][0],k=c.type,j=c.value,"i"===k)n.uniform1i(f,j);else if("f"===k)n.uniform1f(f,j);else if("v2"===k)n.uniform2f(f,j.x,j.y);else if("v3"===k)n.uniform3f(f,j.x,
j.y,j.z);else if("v4"===k)n.uniform4f(f,j.x,j.y,j.z,j.w);else if("c"===k)n.uniform3f(f,j.r,j.g,j.b);else if("iv1"===k)n.uniform1iv(f,j);else if("iv"===k)n.uniform3iv(f,j);else if("fv1"===k)n.uniform1fv(f,j);else if("fv"===k)n.uniform3fv(f,j);else if("v2v"===k){void 0===c._array&&(c._array=new Float32Array(2*j.length));k=0;for(m=j.length;k<m;k++)l=2*k,c._array[l]=j[k].x,c._array[l+1]=j[k].y;n.uniform2fv(f,c._array)}else if("v3v"===k){void 0===c._array&&(c._array=new Float32Array(3*j.length));k=0;for(m=
j.length;k<m;k++)l=3*k,c._array[l]=j[k].x,c._array[l+1]=j[k].y,c._array[l+2]=j[k].z;n.uniform3fv(f,c._array)}else if("v4v"===k){void 0===c._array&&(c._array=new Float32Array(4*j.length));k=0;for(m=j.length;k<m;k++)l=4*k,c._array[l]=j[k].x,c._array[l+1]=j[k].y,c._array[l+2]=j[k].z,c._array[l+3]=j[k].w;n.uniform4fv(f,c._array)}else if("m4"===k)void 0===c._array&&(c._array=new Float32Array(16)),j.flattenToArray(c._array),n.uniformMatrix4fv(f,!1,c._array);else if("m4v"===k){void 0===c._array&&(c._array=
new Float32Array(16*j.length));k=0;for(m=j.length;k<m;k++)j[k].flattenToArrayOffset(c._array,16*k);n.uniformMatrix4fv(f,!1,c._array)}else if("t"===k){if(l=j,j=u(),n.uniform1i(f,j),l)if(l.image instanceof Array&&6===l.image.length){if(c=l,f=j,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=n.createTexture());n.activeTexture(n.TEXTURE0+f);n.bindTexture(n.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof
THREE.CompressedTexture;j=[];for(k=0;6>k;k++)m=j,l=k,L.autoScaleCubemaps&&!f?(q=c.image[k],s=hc,q.width<=s&&q.height<=s||(t=Math.max(q.width,q.height),ka=Math.floor(q.width*s/t),s=Math.floor(q.height*s/t),t=document.createElement("canvas"),t.width=ka,t.height=s,t.getContext("2d").drawImage(q,0,0,q.width,q.height,0,0,ka,s),q=t)):q=c.image[k],m[l]=q;k=j[0];m=0===(k.width&k.width-1)&&0===(k.height&k.height-1);l=O(c.format);q=O(c.type);K(n.TEXTURE_CUBE_MAP,c,m);for(k=0;6>k;k++)if(f){s=j[k].mipmaps;t=
0;for(Qa=s.length;t<Qa;t++)ka=s[t],n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+k,t,l,ka.width,ka.height,0,ka.data)}else n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,l,l,q,j[k]);c.generateMipmaps&&m&&n.generateMipmap(n.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else n.activeTexture(n.TEXTURE0+f),n.bindTexture(n.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else l instanceof THREE.WebGLRenderTargetCube?(c=l,n.activeTexture(n.TEXTURE0+j),n.bindTexture(n.TEXTURE_CUBE_MAP,
c.__webglTexture)):L.setTexture(l,j)}else if("tv"===k){void 0===c._array&&(c._array=[]);k=0;for(m=c.value.length;k<m;k++)c._array[k]=u();n.uniform1iv(f,c._array);k=0;for(m=c.value.length;k<m;k++)l=c.value[k],j=c._array[k],l&&L.setTexture(l,j)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),n.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||
d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&n.uniformMatrix4fv(h.viewMatrix,!1,a._viewMatrixArray)}n.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);h.normalMatrix&&n.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);null!==h.modelMatrix&&n.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements);return g}function u(){var a=Aa;a>=Eb&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+Eb);Aa+=1;return a}function x(a,
b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function F(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function C(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function E(a,b,c){qb!==a&&(a?n.enable(n.POLYGON_OFFSET_FILL):n.disable(n.POLYGON_OFFSET_FILL),qb=a);if(a&&(fb!==b||va!==c))n.polygonOffset(b,c),fb=b,va=c}function M(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];
return a.join("\n")}function D(a,b){var c;"fragment"===a?c=n.createShader(n.FRAGMENT_SHADER):"vertex"===a&&(c=n.createShader(n.VERTEX_SHADER));n.shaderSource(c,b);n.compileShader(c);return!n.getShaderParameter(c,n.COMPILE_STATUS)?(console.error(n.getShaderInfoLog(c)),console.error(M(b)),null):c}function K(a,b,c){c?(n.texParameteri(a,n.TEXTURE_WRAP_S,O(b.wrapS)),n.texParameteri(a,n.TEXTURE_WRAP_T,O(b.wrapT)),n.texParameteri(a,n.TEXTURE_MAG_FILTER,O(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,
O(b.minFilter))):(n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_MAG_FILTER,N(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,N(b.minFilter)));if(Db&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))n.texParameterf(a,Db.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Rb)),b.__oldAnisotropy=b.anisotropy}function I(a,b){n.bindRenderbuffer(n.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,
n.DEPTH_COMPONENT16,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,b.width,b.height)}function N(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?n.NEAREST:n.LINEAR}
function O(a){if(a===THREE.RepeatWrapping)return n.REPEAT;if(a===THREE.ClampToEdgeWrapping)return n.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return n.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return n.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return n.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return n.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return n.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return n.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return n.LINEAR_MIPMAP_LINEAR;
if(a===THREE.UnsignedByteType)return n.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return n.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return n.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return n.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return n.BYTE;if(a===THREE.ShortType)return n.SHORT;if(a===THREE.UnsignedShortType)return n.UNSIGNED_SHORT;if(a===THREE.IntType)return n.INT;if(a===THREE.UnsignedIntType)return n.UNSIGNED_INT;if(a===THREE.FloatType)return n.FLOAT;
if(a===THREE.AlphaFormat)return n.ALPHA;if(a===THREE.RGBFormat)return n.RGB;if(a===THREE.RGBAFormat)return n.RGBA;if(a===THREE.LuminanceFormat)return n.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return n.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return n.FUNC_ADD;if(a===THREE.SubtractEquation)return n.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return n.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return n.ZERO;if(a===THREE.OneFactor)return n.ONE;if(a===THREE.SrcColorFactor)return n.SRC_COLOR;
if(a===THREE.OneMinusSrcColorFactor)return n.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return n.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return n.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return n.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return n.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return n.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return n.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return n.SRC_ALPHA_SATURATE;if(void 0!==Gb){if(a===THREE.RGB_S3TC_DXT1_Format)return Gb.COMPRESSED_RGB_S3TC_DXT1_EXT;
if(a===THREE.RGBA_S3TC_DXT1_Format)return Gb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Gb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Gb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},P=void 0!==a.canvas?a.canvas:document.createElement("canvas"),T=void 0!==a.precision?a.precision:"highp",ba=void 0!==a.alpha?a.alpha:!0,Q=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,G=void 0!==a.antialias?
a.antialias:!1,J=void 0!==a.stencil?a.stencil:!0,S=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ca=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),la=void 0!==a.clearAlpha?a.clearAlpha:0;this.domElement=P;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=
this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var L=this,R=[],ea=0,W=null,da=null,V=-1,fa=null,$=null,cb=0,Aa=0,ua=-1,pa=-1,xa=-1,Ta=-1,Ya=-1,Sa=-1,Oa=-1,Ua=-1,qb=null,fb=null,va=null,ya=null,mb=0,qa=0,Ma=0,Fa=0,wa=0,ka=0,Qa={},rb=
new THREE.Frustum,Ea=new THREE.Matrix4,Va=new THREE.Matrix4,jb=new THREE.Vector4,ib=new THREE.Vector3,sb=!0,ga={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},n,Db,Gb;try{if(!(n=P.getContext("experimental-webgl",{alpha:ba,premultipliedAlpha:Q,antialias:G,stencil:J,preserveDrawingBuffer:S})))throw"Error creating WebGL context.";
}catch(Ic){console.error(Ic)}a=n.getExtension("OES_texture_float");ba=n.getExtension("OES_standard_derivatives");Db=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Gb=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");
ba||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Db||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");Gb||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");n.clearColor(0,0,0,1);n.clearDepth(1);n.clearStencil(0);n.enable(n.DEPTH_TEST);n.depthFunc(n.LEQUAL);n.frontFace(n.CCW);n.cullFace(n.BACK);n.enable(n.CULL_FACE);n.enable(n.BLEND);n.blendEquation(n.FUNC_ADD);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.clearColor(ca.r,
ca.g,ca.b,la);this.context=n;var Eb=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),ba=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS);n.getParameter(n.MAX_TEXTURE_SIZE);var hc=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),Rb=Db?n.getParameter(Db.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,ub=0<ba,Za=ub&&a;Gb&&n.getParameter(n.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return n};this.supportsVertexTextures=function(){return ub};this.getMaxAnisotropy=function(){return Rb};this.setSize=function(a,b){P.width=
a;P.height=b;this.setViewport(0,0,P.width,P.height)};this.setViewport=function(a,b,c,d){mb=void 0!==a?a:0;qa=void 0!==b?b:0;Ma=void 0!==c?c:P.width;Fa=void 0!==d?d:P.height;n.viewport(mb,qa,Ma,Fa)};this.setScissor=function(a,b,c,d){n.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ca.setHex(a);la=b;n.clearColor(ca.r,ca.g,ca.b,la)};this.setClearColor=function(a,b){ca.copy(a);la=b;n.clearColor(ca.r,ca.g,ca.b,
la)};this.getClearColor=function(){return ca};this.getClearAlpha=function(){return la};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=n.COLOR_BUFFER_BIT;if(void 0===b||b)d|=n.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=n.STENCIL_BUFFER_BIT;n.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=
function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,a instanceof THREE.Mesh)for(var c in a.geometry.geometryGroups){var d=a.geometry.geometryGroups[c];n.deleteBuffer(d.__webglVertexBuffer);n.deleteBuffer(d.__webglNormalBuffer);n.deleteBuffer(d.__webglTangentBuffer);n.deleteBuffer(d.__webglColorBuffer);n.deleteBuffer(d.__webglUVBuffer);n.deleteBuffer(d.__webglUV2Buffer);
n.deleteBuffer(d.__webglSkinIndicesBuffer);n.deleteBuffer(d.__webglSkinWeightsBuffer);n.deleteBuffer(d.__webglFaceBuffer);n.deleteBuffer(d.__webglLineBuffer);var e=void 0,f=void 0;if(d.numMorphTargets){e=0;for(f=d.numMorphTargets;e<f;e++)n.deleteBuffer(d.__webglMorphTargetsBuffers[e])}if(d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)n.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d);L.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,n.deleteBuffer(a.__webglVertexBuffer),
n.deleteBuffer(a.__webglColorBuffer),n.deleteBuffer(a.__webglNormalBuffer),b(a),L.info.memory.geometries--):a instanceof THREE.Line?(a=a.geometry,n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),n.deleteBuffer(a.__webglLineDistanceBuffer),b(a),L.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),b(a),L.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&
(a.__webglInit=!1,n.deleteTexture(a.__webglTexture),L.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(n.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)n.deleteFramebuffer(a.__webglFramebuffer[b]),n.deleteRenderbuffer(a.__webglRenderbuffer[b]);else n.deleteFramebuffer(a.__webglFramebuffer),n.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,
d,e=!1,a=0;for(c=R.length;a<c;a++)if(d=R[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=R.length;a<c;a++)d=R[a],d.program!==b&&e.push(d);R=e;n.deleteProgram(b);L.info.memory.programs--}}};this.updateShadowMap=function(a,b){W=null;V=fa=Ua=Oa=xa=-1;sb=!0;pa=ua=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=n.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=
n.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=n.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=n.createBuffer());a.hasPositions&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,a.positionArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.position),n.vertexAttribPointer(b.attributes.position,3,n.FLOAT,!1,0,0));if(a.hasNormals){n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,
e,f,g,h,i,j,k,m,l,o,p=3*a.count;for(o=0;o<p;o+=9)l=a.normalArray,d=l[o],e=l[o+1],f=l[o+2],g=l[o+3],i=l[o+4],k=l[o+5],h=l[o+6],j=l[o+7],m=l[o+8],d=(d+g+h)/3,e=(e+i+j)/3,f=(f+k+m)/3,l[o]=d,l[o+1]=e,l[o+2]=f,l[o+3]=d,l[o+4]=e,l[o+5]=f,l[o+6]=d,l[o+7]=e,l[o+8]=f}n.bufferData(n.ARRAY_BUFFER,a.normalArray,n.DYNAMIC_DRAW);n.enableVertexAttribArray(b.attributes.normal);n.vertexAttribPointer(b.attributes.normal,3,n.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUvBuffer),n.bufferData(n.ARRAY_BUFFER,
a.uvArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.uv),n.vertexAttribPointer(b.attributes.uv,2,n.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,a.colorArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.color),n.vertexAttribPointer(b.attributes.color,3,n.FLOAT,!1,0,0));n.drawArrays(n.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=
v(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==fa&&(fa=d,b=!0),b&&l(),f instanceof THREE.Mesh){f=e.offsets;1<f.length&&(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,i=h.itemSize;n.bindBuffer(n.ARRAY_BUFFER,h.buffer);j(a.position);n.vertexAttribPointer(a.position,i,n.FLOAT,!1,0,4*g*i);h=e.attributes.normal;0<=a.normal&&h&&(i=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),j(a.normal),n.vertexAttribPointer(a.normal,i,n.FLOAT,!1,
0,4*g*i));h=e.attributes.uv;0<=a.uv&&h&&(i=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),j(a.uv),n.vertexAttribPointer(a.uv,i,n.FLOAT,!1,0,4*g*i));i=e.attributes.color;if(0<=a.color&&i){var k=i.itemSize;n.bindBuffer(n.ARRAY_BUFFER,i.buffer);j(a.color);n.vertexAttribPointer(a.color,k,n.FLOAT,!1,0,4*g*k)}h=e.attributes.tangent;0<=a.tangent&&h&&(i=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),j(a.tangent),n.vertexAttribPointer(a.tangent,i,n.FLOAT,!1,0,4*g*i));n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,
e.attributes.index.buffer)}n.drawElements(n.TRIANGLES,f[d].count,n.UNSIGNED_SHORT,2*f[d].start);L.info.render.calls++;L.info.render.vertices+=f[d].count;L.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,i=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),j(a.position),n.vertexAttribPointer(a.position,i,n.FLOAT,!1,0,0),i=e.attributes.color,0<=a.color&&i&&(k=i.itemSize,n.bindBuffer(n.ARRAY_BUFFER,i.buffer),j(a.color),n.vertexAttribPointer(a.color,
k,n.FLOAT,!1,0,0)),n.drawArrays(n.POINTS,0,h.numItems/3),L.info.render.calls++,L.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,h,c=v(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==fa&&(fa=c,a=!0);a&&l();if(!d.morphTargets&&0<=b.position)a&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),j(b.position),n.vertexAttribPointer(b.position,3,n.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?
(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),j(c.position),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0)):0<=c.position&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),j(c.position),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var i=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;i<d.numSupportedMorphTargets&&i<h.length;)n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[i]]),j(c["morphTarget"+
i]),n.vertexAttribPointer(c["morphTarget"+i],3,n.FLOAT,!1,0,0),d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[i]]),j(c["morphNormal"+i]),n.vertexAttribPointer(c["morphNormal"+i],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[h[i]],i++}else{h=[];g=f.morphTargetInfluences;var k,m=g.length;for(k=0;k<m;k++)i=g[k],0<i&&h.push([k,i]);h.length>d.numSupportedMorphTargets?(h.sort(o),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(o):0===
h.length&&h.push([0,0]);for(i=0;i<d.numSupportedMorphTargets;)h[i]?(k=h[i][0],n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k]),j(c["morphTarget"+i]),n.vertexAttribPointer(c["morphTarget"+i],3,n.FLOAT,!1,0,0),d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k]),j(c["morphNormal"+i]),n.vertexAttribPointer(c["morphNormal"+i],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[k]):(n.vertexAttribPointer(c["morphTarget"+i],3,n.FLOAT,!1,0,0),d.morphNormals&&n.vertexAttribPointer(c["morphNormal"+
i],3,n.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[i]=0),i++}null!==d.program.uniforms.morphTargetInfluences&&n.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(n.bindBuffer(n.ARRAY_BUFFER,c.buffer),j(b[c.buffer.belongsToAttribute]),n.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,n.FLOAT,
!1,0,0))}0<=b.color&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglColorBuffer),j(b.color),n.vertexAttribPointer(b.color,3,n.FLOAT,!1,0,0));0<=b.normal&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglNormalBuffer),j(b.normal),n.vertexAttribPointer(b.normal,3,n.FLOAT,!1,0,0));0<=b.tangent&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglTangentBuffer),j(b.tangent),n.vertexAttribPointer(b.tangent,4,n.FLOAT,!1,0,0));0<=b.uv&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUVBuffer),j(b.uv),n.vertexAttribPointer(b.uv,2,n.FLOAT,!1,0,0));
0<=b.uv2&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUV2Buffer),j(b.uv2),n.vertexAttribPointer(b.uv2,2,n.FLOAT,!1,0,0));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),j(b.skinIndex),n.vertexAttribPointer(b.skinIndex,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),j(b.skinWeight),n.vertexAttribPointer(b.skinWeight,4,n.FLOAT,!1,0,0));0<=b.lineDistance&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglLineDistanceBuffer),j(b.lineDistance),
n.vertexAttribPointer(b.lineDistance,1,n.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==ya&&(n.lineWidth(d),ya=d),a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),n.drawElements(n.LINES,e.__webglLineCount,n.UNSIGNED_SHORT,0)):(a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),n.drawElements(n.TRIANGLES,e.__webglFaceCount,n.UNSIGNED_SHORT,0)),L.info.render.calls++,L.info.render.vertices+=e.__webglFaceCount,L.info.render.faces+=e.__webglFaceCount/
3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?n.LINE_STRIP:n.LINES,d=d.linewidth,d!==ya&&(n.lineWidth(d),ya=d),n.drawArrays(f,0,e.__webglLineCount),L.info.render.calls++):f instanceof THREE.ParticleSystem?(n.drawArrays(n.POINTS,0,e.__webglParticleCount),L.info.render.calls++,L.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(n.drawArrays(n.TRIANGLE_STRIP,0,e.__webglVertexCount),L.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
else{var e,f,g,h,i=a.__lights,j=a.fog;V=-1;sb=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Ea.multiply(b.projectionMatrix,b.matrixWorldInverse);rb.setFromMatrix(Ea);
this.autoUpdateObjects&&this.initWebGLObjects(a);p(this.renderPluginsPre,a,b);L.info.render.calls=0;L.info.render.vertices=0;L.info.render.faces=0;L.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||rb.contains(g))){x(g,b);var k=f,l=k.buffer,
o=void 0,r=o=void 0,r=k.object.material;if(r instanceof THREE.MeshFaceMaterial)o=l.materialIndex,0<=o&&(o=r.materials[o],o.transparent?(k.transparent=o,k.opaque=null):(k.opaque=o,k.transparent=null));else if(o=r)o.transparent?(k.transparent=o,k.opaque=null):(k.opaque=o,k.transparent=null);f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(jb.copy(g.matrixWorld.getPosition()),Ea.multiplyVector3(jb),f.z=jb.z),f.id=g.id)}this.sortObjects&&h.sort(m);h=a.__webglObjectsImmediate;
d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(x(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),E(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),q(a.__webglObjects,!1,"",b,i,j,!0,d),t(a.__webglObjectsImmediate,"",b,i,j,!1,d)):(this.setBlending(THREE.NormalBlending),
q(a.__webglObjects,!0,"opaque",b,i,j,!1),t(a.__webglObjectsImmediate,"opaque",b,i,j,!1),q(a.__webglObjects,!1,"transparent",b,i,j,!0),t(a.__webglObjectsImmediate,"transparent",b,i,j,!0));p(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(n.bindTexture(n.TEXTURE_CUBE_MAP,c.__webglTexture),n.generateMipmap(n.TEXTURE_CUBE_MAP),n.bindTexture(n.TEXTURE_CUBE_MAP,null)):(n.bindTexture(n.TEXTURE_2D,
c.__webglTexture),n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=v(a,b,c,d,e);fa=-1;L.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,n,rb):e.render(function(a){L.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var b=
a.__objectsAdded[0],j=a,m=void 0,l=void 0,o=void 0,p=void 0;if(!b.__webglInit)if(b.__webglInit=!0,b._modelViewMatrix=new THREE.Matrix4,b._normalMatrix=new THREE.Matrix3,b instanceof THREE.Mesh)if(l=b.geometry,o=b.material,l instanceof THREE.Geometry){if(void 0===l.geometryGroups){var q=l,ka=void 0,t=void 0,u=void 0,Qa=void 0,rb=void 0,v=void 0,x=void 0,Ea={},C=q.morphTargets.length,F=q.morphNormals.length,D=o instanceof THREE.MeshFaceMaterial;q.geometryGroups={};ka=0;for(t=q.faces.length;ka<t;ka++)u=
q.faces[ka],Qa=D?u.materialIndex:void 0,v=void 0!==Qa?Qa:-1,void 0===Ea[v]&&(Ea[v]={hash:v,counter:0}),x=Ea[v].hash+"_"+Ea[v].counter,void 0===q.geometryGroups[x]&&(q.geometryGroups[x]={faces3:[],faces4:[],materialIndex:Qa,vertices:0,numMorphTargets:C,numMorphNormals:F}),rb=u instanceof THREE.Face3?3:4,65535<q.geometryGroups[x].vertices+rb&&(Ea[v].counter+=1,x=Ea[v].hash+"_"+Ea[v].counter,void 0===q.geometryGroups[x]&&(q.geometryGroups[x]={faces3:[],faces4:[],materialIndex:Qa,vertices:0,numMorphTargets:C,
numMorphNormals:F})),u instanceof THREE.Face3?q.geometryGroups[x].faces3.push(ka):q.geometryGroups[x].faces4.push(ka),q.geometryGroups[x].vertices+=rb;q.geometryGroupsList=[];var G=void 0;for(G in q.geometryGroups)q.geometryGroups[G].id=cb++,q.geometryGroupsList.push(q.geometryGroups[G])}for(m in l.geometryGroups)if(p=l.geometryGroups[m],!p.__webglVertexBuffer){var E=p;E.__webglVertexBuffer=n.createBuffer();E.__webglNormalBuffer=n.createBuffer();E.__webglTangentBuffer=n.createBuffer();E.__webglColorBuffer=
n.createBuffer();E.__webglUVBuffer=n.createBuffer();E.__webglUV2Buffer=n.createBuffer();E.__webglSkinIndicesBuffer=n.createBuffer();E.__webglSkinWeightsBuffer=n.createBuffer();E.__webglFaceBuffer=n.createBuffer();E.__webglLineBuffer=n.createBuffer();var Va=void 0,J=void 0;if(E.numMorphTargets){E.__webglMorphTargetsBuffers=[];Va=0;for(J=E.numMorphTargets;Va<J;Va++)E.__webglMorphTargetsBuffers.push(n.createBuffer())}if(E.numMorphNormals){E.__webglMorphNormalsBuffers=[];Va=0;for(J=E.numMorphNormals;Va<
J;Va++)E.__webglMorphNormalsBuffers.push(n.createBuffer())}L.info.memory.geometries++;d(p,b);l.verticesNeedUpdate=!0;l.morphTargetsNeedUpdate=!0;l.elementsNeedUpdate=!0;l.uvsNeedUpdate=!0;l.normalsNeedUpdate=!0;l.tangentsNeedUpdate=!0;l.colorsNeedUpdate=!0}}else l instanceof THREE.BufferGeometry&&h(l);else if(b instanceof THREE.Ribbon){if(l=b.geometry,!l.__webglVertexBuffer){var I=l;I.__webglVertexBuffer=n.createBuffer();I.__webglColorBuffer=n.createBuffer();I.__webglNormalBuffer=n.createBuffer();
L.info.memory.geometries++;var K=l,ib=b,R=K.vertices.length;K.__vertexArray=new Float32Array(3*R);K.__colorArray=new Float32Array(3*R);K.__normalArray=new Float32Array(3*R);K.__webglVertexCount=R;c(K,ib);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0;l.normalsNeedUpdate=!0}}else if(b instanceof THREE.Line){if(l=b.geometry,!l.__webglVertexBuffer){var M=l;M.__webglVertexBuffer=n.createBuffer();M.__webglColorBuffer=n.createBuffer();M.__webglLineDistanceBuffer=n.createBuffer();L.info.memory.geometries++;
var P=l,T=b,Q=P.vertices.length;P.__vertexArray=new Float32Array(3*Q);P.__colorArray=new Float32Array(3*Q);P.__lineDistanceArray=new Float32Array(1*Q);P.__webglLineCount=Q;c(P,T);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0;l.lineDistancesNeedUpdate=!0}}else if(b instanceof THREE.ParticleSystem&&(l=b.geometry,!l.__webglVertexBuffer))if(l instanceof THREE.Geometry){var N=l;N.__webglVertexBuffer=n.createBuffer();N.__webglColorBuffer=n.createBuffer();L.info.memory.geometries++;var S=l,jb=b,W=S.vertices.length;
S.__vertexArray=new Float32Array(3*W);S.__colorArray=new Float32Array(3*W);S.__sortArray=[];S.__webglParticleCount=W;c(S,jb);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0}else l instanceof THREE.BufferGeometry&&h(l);if(!b.__webglActive){if(b instanceof THREE.Mesh)if(l=b.geometry,l instanceof THREE.BufferGeometry)s(j.__webglObjects,l,b);else for(m in l.geometryGroups)p=l.geometryGroups[m],s(j.__webglObjects,p,b);else b instanceof THREE.Ribbon||b instanceof THREE.Line||b instanceof THREE.ParticleSystem?
(l=b.geometry,s(j.__webglObjects,l,b)):b instanceof THREE.ImmediateRenderObject||b.immediateRenderCallback?j.__webglObjectsImmediate.push({object:b,opaque:null,transparent:null}):b instanceof THREE.Sprite?j.__webglSprites.push(b):b instanceof THREE.LensFlare&&j.__webglFlares.push(b);b.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var O=a.__objectsRemoved[0],V=a;O instanceof THREE.Mesh||O instanceof THREE.ParticleSystem||O instanceof THREE.Ribbon||O instanceof THREE.Line?
r(V.__webglObjects,O):O instanceof THREE.Sprite?B(V.__webglSprites,O):O instanceof THREE.LensFlare?B(V.__webglFlares,O):(O instanceof THREE.ImmediateRenderObject||O.immediateRenderCallback)&&r(V.__webglObjectsImmediate,O);O.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var fa=0,ca=a.__webglObjects.length;fa<ca;fa++){var ea=a.__webglObjects[fa].object,ga=ea.geometry,ba=void 0,sb=void 0,da=void 0;if(ea instanceof THREE.Mesh)if(ga instanceof THREE.BufferGeometry)(ga.verticesNeedUpdate||ga.elementsNeedUpdate||
ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate)&&k(ga,n.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.elementsNeedUpdate=!1,ga.uvsNeedUpdate=!1,ga.normalsNeedUpdate=!1,ga.colorsNeedUpdate=!1,ga.tangentsNeedUpdate=!1;else{for(var Db=0,Gb=ga.geometryGroupsList.length;Db<Gb;Db++)if(ba=ga.geometryGroupsList[Db],da=e(ea,ba),ga.buffersNeedUpdate&&d(ba,ea),sb=da.attributes&&y(da),ga.verticesNeedUpdate||ga.morphTargetsNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||
ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate||sb){var $=ba,Ic=ea,la=n.DYNAMIC_DRAW,pa=!ga.dynamic,Eb=da;if($.__inittedArrays){var qa=f(Eb),hc=Eb.vertexColors?Eb.vertexColors:!1,Aa=g(Eb),ya=qa===THREE.SmoothShading,H=void 0,aa=void 0,ua=void 0,U=void 0,wa=void 0,xa=void 0,va=void 0,Ta=void 0,Fa=void 0,Rb=void 0,Ya=void 0,X=void 0,Y=void 0,Z=void 0,ra=void 0,Ma=void 0,Za=void 0,Oa=void 0,fb=void 0,Sa=void 0,ub=void 0,Ua=void 0,mb=void 0,Hb=void 0,Ib=void 0,Jb=void 0,qb=void 0,Kb=
void 0,Lb=void 0,Mb=void 0,ic=void 0,Nb=void 0,Ob=void 0,Pb=void 0,jc=void 0,za=void 0,Rc=void 0,Xb=void 0,dc=void 0,ec=void 0,$a=void 0,Sc=void 0,Wa=void 0,Xa=void 0,Yb=void 0,Sb=void 0,Na=0,Ra=0,Tb=0,Ub=0,xb=0,gb=0,Da=0,lb=0,Pa=0,ja=0,ma=0,A=0,Ba=void 0,ab=$.__vertexArray,kc=$.__uvArray,lc=$.__uv2Array,yb=$.__normalArray,Ia=$.__tangentArray,bb=$.__colorArray,Ja=$.__skinIndexArray,Ka=$.__skinWeightArray,Kc=$.__morphTargetsArrays,Lc=$.__morphNormalsArrays,Mc=$.__webglCustomAttributesList,z=void 0,
Qb=$.__faceArray,tb=$.__lineArray,nb=Ic.geometry,cd=nb.elementsNeedUpdate,Tc=nb.uvsNeedUpdate,dd=nb.normalsNeedUpdate,ed=nb.tangentsNeedUpdate,fd=nb.colorsNeedUpdate,gd=nb.morphTargetsNeedUpdate,ac=nb.vertices,sa=$.faces3,ta=$.faces4,hb=nb.faces,Nc=nb.faceVertexUvs[0],Oc=nb.faceVertexUvs[1],bc=nb.skinIndices,Zb=nb.skinWeights,$b=nb.morphTargets,tc=nb.morphNormals;if(nb.verticesNeedUpdate){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],X=ac[U.a],Y=ac[U.b],Z=ac[U.c],ab[Ra]=X.x,ab[Ra+1]=X.y,ab[Ra+2]=X.z,
ab[Ra+3]=Y.x,ab[Ra+4]=Y.y,ab[Ra+5]=Y.z,ab[Ra+6]=Z.x,ab[Ra+7]=Z.y,ab[Ra+8]=Z.z,Ra+=9;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],X=ac[U.a],Y=ac[U.b],Z=ac[U.c],ra=ac[U.d],ab[Ra]=X.x,ab[Ra+1]=X.y,ab[Ra+2]=X.z,ab[Ra+3]=Y.x,ab[Ra+4]=Y.y,ab[Ra+5]=Y.z,ab[Ra+6]=Z.x,ab[Ra+7]=Z.y,ab[Ra+8]=Z.z,ab[Ra+9]=ra.x,ab[Ra+10]=ra.y,ab[Ra+11]=ra.z,Ra+=12;n.bindBuffer(n.ARRAY_BUFFER,$.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,ab,la)}if(gd){$a=0;for(Sc=$b.length;$a<Sc;$a++){H=ma=0;for(aa=sa.length;H<aa;H++)Yb=sa[H],
U=hb[Yb],X=$b[$a].vertices[U.a],Y=$b[$a].vertices[U.b],Z=$b[$a].vertices[U.c],Wa=Kc[$a],Wa[ma]=X.x,Wa[ma+1]=X.y,Wa[ma+2]=X.z,Wa[ma+3]=Y.x,Wa[ma+4]=Y.y,Wa[ma+5]=Y.z,Wa[ma+6]=Z.x,Wa[ma+7]=Z.y,Wa[ma+8]=Z.z,Eb.morphNormals&&(ya?(Sb=tc[$a].vertexNormals[Yb],Sa=Sb.a,ub=Sb.b,Ua=Sb.c):Ua=ub=Sa=tc[$a].faceNormals[Yb],Xa=Lc[$a],Xa[ma]=Sa.x,Xa[ma+1]=Sa.y,Xa[ma+2]=Sa.z,Xa[ma+3]=ub.x,Xa[ma+4]=ub.y,Xa[ma+5]=ub.z,Xa[ma+6]=Ua.x,Xa[ma+7]=Ua.y,Xa[ma+8]=Ua.z),ma+=9;H=0;for(aa=ta.length;H<aa;H++)Yb=ta[H],U=hb[Yb],X=
$b[$a].vertices[U.a],Y=$b[$a].vertices[U.b],Z=$b[$a].vertices[U.c],ra=$b[$a].vertices[U.d],Wa=Kc[$a],Wa[ma]=X.x,Wa[ma+1]=X.y,Wa[ma+2]=X.z,Wa[ma+3]=Y.x,Wa[ma+4]=Y.y,Wa[ma+5]=Y.z,Wa[ma+6]=Z.x,Wa[ma+7]=Z.y,Wa[ma+8]=Z.z,Wa[ma+9]=ra.x,Wa[ma+10]=ra.y,Wa[ma+11]=ra.z,Eb.morphNormals&&(ya?(Sb=tc[$a].vertexNormals[Yb],Sa=Sb.a,ub=Sb.b,Ua=Sb.c,mb=Sb.d):mb=Ua=ub=Sa=tc[$a].faceNormals[Yb],Xa=Lc[$a],Xa[ma]=Sa.x,Xa[ma+1]=Sa.y,Xa[ma+2]=Sa.z,Xa[ma+3]=ub.x,Xa[ma+4]=ub.y,Xa[ma+5]=ub.z,Xa[ma+6]=Ua.x,Xa[ma+7]=Ua.y,Xa[ma+
8]=Ua.z,Xa[ma+9]=mb.x,Xa[ma+10]=mb.y,Xa[ma+11]=mb.z),ma+=12;n.bindBuffer(n.ARRAY_BUFFER,$.__webglMorphTargetsBuffers[$a]);n.bufferData(n.ARRAY_BUFFER,Kc[$a],la);Eb.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,$.__webglMorphNormalsBuffers[$a]),n.bufferData(n.ARRAY_BUFFER,Lc[$a],la))}}if(Zb.length){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],Kb=Zb[U.a],Lb=Zb[U.b],Mb=Zb[U.c],Ka[ja]=Kb.x,Ka[ja+1]=Kb.y,Ka[ja+2]=Kb.z,Ka[ja+3]=Kb.w,Ka[ja+4]=Lb.x,Ka[ja+5]=Lb.y,Ka[ja+6]=Lb.z,Ka[ja+7]=Lb.w,Ka[ja+8]=Mb.x,Ka[ja+
9]=Mb.y,Ka[ja+10]=Mb.z,Ka[ja+11]=Mb.w,Nb=bc[U.a],Ob=bc[U.b],Pb=bc[U.c],Ja[ja]=Nb.x,Ja[ja+1]=Nb.y,Ja[ja+2]=Nb.z,Ja[ja+3]=Nb.w,Ja[ja+4]=Ob.x,Ja[ja+5]=Ob.y,Ja[ja+6]=Ob.z,Ja[ja+7]=Ob.w,Ja[ja+8]=Pb.x,Ja[ja+9]=Pb.y,Ja[ja+10]=Pb.z,Ja[ja+11]=Pb.w,ja+=12;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],Kb=Zb[U.a],Lb=Zb[U.b],Mb=Zb[U.c],ic=Zb[U.d],Ka[ja]=Kb.x,Ka[ja+1]=Kb.y,Ka[ja+2]=Kb.z,Ka[ja+3]=Kb.w,Ka[ja+4]=Lb.x,Ka[ja+5]=Lb.y,Ka[ja+6]=Lb.z,Ka[ja+7]=Lb.w,Ka[ja+8]=Mb.x,Ka[ja+9]=Mb.y,Ka[ja+10]=Mb.z,Ka[ja+11]=Mb.w,Ka[ja+
12]=ic.x,Ka[ja+13]=ic.y,Ka[ja+14]=ic.z,Ka[ja+15]=ic.w,Nb=bc[U.a],Ob=bc[U.b],Pb=bc[U.c],jc=bc[U.d],Ja[ja]=Nb.x,Ja[ja+1]=Nb.y,Ja[ja+2]=Nb.z,Ja[ja+3]=Nb.w,Ja[ja+4]=Ob.x,Ja[ja+5]=Ob.y,Ja[ja+6]=Ob.z,Ja[ja+7]=Ob.w,Ja[ja+8]=Pb.x,Ja[ja+9]=Pb.y,Ja[ja+10]=Pb.z,Ja[ja+11]=Pb.w,Ja[ja+12]=jc.x,Ja[ja+13]=jc.y,Ja[ja+14]=jc.z,Ja[ja+15]=jc.w,ja+=16;0<ja&&(n.bindBuffer(n.ARRAY_BUFFER,$.__webglSkinIndicesBuffer),n.bufferData(n.ARRAY_BUFFER,Ja,la),n.bindBuffer(n.ARRAY_BUFFER,$.__webglSkinWeightsBuffer),n.bufferData(n.ARRAY_BUFFER,
Ka,la))}if(fd&&hc){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],va=U.vertexColors,Ta=U.color,3===va.length&&hc===THREE.VertexColors?(Hb=va[0],Ib=va[1],Jb=va[2]):Jb=Ib=Hb=Ta,bb[Pa]=Hb.r,bb[Pa+1]=Hb.g,bb[Pa+2]=Hb.b,bb[Pa+3]=Ib.r,bb[Pa+4]=Ib.g,bb[Pa+5]=Ib.b,bb[Pa+6]=Jb.r,bb[Pa+7]=Jb.g,bb[Pa+8]=Jb.b,Pa+=9;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],va=U.vertexColors,Ta=U.color,4===va.length&&hc===THREE.VertexColors?(Hb=va[0],Ib=va[1],Jb=va[2],qb=va[3]):qb=Jb=Ib=Hb=Ta,bb[Pa]=Hb.r,bb[Pa+1]=Hb.g,bb[Pa+2]=Hb.b,
bb[Pa+3]=Ib.r,bb[Pa+4]=Ib.g,bb[Pa+5]=Ib.b,bb[Pa+6]=Jb.r,bb[Pa+7]=Jb.g,bb[Pa+8]=Jb.b,bb[Pa+9]=qb.r,bb[Pa+10]=qb.g,bb[Pa+11]=qb.b,Pa+=12;0<Pa&&(n.bindBuffer(n.ARRAY_BUFFER,$.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,bb,la))}if(ed&&nb.hasTangents){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],Fa=U.vertexTangents,Ma=Fa[0],Za=Fa[1],Oa=Fa[2],Ia[Da]=Ma.x,Ia[Da+1]=Ma.y,Ia[Da+2]=Ma.z,Ia[Da+3]=Ma.w,Ia[Da+4]=Za.x,Ia[Da+5]=Za.y,Ia[Da+6]=Za.z,Ia[Da+7]=Za.w,Ia[Da+8]=Oa.x,Ia[Da+9]=Oa.y,Ia[Da+10]=Oa.z,Ia[Da+11]=
Oa.w,Da+=12;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],Fa=U.vertexTangents,Ma=Fa[0],Za=Fa[1],Oa=Fa[2],fb=Fa[3],Ia[Da]=Ma.x,Ia[Da+1]=Ma.y,Ia[Da+2]=Ma.z,Ia[Da+3]=Ma.w,Ia[Da+4]=Za.x,Ia[Da+5]=Za.y,Ia[Da+6]=Za.z,Ia[Da+7]=Za.w,Ia[Da+8]=Oa.x,Ia[Da+9]=Oa.y,Ia[Da+10]=Oa.z,Ia[Da+11]=Oa.w,Ia[Da+12]=fb.x,Ia[Da+13]=fb.y,Ia[Da+14]=fb.z,Ia[Da+15]=fb.w,Da+=16;n.bindBuffer(n.ARRAY_BUFFER,$.__webglTangentBuffer);n.bufferData(n.ARRAY_BUFFER,Ia,la)}if(dd&&qa){H=0;for(aa=sa.length;H<aa;H++)if(U=hb[sa[H]],wa=U.vertexNormals,
xa=U.normal,3===wa.length&&ya)for(za=0;3>za;za++)Xb=wa[za],yb[gb]=Xb.x,yb[gb+1]=Xb.y,yb[gb+2]=Xb.z,gb+=3;else for(za=0;3>za;za++)yb[gb]=xa.x,yb[gb+1]=xa.y,yb[gb+2]=xa.z,gb+=3;H=0;for(aa=ta.length;H<aa;H++)if(U=hb[ta[H]],wa=U.vertexNormals,xa=U.normal,4===wa.length&&ya)for(za=0;4>za;za++)Xb=wa[za],yb[gb]=Xb.x,yb[gb+1]=Xb.y,yb[gb+2]=Xb.z,gb+=3;else for(za=0;4>za;za++)yb[gb]=xa.x,yb[gb+1]=xa.y,yb[gb+2]=xa.z,gb+=3;n.bindBuffer(n.ARRAY_BUFFER,$.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,yb,la)}if(Tc&&
Nc&&Aa){H=0;for(aa=sa.length;H<aa;H++)if(ua=sa[H],Rb=Nc[ua],void 0!==Rb)for(za=0;3>za;za++)dc=Rb[za],kc[Tb]=dc.u,kc[Tb+1]=dc.v,Tb+=2;H=0;for(aa=ta.length;H<aa;H++)if(ua=ta[H],Rb=Nc[ua],void 0!==Rb)for(za=0;4>za;za++)dc=Rb[za],kc[Tb]=dc.u,kc[Tb+1]=dc.v,Tb+=2;0<Tb&&(n.bindBuffer(n.ARRAY_BUFFER,$.__webglUVBuffer),n.bufferData(n.ARRAY_BUFFER,kc,la))}if(Tc&&Oc&&Aa){H=0;for(aa=sa.length;H<aa;H++)if(ua=sa[H],Ya=Oc[ua],void 0!==Ya)for(za=0;3>za;za++)ec=Ya[za],lc[Ub]=ec.u,lc[Ub+1]=ec.v,Ub+=2;H=0;for(aa=ta.length;H<
aa;H++)if(ua=ta[H],Ya=Oc[ua],void 0!==Ya)for(za=0;4>za;za++)ec=Ya[za],lc[Ub]=ec.u,lc[Ub+1]=ec.v,Ub+=2;0<Ub&&(n.bindBuffer(n.ARRAY_BUFFER,$.__webglUV2Buffer),n.bufferData(n.ARRAY_BUFFER,lc,la))}if(cd){H=0;for(aa=sa.length;H<aa;H++)Qb[xb]=Na,Qb[xb+1]=Na+1,Qb[xb+2]=Na+2,xb+=3,tb[lb]=Na,tb[lb+1]=Na+1,tb[lb+2]=Na,tb[lb+3]=Na+2,tb[lb+4]=Na+1,tb[lb+5]=Na+2,lb+=6,Na+=3;H=0;for(aa=ta.length;H<aa;H++)Qb[xb]=Na,Qb[xb+1]=Na+1,Qb[xb+2]=Na+3,Qb[xb+3]=Na+1,Qb[xb+4]=Na+2,Qb[xb+5]=Na+3,xb+=6,tb[lb]=Na,tb[lb+1]=Na+
1,tb[lb+2]=Na,tb[lb+3]=Na+3,tb[lb+4]=Na+1,tb[lb+5]=Na+2,tb[lb+6]=Na+2,tb[lb+7]=Na+3,lb+=8,Na+=4;n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,$.__webglFaceBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Qb,la);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,$.__webglLineBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,tb,la)}if(Mc){za=0;for(Rc=Mc.length;za<Rc;za++)if(z=Mc[za],z.__original.needsUpdate){A=0;if(1===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],z.array[A]=z.value[U.a],
z.array[A+1]=z.value[U.b],z.array[A+2]=z.value[U.c],A+=3;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],z.array[A]=z.value[U.a],z.array[A+1]=z.value[U.b],z.array[A+2]=z.value[U.c],z.array[A+3]=z.value[U.d],A+=4}else{if("faces"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)Ba=z.value[sa[H]],z.array[A]=Ba,z.array[A+1]=Ba,z.array[A+2]=Ba,A+=3;H=0;for(aa=ta.length;H<aa;H++)Ba=z.value[ta[H]],z.array[A]=Ba,z.array[A+1]=Ba,z.array[A+2]=Ba,z.array[A+3]=Ba,A+=4}}else if(2===z.size)if(void 0===z.boundTo||"vertices"===
z.boundTo){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],X=z.value[U.a],Y=z.value[U.b],Z=z.value[U.c],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=Y.x,z.array[A+3]=Y.y,z.array[A+4]=Z.x,z.array[A+5]=Z.y,A+=6;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],X=z.value[U.a],Y=z.value[U.b],Z=z.value[U.c],ra=z.value[U.d],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=Y.x,z.array[A+3]=Y.y,z.array[A+4]=Z.x,z.array[A+5]=Z.y,z.array[A+6]=ra.x,z.array[A+7]=ra.y,A+=8}else{if("faces"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)Z=
Y=X=Ba=z.value[sa[H]],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=Y.x,z.array[A+3]=Y.y,z.array[A+4]=Z.x,z.array[A+5]=Z.y,A+=6;H=0;for(aa=ta.length;H<aa;H++)ra=Z=Y=X=Ba=z.value[ta[H]],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=Y.x,z.array[A+3]=Y.y,z.array[A+4]=Z.x,z.array[A+5]=Z.y,z.array[A+6]=ra.x,z.array[A+7]=ra.y,A+=8}}else if(3===z.size){var ia;ia="c"===z.type?["r","g","b"]:["x","y","z"];if(void 0===z.boundTo||"vertices"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],X=z.value[U.a],
Y=z.value[U.b],Z=z.value[U.c],z.array[A]=X[ia[0]],z.array[A+1]=X[ia[1]],z.array[A+2]=X[ia[2]],z.array[A+3]=Y[ia[0]],z.array[A+4]=Y[ia[1]],z.array[A+5]=Y[ia[2]],z.array[A+6]=Z[ia[0]],z.array[A+7]=Z[ia[1]],z.array[A+8]=Z[ia[2]],A+=9;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],X=z.value[U.a],Y=z.value[U.b],Z=z.value[U.c],ra=z.value[U.d],z.array[A]=X[ia[0]],z.array[A+1]=X[ia[1]],z.array[A+2]=X[ia[2]],z.array[A+3]=Y[ia[0]],z.array[A+4]=Y[ia[1]],z.array[A+5]=Y[ia[2]],z.array[A+6]=Z[ia[0]],z.array[A+7]=Z[ia[1]],
z.array[A+8]=Z[ia[2]],z.array[A+9]=ra[ia[0]],z.array[A+10]=ra[ia[1]],z.array[A+11]=ra[ia[2]],A+=12}else if("faces"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)Z=Y=X=Ba=z.value[sa[H]],z.array[A]=X[ia[0]],z.array[A+1]=X[ia[1]],z.array[A+2]=X[ia[2]],z.array[A+3]=Y[ia[0]],z.array[A+4]=Y[ia[1]],z.array[A+5]=Y[ia[2]],z.array[A+6]=Z[ia[0]],z.array[A+7]=Z[ia[1]],z.array[A+8]=Z[ia[2]],A+=9;H=0;for(aa=ta.length;H<aa;H++)ra=Z=Y=X=Ba=z.value[ta[H]],z.array[A]=X[ia[0]],z.array[A+1]=X[ia[1]],z.array[A+2]=X[ia[2]],
z.array[A+3]=Y[ia[0]],z.array[A+4]=Y[ia[1]],z.array[A+5]=Y[ia[2]],z.array[A+6]=Z[ia[0]],z.array[A+7]=Z[ia[1]],z.array[A+8]=Z[ia[2]],z.array[A+9]=ra[ia[0]],z.array[A+10]=ra[ia[1]],z.array[A+11]=ra[ia[2]],A+=12}else if("faceVertices"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)Ba=z.value[sa[H]],X=Ba[0],Y=Ba[1],Z=Ba[2],z.array[A]=X[ia[0]],z.array[A+1]=X[ia[1]],z.array[A+2]=X[ia[2]],z.array[A+3]=Y[ia[0]],z.array[A+4]=Y[ia[1]],z.array[A+5]=Y[ia[2]],z.array[A+6]=Z[ia[0]],z.array[A+7]=Z[ia[1]],z.array[A+
8]=Z[ia[2]],A+=9;H=0;for(aa=ta.length;H<aa;H++)Ba=z.value[ta[H]],X=Ba[0],Y=Ba[1],Z=Ba[2],ra=Ba[3],z.array[A]=X[ia[0]],z.array[A+1]=X[ia[1]],z.array[A+2]=X[ia[2]],z.array[A+3]=Y[ia[0]],z.array[A+4]=Y[ia[1]],z.array[A+5]=Y[ia[2]],z.array[A+6]=Z[ia[0]],z.array[A+7]=Z[ia[1]],z.array[A+8]=Z[ia[2]],z.array[A+9]=ra[ia[0]],z.array[A+10]=ra[ia[1]],z.array[A+11]=ra[ia[2]],A+=12}}else if(4===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)U=hb[sa[H]],X=z.value[U.a],Y=z.value[U.b],
Z=z.value[U.c],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=X.z,z.array[A+3]=X.w,z.array[A+4]=Y.x,z.array[A+5]=Y.y,z.array[A+6]=Y.z,z.array[A+7]=Y.w,z.array[A+8]=Z.x,z.array[A+9]=Z.y,z.array[A+10]=Z.z,z.array[A+11]=Z.w,A+=12;H=0;for(aa=ta.length;H<aa;H++)U=hb[ta[H]],X=z.value[U.a],Y=z.value[U.b],Z=z.value[U.c],ra=z.value[U.d],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=X.z,z.array[A+3]=X.w,z.array[A+4]=Y.x,z.array[A+5]=Y.y,z.array[A+6]=Y.z,z.array[A+7]=Y.w,z.array[A+8]=Z.x,z.array[A+9]=Z.y,z.array[A+
10]=Z.z,z.array[A+11]=Z.w,z.array[A+12]=ra.x,z.array[A+13]=ra.y,z.array[A+14]=ra.z,z.array[A+15]=ra.w,A+=16}else if("faces"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)Z=Y=X=Ba=z.value[sa[H]],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=X.z,z.array[A+3]=X.w,z.array[A+4]=Y.x,z.array[A+5]=Y.y,z.array[A+6]=Y.z,z.array[A+7]=Y.w,z.array[A+8]=Z.x,z.array[A+9]=Z.y,z.array[A+10]=Z.z,z.array[A+11]=Z.w,A+=12;H=0;for(aa=ta.length;H<aa;H++)ra=Z=Y=X=Ba=z.value[ta[H]],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=
X.z,z.array[A+3]=X.w,z.array[A+4]=Y.x,z.array[A+5]=Y.y,z.array[A+6]=Y.z,z.array[A+7]=Y.w,z.array[A+8]=Z.x,z.array[A+9]=Z.y,z.array[A+10]=Z.z,z.array[A+11]=Z.w,z.array[A+12]=ra.x,z.array[A+13]=ra.y,z.array[A+14]=ra.z,z.array[A+15]=ra.w,A+=16}else if("faceVertices"===z.boundTo){H=0;for(aa=sa.length;H<aa;H++)Ba=z.value[sa[H]],X=Ba[0],Y=Ba[1],Z=Ba[2],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=X.z,z.array[A+3]=X.w,z.array[A+4]=Y.x,z.array[A+5]=Y.y,z.array[A+6]=Y.z,z.array[A+7]=Y.w,z.array[A+8]=Z.x,z.array[A+
9]=Z.y,z.array[A+10]=Z.z,z.array[A+11]=Z.w,A+=12;H=0;for(aa=ta.length;H<aa;H++)Ba=z.value[ta[H]],X=Ba[0],Y=Ba[1],Z=Ba[2],ra=Ba[3],z.array[A]=X.x,z.array[A+1]=X.y,z.array[A+2]=X.z,z.array[A+3]=X.w,z.array[A+4]=Y.x,z.array[A+5]=Y.y,z.array[A+6]=Y.z,z.array[A+7]=Y.w,z.array[A+8]=Z.x,z.array[A+9]=Z.y,z.array[A+10]=Z.z,z.array[A+11]=Z.w,z.array[A+12]=ra.x,z.array[A+13]=ra.y,z.array[A+14]=ra.z,z.array[A+15]=ra.w,A+=16}n.bindBuffer(n.ARRAY_BUFFER,z.buffer);n.bufferData(n.ARRAY_BUFFER,z.array,la)}}pa&&(delete $.__inittedArrays,
delete $.__colorArray,delete $.__normalArray,delete $.__tangentArray,delete $.__uvArray,delete $.__uv2Array,delete $.__faceArray,delete $.__vertexArray,delete $.__lineArray,delete $.__skinIndexArray,delete $.__skinWeightArray)}}ga.verticesNeedUpdate=!1;ga.morphTargetsNeedUpdate=!1;ga.elementsNeedUpdate=!1;ga.uvsNeedUpdate=!1;ga.normalsNeedUpdate=!1;ga.colorsNeedUpdate=!1;ga.tangentsNeedUpdate=!1;ga.buffersNeedUpdate=!1;da.attributes&&w(da)}else if(ea instanceof THREE.Ribbon){da=e(ea,ga);sb=da.attributes&&
y(da);if(ga.verticesNeedUpdate||ga.colorsNeedUpdate||ga.normalsNeedUpdate||sb){var zb=ga,uc=n.DYNAMIC_DRAW,mc=void 0,nc=void 0,oc=void 0,vc=void 0,Ca=void 0,wc=void 0,xc=void 0,yc=void 0,Uc=void 0,db=void 0,fc=void 0,Ga=void 0,ob=void 0,Vc=zb.vertices,Wc=zb.colors,Xc=zb.normals,hd=Vc.length,id=Wc.length,jd=Xc.length,zc=zb.__vertexArray,Ac=zb.__colorArray,Bc=zb.__normalArray,kd=zb.colorsNeedUpdate,ld=zb.normalsNeedUpdate,Pc=zb.__webglCustomAttributesList;if(zb.verticesNeedUpdate){for(mc=0;mc<hd;mc++)vc=
Vc[mc],Ca=3*mc,zc[Ca]=vc.x,zc[Ca+1]=vc.y,zc[Ca+2]=vc.z;n.bindBuffer(n.ARRAY_BUFFER,zb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,zc,uc)}if(kd){for(nc=0;nc<id;nc++)wc=Wc[nc],Ca=3*nc,Ac[Ca]=wc.r,Ac[Ca+1]=wc.g,Ac[Ca+2]=wc.b;n.bindBuffer(n.ARRAY_BUFFER,zb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Ac,uc)}if(ld){for(oc=0;oc<jd;oc++)xc=Xc[oc],Ca=3*oc,Bc[Ca]=xc.x,Bc[Ca+1]=xc.y,Bc[Ca+2]=xc.z;n.bindBuffer(n.ARRAY_BUFFER,zb.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,Bc,uc)}if(Pc){yc=0;for(Uc=
Pc.length;yc<Uc;yc++)if(Ga=Pc[yc],Ga.needsUpdate&&(void 0===Ga.boundTo||"vertices"===Ga.boundTo)){Ca=0;fc=Ga.value.length;if(1===Ga.size)for(db=0;db<fc;db++)Ga.array[db]=Ga.value[db];else if(2===Ga.size)for(db=0;db<fc;db++)ob=Ga.value[db],Ga.array[Ca]=ob.x,Ga.array[Ca+1]=ob.y,Ca+=2;else if(3===Ga.size)if("c"===Ga.type)for(db=0;db<fc;db++)ob=Ga.value[db],Ga.array[Ca]=ob.r,Ga.array[Ca+1]=ob.g,Ga.array[Ca+2]=ob.b,Ca+=3;else for(db=0;db<fc;db++)ob=Ga.value[db],Ga.array[Ca]=ob.x,Ga.array[Ca+1]=ob.y,Ga.array[Ca+
2]=ob.z,Ca+=3;else if(4===Ga.size)for(db=0;db<fc;db++)ob=Ga.value[db],Ga.array[Ca]=ob.x,Ga.array[Ca+1]=ob.y,Ga.array[Ca+2]=ob.z,Ga.array[Ca+3]=ob.w,Ca+=4;n.bindBuffer(n.ARRAY_BUFFER,Ga.buffer);n.bufferData(n.ARRAY_BUFFER,Ga.array,uc)}}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=!1;ga.normalsNeedUpdate=!1;da.attributes&&w(da)}else if(ea instanceof THREE.Line){da=e(ea,ga);sb=da.attributes&&y(da);if(ga.verticesNeedUpdate||ga.colorsNeedUpdate||ga.lineDistancesNeedUpdate||sb){var Ab=ga,Cc=n.DYNAMIC_DRAW,
pc=void 0,qc=void 0,rc=void 0,Dc=void 0,La=void 0,Ec=void 0,Yc=Ab.vertices,Zc=Ab.colors,$c=Ab.lineDistances,md=Yc.length,nd=Zc.length,od=$c.length,Fc=Ab.__vertexArray,Gc=Ab.__colorArray,ad=Ab.__lineDistanceArray,pd=Ab.colorsNeedUpdate,qd=Ab.lineDistancesNeedUpdate,Qc=Ab.__webglCustomAttributesList,Hc=void 0,bd=void 0,eb=void 0,gc=void 0,pb=void 0,Ha=void 0;if(Ab.verticesNeedUpdate){for(pc=0;pc<md;pc++)Dc=Yc[pc],La=3*pc,Fc[La]=Dc.x,Fc[La+1]=Dc.y,Fc[La+2]=Dc.z;n.bindBuffer(n.ARRAY_BUFFER,Ab.__webglVertexBuffer);
n.bufferData(n.ARRAY_BUFFER,Fc,Cc)}if(pd){for(qc=0;qc<nd;qc++)Ec=Zc[qc],La=3*qc,Gc[La]=Ec.r,Gc[La+1]=Ec.g,Gc[La+2]=Ec.b;n.bindBuffer(n.ARRAY_BUFFER,Ab.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Gc,Cc)}if(qd){for(rc=0;rc<od;rc++)ad[rc]=$c[rc];n.bindBuffer(n.ARRAY_BUFFER,Ab.__webglLineDistanceBuffer);n.bufferData(n.ARRAY_BUFFER,ad,Cc)}if(Qc){Hc=0;for(bd=Qc.length;Hc<bd;Hc++)if(Ha=Qc[Hc],Ha.needsUpdate&&(void 0===Ha.boundTo||"vertices"===Ha.boundTo)){La=0;gc=Ha.value.length;if(1===Ha.size)for(eb=
0;eb<gc;eb++)Ha.array[eb]=Ha.value[eb];else if(2===Ha.size)for(eb=0;eb<gc;eb++)pb=Ha.value[eb],Ha.array[La]=pb.x,Ha.array[La+1]=pb.y,La+=2;else if(3===Ha.size)if("c"===Ha.type)for(eb=0;eb<gc;eb++)pb=Ha.value[eb],Ha.array[La]=pb.r,Ha.array[La+1]=pb.g,Ha.array[La+2]=pb.b,La+=3;else for(eb=0;eb<gc;eb++)pb=Ha.value[eb],Ha.array[La]=pb.x,Ha.array[La+1]=pb.y,Ha.array[La+2]=pb.z,La+=3;else if(4===Ha.size)for(eb=0;eb<gc;eb++)pb=Ha.value[eb],Ha.array[La]=pb.x,Ha.array[La+1]=pb.y,Ha.array[La+2]=pb.z,Ha.array[La+
3]=pb.w,La+=4;n.bindBuffer(n.ARRAY_BUFFER,Ha.buffer);n.bufferData(n.ARRAY_BUFFER,Ha.array,Cc)}}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=!1;ga.lineDistancesNeedUpdate=!1;da.attributes&&w(da)}else ea instanceof THREE.ParticleSystem&&(ga instanceof THREE.BufferGeometry?((ga.verticesNeedUpdate||ga.colorsNeedUpdate)&&k(ga,n.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1):(da=e(ea,ga),sb=da.attributes&&y(da),(ga.verticesNeedUpdate||ga.colorsNeedUpdate||ea.sortParticles||
sb)&&i(ga,n.DYNAMIC_DRAW,ea),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1,da.attributes&&w(da)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,i,j,k,l,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.LineDashedMaterial?m="dashed":a instanceof
THREE.ParticleBasicMaterial&&(m="particle_basic");if(m){var o=THREE.ShaderLib[m];a.uniforms=THREE.UniformsUtils.clone(o.uniforms);a.vertexShader=o.vertexShader;a.fragmentShader=o.fragmentShader}var p,q,r;e=p=q=r=o=0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&p++,g instanceof THREE.PointLight&&q++,g instanceof THREE.SpotLight&&r++,g instanceof THREE.HemisphereLight&&o++);e=p;f=q;g=r;h=o;o=p=0;for(r=b.length;o<r;o++)q=b[o],q.castShadow&&(q instanceof THREE.SpotLight&&
p++,q instanceof THREE.DirectionalLight&&!q.shadowCascade&&p++);l=p;Za&&d&&d.useVertexTexture?k=1024:(b=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),k=b);a:{q=a.fragmentShader;r=a.vertexShader;o=a.uniforms;b=a.attributes;p=a.defines;var c={map:!!a.map,envMap:!!a.envMap,
lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:k,useVertexTexture:Za&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,
maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},ka,s,t,d=[];m?d.push(m):(d.push(q),d.push(r));for(s in p)d.push(s),d.push(p[s]);for(ka in c)d.push(ka),d.push(c[ka]);m=d.join();
ka=0;for(s=R.length;ka<s;ka++)if(d=R[ka],d.code===m){d.usedTimes++;j=d.program;break a}ka=[];for(t in p)s=p[t],!1!==s&&(s="#define "+t+" "+s,ka.push(s));s=ka.join("\n");t=n.createProgram();ka=["precision "+T+" float;",s,ub?"#define VERTEX_TEXTURES":"",L.gammaInput?"#define GAMMA_INPUT":"",L.gammaOutput?"#define GAMMA_OUTPUT":"",L.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+
c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+
c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?
"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
s=["precision "+T+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",s,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",L.gammaInput?"#define GAMMA_INPUT":"",L.gammaOutput?"#define GAMMA_OUTPUT":"",L.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");s=D("fragment",s+q);ka=D("vertex",ka+r);n.attachShader(t,ka);n.attachShader(t,s);n.linkProgram(t);n.getProgramParameter(t,n.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+n.getProgramParameter(t,n.VALIDATE_STATUS)+
", gl error ["+n.getError()+"]");n.deleteShader(s);n.deleteShader(ka);t.uniforms={};t.attributes={};var u;ka="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?ka.push("boneTexture"):ka.push("boneGlobalMatrices");for(u in o)ka.push(u);u=ka;ka=0;for(s=u.length;ka<s;ka++)d=u[ka],t.uniforms[d]=n.getUniformLocation(t,d);ka="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(u=0;u<
c.maxMorphTargets;u++)ka.push("morphTarget"+u);for(u=0;u<c.maxMorphNormals;u++)ka.push("morphNormal"+u);for(j in b)ka.push(j);j=ka;u=0;for(b=j.length;u<b;u++)ka=j[u],t.attributes[ka]=n.getAttribLocation(t,ka);t.id=ea++;R.push({program:t,code:m,usedTimes:1});L.info.memory.programs=R.length;j=t}a.program=j;u=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(j=0;j<this.maxMorphTargets;j++)t=b+j,0<=u[t]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=
0;b="morphNormal";for(j=0;j<this.maxMorphNormals;j++)t=b+j,0<=u[t]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?n.frontFace(n.CCW):n.frontFace(n.CW),"back"===a?n.cullFace(n.BACK):"front"===a?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK),n.enable(n.CULL_FACE)):n.disable(n.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;ua!==b&&
(b?n.disable(n.CULL_FACE):n.enable(n.CULL_FACE),ua=b);pa!==a&&(a?n.frontFace(n.CW):n.frontFace(n.CCW),pa=a)};this.setDepthTest=function(a){Oa!==a&&(a?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST),Oa=a)};this.setDepthWrite=function(a){Ua!==a&&(n.depthMask(a),Ua=a)};this.setBlending=function(a,b,c,d){a!==xa&&(a===THREE.NoBlending?n.disable(n.BLEND):a===THREE.AdditiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE)):a===THREE.SubtractiveBlending?(n.enable(n.BLEND),
n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR)):a===THREE.CustomBlending?n.enable(n.BLEND):(n.enable(n.BLEND),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)),xa=a);if(a===THREE.CustomBlending){if(b!==Ta&&(n.blendEquation(O(b)),Ta=b),c!==Ya||d!==Sa)n.blendFunc(O(c),O(d)),Ya=c,Sa=d}else Sa=
Ya=Ta=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=n.createTexture(),L.info.memory.textures++);n.activeTexture(n.TEXTURE0+b);n.bindTexture(n.TEXTURE_2D,a.__webglTexture);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,a.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=O(a.format),f=O(a.type);K(n.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=
a.mipmaps,g=0,h=f.length;g<h;g++)c=f[g],n.compressedTexImage2D(n.TEXTURE_2D,g,e,c.width,c.height,0,c.data);else a instanceof THREE.DataTexture?n.texImage2D(n.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):n.texImage2D(n.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&n.generateMipmap(n.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;
if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.__webglTexture=n.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=O(a.format),e=O(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture);K(n.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=n.createFramebuffer();a.__webglRenderbuffer[f]=n.createRenderbuffer();n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+
f,0,d,a.width,a.height,0,d,e,null);var g=a,h=n.TEXTURE_CUBE_MAP_POSITIVE_X+f;n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer[f]);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,h,g.__webglTexture,0);I(a.__webglRenderbuffer[f],a)}c&&n.generateMipmap(n.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=n.createFramebuffer(),a.__webglRenderbuffer=n.createRenderbuffer(),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),K(n.TEXTURE_2D,a,c),n.texImage2D(n.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=
n.TEXTURE_2D,n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,d,a.__webglTexture,0),I(a.__webglRenderbuffer,a),c&&n.generateMipmap(n.TEXTURE_2D);b?n.bindTexture(n.TEXTURE_CUBE_MAP,null):n.bindTexture(n.TEXTURE_2D,null);n.bindRenderbuffer(n.RENDERBUFFER,null);n.bindFramebuffer(n.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Ma,a=Fa,d=mb,e=qa);b!==da&&(n.bindFramebuffer(n.FRAMEBUFFER,
b),n.viewport(d,e,c,a),da=b);wa=c;ka=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;a.getHSV(e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,k=f.faces,j=a.faceVertexUvs[0],f=f.faceVertexUvs[0];b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var l=0,m=h.length;l<m;l++){var o=h[l].clone();c&&c.multiplyVector3(o);g.push(o)}l=0;for(m=k.length;l<m;l++){var o=k[l],p,q,t=o.vertexNormals,s=o.vertexColors;o instanceof THREE.Face3?
p=new THREE.Face3(o.a+e,o.b+e,o.c+e):o instanceof THREE.Face4&&(p=new THREE.Face4(o.a+e,o.b+e,o.c+e,o.d+e));p.normal.copy(o.normal);d&&d.multiplyVector3(p.normal);g=0;for(h=t.length;g<h;g++)q=t[g].clone(),d&&d.multiplyVector3(q),p.vertexNormals.push(q);p.color.copy(o.color);g=0;for(h=s.length;g<h;g++)q=s[g],p.vertexColors.push(q.clone());p.materialIndex=o.materialIndex;p.centroid.copy(o.centroid);c&&c.multiplyVector3(p.centroid);i.push(p)}l=0;for(m=f.length;l<m;l++){c=f[l];d=[];g=0;for(h=c.length;g<
h;g++)d.push(new THREE.UV(c[g].u,c[g].v));j.push(d)}},removeMaterials:function(a,b){for(var c={},d=0,e=b.length;d<e;d++)c[b[d]]=!0;for(var f,g=[],d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f.materialIndex in c||g.push(f);a.faces=g},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);
g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];var b=b.vertices[a.d],g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,
e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,i=0,k=[],j,l,m,o;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(j=g[d.a],l=g[d.b],m=g[d.c],
d._area=THREE.GeometryUtils.triangleArea(j,l,m)):d instanceof THREE.Face4&&(j=g[d.a],l=g[d.b],m=g[d.c],o=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(j,l,o),d._area2=THREE.GeometryUtils.triangleArea(l,m,o),d._area=d._area1+d._area2),i+=d._area,k[e]=i;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*i,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);
c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)if(1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v)d[e].v-=Math.floor(d[e].v)},triangulateQuads:function(a){var b,
c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=a.faces[b],d instanceof THREE.Face4){e=d.a;var i=d.b,k=d.c,j=d.d,l=new THREE.Face3,m=new THREE.Face3;l.color.copy(d.color);m.color.copy(d.color);l.materialIndex=d.materialIndex;m.materialIndex=d.materialIndex;l.a=e;l.b=i;l.c=j;m.a=i;m.b=k;m.c=j;4===d.vertexColors.length&&(l.vertexColors[0]=d.vertexColors[0].clone(),l.vertexColors[1]=d.vertexColors[1].clone(),
l.vertexColors[2]=d.vertexColors[3].clone(),m.vertexColors[0]=d.vertexColors[1].clone(),m.vertexColors[1]=d.vertexColors[2].clone(),m.vertexColors[2]=d.vertexColors[3].clone());f.push(l,m);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(l=a.faceVertexUvs[d][b],i=l[1],k=l[2],j=l[3],l=[l[0].clone(),i.clone(),j.clone()],i=[i.clone(),k.clone(),j.clone()],h[d].push(l,i));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{f.push(d);d=0;for(e=
a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],k=a.vertices[f.d];b.push(g.clone());b.push(h.clone());
b.push(i.clone());b.push(k.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,k,j,l,m,o,p,q,t,s,y,w,r,B=[],v=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)v[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,k=a.vertices[f],j=a.vertices[g],
l=a.vertices[h],o=k.distanceTo(j),p=j.distanceTo(l),m=k.distanceTo(l),o>b||p>b||m>b){i=a.vertices.length;w=e.clone();r=e.clone();o>=p&&o>=m?(k=k.clone(),k.lerpSelf(j,0.5),w.a=f,w.b=i,w.c=h,r.a=i,r.b=g,r.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),w.vertexNormals[1].copy(f),r.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),w.vertexColors[1].copy(f),r.vertexColors[0].copy(f)),e=0):
p>=o&&p>=m?(k=j.clone(),k.lerpSelf(l,0.5),w.a=f,w.b=g,w.c=i,r.a=i,r.b=h,r.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),w.vertexNormals[2].copy(f),r.vertexNormals[0].copy(f),r.vertexNormals[1].copy(e.vertexNormals[2]),r.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),w.vertexColors[2].copy(f),r.vertexColors[0].copy(f),r.vertexColors[1].copy(e.vertexColors[2]),r.vertexColors[2].copy(e.vertexColors[0])),
e=1):(k=k.clone(),k.lerpSelf(l,0.5),w.a=f,w.b=g,w.c=i,r.a=i,r.b=g,r.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),w.vertexNormals[2].copy(f),r.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),w.vertexColors[2].copy(f),r.vertexColors[0].copy(f)),e=2);B.push(w,r);a.vertices.push(k);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],r=k[0],h=
k[1],w=k[2],0===e?(j=r.clone(),j.lerpSelf(h,0.5),k=[r.clone(),j.clone(),w.clone()],h=[j.clone(),h.clone(),w.clone()]):1===e?(j=h.clone(),j.lerpSelf(w,0.5),k=[r.clone(),h.clone(),j.clone()],h=[j.clone(),w.clone(),r.clone()]):(j=r.clone(),j.lerpSelf(w,0.5),k=[r.clone(),h.clone(),j.clone()],h=[j.clone(),h.clone(),w.clone()]),v[f].push(k,h))}else{B.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)v[f].push(a.faceVertexUvs[f][c])}else if(f=e.a,g=e.b,h=e.c,i=e.d,k=a.vertices[f],j=a.vertices[g],l=a.vertices[h],
m=a.vertices[i],o=k.distanceTo(j),p=j.distanceTo(l),q=l.distanceTo(m),t=k.distanceTo(m),o>b||p>b||q>b||t>b){s=a.vertices.length;y=a.vertices.length+1;w=e.clone();r=e.clone();o>=p&&o>=q&&o>=t||q>=p&&q>=o&&q>=t?(o=k.clone(),o.lerpSelf(j,0.5),j=l.clone(),j.lerpSelf(m,0.5),w.a=f,w.b=s,w.c=y,w.d=i,r.a=s,r.b=g,r.c=h,r.d=y,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),w.vertexNormals[1].copy(f),
w.vertexNormals[2].copy(g),r.vertexNormals[0].copy(f),r.vertexNormals[3].copy(g)),4===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),w.vertexColors[1].copy(f),w.vertexColors[2].copy(g),r.vertexColors[0].copy(f),r.vertexColors[3].copy(g)),e=0):(o=j.clone(),o.lerpSelf(l,0.5),j=m.clone(),j.lerpSelf(k,0.5),w.a=f,w.b=g,w.c=s,w.d=y,r.a=y,r.b=s,r.c=h,r.d=i,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),
f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),w.vertexNormals[2].copy(f),w.vertexNormals[3].copy(g),r.vertexNormals[0].copy(g),r.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),w.vertexColors[2].copy(f),w.vertexColors[3].copy(g),r.vertexColors[0].copy(g),r.vertexColors[1].copy(f)),e=1);B.push(w,r);a.vertices.push(o,j);
f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],r=k[0],h=k[1],w=k[2],k=k[3],0===e?(j=r.clone(),j.lerpSelf(h,0.5),l=w.clone(),l.lerpSelf(k,0.5),r=[r.clone(),j.clone(),l.clone(),k.clone()],h=[j.clone(),h.clone(),w.clone(),l.clone()]):(j=h.clone(),j.lerpSelf(w,0.5),l=k.clone(),l.lerpSelf(r,0.5),r=[r.clone(),h.clone(),j.clone(),l.clone()],h=[l.clone(),j.clone(),w.clone(),k.clone()]),v[f].push(r,h))}else{B.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)v[f].push(a.faceVertexUvs[f][c])}a.faces=
B;a.faceVertexUvs=v}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);f.sourceFile=a;return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;for(var b=0,g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount=e.loadCount+1;if(e.loadCount===6){f.needsUpdate=true;c&&c()}};h.onerror=
d;h.crossOrigin=this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;for(var b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,true);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount=e.loadCount+1;if(e.loadCount===6){f.format=d.format;f.needsUpdate=true;c&&c()}}},g=0,h=a.length;g<h;++g){var i=
{};e[g]=i;var k=new XMLHttpRequest;k.onload=b(k,i);k.onerror=d;k.open("GET",a[g],!0);k.responseType="arraybuffer";k.send(null)}return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var i=h[21];switch(i){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(i&255,i>>8&255,i>>16&255,i>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;f=d.width;g=d.height;for(i=0;i<d.mipmapCount;i++){var k=Math.max(4,f)/
4*Math.max(4,g)/4*e,j={data:new Uint8Array(a,h,k),width:f,height:g};d.mipmaps.push(j);h+=k;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,i=g.createImageData(d,e),k=i.data,j=0;j<d;j++)for(var l=0;l<e;l++){var m=
0>l-1?0:l-1,o=l+1>e-1?e-1:l+1,p=0>j-1?0:j-1,q=j+1>d-1?d-1:j+1,t=[],s=[0,0,h[4*(l*d+j)]/255*b];t.push([-1,0,h[4*(l*d+p)]/255*b]);t.push([-1,-1,h[4*(m*d+p)]/255*b]);t.push([0,-1,h[4*(m*d+j)]/255*b]);t.push([1,-1,h[4*(m*d+q)]/255*b]);t.push([1,0,h[4*(l*d+q)]/255*b]);t.push([1,1,h[4*(o*d+q)]/255*b]);t.push([0,1,h[4*(o*d+j)]/255*b]);t.push([-1,1,h[4*(o*d+p)]/255*b]);m=[];p=t.length;for(o=0;o<p;o++){var q=t[o],y=t[(o+1)%p],q=[q[0]-s[0],q[1]-s[1],q[2]-s[2]],y=[y[0]-s[0],y[1]-s[1],y[2]-s[2]];m.push(c([q[1]*
y[2]-q[2]*y[1],q[2]*y[0]-q[0]*y[2],q[0]*y[1]-q[1]*y[0]]))}t=[0,0,0];for(o=0;o<m.length;o++)t[0]+=m[o][0],t[1]+=m[o][1],t[2]+=m[o][2];t[0]/=m.length;t[1]/=m.length;t[2]/=m.length;s=4*(l*d+j);k[s]=255*((t[0]+1)/2)|0;k[s+1]=255*((t[1]+1)/2)|0;k[s+2]=255*t[2]|0;k[s+3]=255}g.putImageData(i,0,0);return f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),c=Math.floor(255*c.b),h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,
a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvReflect = reflect( I, worldNormal );\nvRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"}}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,e=String(a).split(""),f=e.length,g=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,k,j,l,m,o,p,q,t,s=b.glyphs[a]||b.glyphs["?"];if(s){if(s.o){b=s._cachedOutline||(s._cachedOutline=s.o.split(" "));k=b.length;for(a=0;a<k;)switch(i=b[a++],i){case "m":i=b[a++]*c+d;j=b[a++]*c;e.moveTo(i,j);break;case "l":i=b[a++]*c+d;j=b[a++]*c;e.lineTo(i,j);break;case "q":i=b[a++]*
c+d;j=b[a++]*c;o=b[a++]*c+d;p=b[a++]*c;e.quadraticCurveTo(o,p,i,j);if(g=f[f.length-1]){l=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++){var y=g/h;THREE.Shape.Utils.b2(y,l,o,i);THREE.Shape.Utils.b2(y,m,p,j)}}break;case "b":if(i=b[a++]*c+d,j=b[a++]*c,o=b[a++]*c+d,p=b[a++]*-c,q=b[a++]*c+d,t=b[a++]*-c,e.bezierCurveTo(i,j,o,p,q,t),g=f[f.length-1]){l=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++)y=g/h,THREE.Shape.Utils.b3(y,l,o,q,i),THREE.Shape.Utils.b3(y,m,p,t,j)}}}return{offset:s.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],i,k,j;if(0<b(a))for(k=0;k<e;k++)g[k]=k;else for(k=0;k<e;k++)g[k]=e-1-k;var l=2*e;for(k=e-1;2<e;){if(0>=l--){console.log("Warning, unable to triangulate polygon!");break}i=k;e<=i&&(i=0);k=i+1;e<=k&&(k=0);j=k+1;e<=j&&(j=0);var m;a:{m=a;var o=i,p=k,q=j,t=e,s=g,y=void 0,w=void 0,r=void 0,B=void 0,v=void 0,
u=void 0,x=void 0,F=void 0,C=void 0,w=m[s[o]].x,r=m[s[o]].y,B=m[s[p]].x,v=m[s[p]].y,u=m[s[q]].x,x=m[s[q]].y;if(1E-10>(B-w)*(x-r)-(v-r)*(u-w))m=!1;else{for(y=0;y<t;y++)if(!(y==o||y==p||y==q)){var F=m[s[y]].x,C=m[s[y]].y,E=void 0,M=void 0,D=void 0,K=void 0,I=void 0,N=void 0,O=void 0,P=void 0,T=void 0,ba=void 0,Q=void 0,G=void 0,E=D=I=void 0,E=u-B,M=x-v,D=w-u,K=r-x,I=B-w,N=v-r,O=F-w,P=C-r,T=F-B,ba=C-v,Q=F-u,G=C-x,E=E*ba-M*T,I=I*P-N*O,D=D*G-K*Q;if(0<=E&&0<=D&&0<=I){m=!1;break a}}m=!0}}if(m){f.push([a[g[i]],
a[g[k]],a[g[j]]]);h.push([g[i],g[k],g[j]]);i=k;for(j=k+1;j<e;i++,j++)g[i]=g[j];e--;l=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,i;g<=h;)if(d=Math.floor(g+(h-g)/2),i=c[d]-f,0>i)g=d+1;else if(0<i)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};
THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=0.5*(c-a),d=0.5*(d-b),f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,i,k,j,l=a[0]instanceof THREE.Vector3;j=l?new THREE.Vector3:new THREE.Vector2;i=0;for(k=a.length;i<k;i++)h=a[i],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),l&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),j.addSelf(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:j.divideScalar(k)};l&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,i=g/c.maxX,i=b.getUtoTmapping(i,g),g=b.getPoint(i),h=b.getNormalVector(i).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);i=i.getPoint(g?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,e,f,g,h,i,k,j,l,m,o,p,q;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];i=f[3];l=f[0];m=f[1];0<c.length?(g=c[c.length-1],o=g.x,
p=g.y):(g=this.actions[d-1].args,o=g[g.length-2],p=g[g.length-1]);for(f=1;f<=a;f++)q=f/a,g=THREE.Shape.Utils.b2(q,o,l,h),q=THREE.Shape.Utils.b2(q,p,m,i),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];i=f[5];l=f[0];m=f[1];k=f[2];j=f[3];0<c.length?(g=c[c.length-1],o=g.x,p=g.y):(g=this.actions[d-1].args,o=g[g.length-2],p=g[g.length-1]);for(f=1;f<=a;f++)q=f/a,g=THREE.Shape.Utils.b3(q,o,l,k,h),q=THREE.Shape.Utils.b3(q,p,m,j,i),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;q=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;q=q.concat(f[0]);q=new THREE.SplineCurve(q);for(f=1;f<=g;f++)c.push(q.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];i=f[1];m=f[2];k=f[3];g=f[4];l=!!f[5];o=g-k;p=2*a;for(f=1;f<=p;f++)q=f/p,l||(q=1-q),q=k+q*o,g=h+m*Math.cos(q),q=i+m*Math.sin(q),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.ELLIPSE:h=f[0];i=f[1];m=f[2];j=f[3];k=f[4];g=f[5];l=!!f[6];o=g-k;p=2*a;for(f=1;f<=p;f++)q=f/p,l||
(q=1-q),q=k+q*o,g=h+m*Math.cos(q),q=i+j*Math.sin(q),c.push(new THREE.Vector2(g,q))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,k,j,l,m,o,p=[];for(i=0;i<b.length;i++){k=b[i];Array.prototype.push.apply(d,k);f=Number.POSITIVE_INFINITY;for(e=0;e<k.length;e++){m=k[e];o=[];for(l=0;l<c.length;l++)j=c[l],j=m.distanceToSquared(j),o.push(j),j<f&&(f=j,g=e,h=l)}e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;var q=[k[g],c[h],c[e]];l=THREE.FontUtils.Triangulate.area(q);var t=[k[g],k[f],c[h]];m=THREE.FontUtils.Triangulate.area(t);o=h;j=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;q=[k[g],c[h],c[e]];q=THREE.FontUtils.Triangulate.area(q);t=[k[g],k[f],c[h]];t=THREE.FontUtils.Triangulate.area(t);l+m>q+t&&(h=o,g=j,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:k.length-1);l=c.slice(0,h);m=c.slice(h);o=k.slice(g);j=k.slice(0,g);f=[k[g],k[f],c[h]];p.push([k[g],c[h],c[e]]);p.push(f);c=l.concat(o).concat(j).concat(m)}return{shape:c,
isolatedPts:p,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,i,k={};f=0;for(g=d.length;f<g;f++)i=d[f].x+":"+d[f].y,void 0!==k[i]&&console.log("Duplicate point",i),k[i]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;3>d;d++)i=h[d].x+":"+h[d].y,i=k[i],void 0!==i&&(h[d]=i)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;3>d;d++)i=h[d].x+":"+h[d].y,i=k[i],void 0!==i&&(h[d]=i)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var k=a.hierarchy[c].keys[d].morphTargets[i];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var j={};for(k in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===k){j[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(j[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=j}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,i,k,j;j=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var l=0,m=this.hierarchy.length;l<m;l++){a=this.hierarchy[l];i=a.animationCache;for(var o=0;3>o;o++){c=b[o];g=i.prevKey[c];h=i.nextKey[c];if(h.time<=j){if(k<j)if(this.loop){g=this.data.hierarchy[l].keys[0];for(h=this.getNextKeyWith(c,l,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,l,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,l,h.index+1);while(h.time<k)}i.prevKey[c]=g;i.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+l),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+
(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",l,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",l,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,k;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];i=a[c[2]];k=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],i[0],k[0],e,c,g);d[1]=this.interpolate(f[1],h[1],i[1],k[1],e,c,g);d[2]=this.interpolate(f[2],h[2],i[2],k[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)if(e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length)f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime);this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,i;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,k=this.hierarchy.length;a<k;a++){var j=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=j.length-1;e=this.hierarchy[a];if(j.length){for(j=
0;j<f.length;j++)g=f[j],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var j=b.keys,l=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(j.length){this.JITCompile&&l&&(d instanceof
THREE.Bone?d.skinMatrix=l.originalMatrix:d.matrix=l.originalMatrix);b=l.prevKey;c=l.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=j[0];for(c=j[1];c.time<g;)b=c,c=j[b.index+1]}else if(!i)for(var m=j.length-1;c.time<g&&c.index!==m;)b=c,c=j[b.index+1];l.prevKey=b;l.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,i,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*Math.atan(b/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.AsteriskGeometry=function(a,b){THREE.Geometry.call(this);for(var c=0.707*a,d=0.707*b,c=[[a,0,0],[b,0,0],[-a,0,0],[-b,0,0],[0,a,0],[0,b,0],[0,-a,0],[0,-b,0],[0,0,a],[0,0,b],[0,0,-a],[0,0,-b],[c,c,0],[d,d,0],[-c,-c,0],[-d,-d,0],[c,-c,0],[d,-d,0],[-c,c,0],[-d,d,0],[c,0,c],[d,0,d],[-c,0,-c],[-d,0,-d],[c,0,-c],[d,0,-d],[-c,0,c],[-d,0,d],[0,c,c],[0,d,d],[0,-c,-c],[0,-d,-d],[0,c,-c],[0,d,-d],[0,-c,c],[0,-d,d]],d=0,e=c.length;d<e;d++)this.vertices.push(new THREE.Vector3(c[d][0],c[d][1],c[d][2]))};
THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8,e,f=[];e=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),this.faceVertexUvs[0].push([f[e],
f[e+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,q){var t,s=h.widthSegments,y=h.heightSegments,w=e/2,r=f/2,B=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)t="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)t="y",y=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)t="x",s=h.depthSegments;var v=s+1,u=y+1,x=e/s,F=f/y,C=new THREE.Vector3;C[t]=0<g?1:-1;for(e=0;e<u;e++)for(f=0;f<v;f++){var E=new THREE.Vector3;E[a]=(f*x-w)*c;E[b]=(e*F-r)*d;E[t]=g;h.vertices.push(E)}for(e=
0;e<y;e++)for(f=0;f<s;f++)a=new THREE.Face4(f+v*e+B,f+v*(e+1)+B,f+1+v*(e+1)+B,f+1+v*e+B),a.normal.copy(C),a.vertexNormals.push(C.clone(),C.clone(),C.clone(),C.clone()),a.materialIndex=q,h.faces.push(a),h.faceVertexUvs[0].push([new THREE.UV(f/s,1-e/y),new THREE.UV(f/s,1-(e+1)/y),new THREE.UV((f+1)/s,1-(e+1)/y),new THREE.UV((f+1)/s,1-e/y)])}THREE.Geometry.call(this);var h=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;a=this.width/
2;b=this.height/2;c=this.depth/2;g("z","y",-1,-1,this.depth,this.height,a,0);g("z","y",1,-1,this.depth,this.height,-a,1);g("x","z",1,1,this.width,this.depth,b,2);g("x","z",1,-1,this.width,this.depth,-b,3);g("x","y",1,-1,this.width,this.height,c,4);g("x","y",-1,-1,this.width,this.height,-c,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,g=c/2,d=d||8,e=e||1,h,i,k=[],j=[];for(i=0;i<=e;i++){var l=[],m=[],o=i/e,p=o*(b-a)+a;for(h=0;h<=d;h++){var q=h/d,t=new THREE.Vector3;t.x=p*Math.sin(2*q*Math.PI);t.y=-o*c+g;t.z=p*Math.cos(2*q*Math.PI);this.vertices.push(t);l.push(this.vertices.length-1);m.push(new THREE.UV(q,1-o))}k.push(l);j.push(m)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(l=this.vertices[k[0][h]].clone(),m=this.vertices[k[0][h+
1]].clone()):(l=this.vertices[k[1][h]].clone(),m=this.vertices[k[1][h+1]].clone());l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*c).normalize();m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();for(i=0;i<e;i++){var o=k[i][h],p=k[i+1][h],q=k[i+1][h+1],t=k[i][h+1],s=l.clone(),y=l.clone(),w=m.clone(),r=m.clone(),B=j[i][h].clone(),v=j[i+1][h].clone(),u=j[i+1][h+1].clone(),x=j[i][h+1].clone();this.faces.push(new THREE.Face4(o,p,q,t,[s,y,w,r]));this.faceVertexUvs[0].push([B,v,u,x])}}if(!f&&0<a){this.vertices.push(new THREE.Vector3(0,
g,0));for(h=0;h<d;h++)o=k[0][h],p=k[0][h+1],q=this.vertices.length-1,s=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),B=j[0][h].clone(),v=j[0][h+1].clone(),u=new THREE.UV(v.u,0),this.faces.push(new THREE.Face3(o,p,q,[s,y,w])),this.faceVertexUvs[0].push([B,v,u])}if(!f&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)o=k[i][h+1],p=k[i][h],q=this.vertices.length-1,s=new THREE.Vector3(0,-1,0),y=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),B=
j[i][h+1].clone(),v=j[i][h].clone(),u=new THREE.UV(v.u,1),this.faces.push(new THREE.Face3(o,p,q,[s,y,w])),this.faceVertexUvs[0].push([B,v,u])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};
THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();
h.copy(b).addSelf(f);i.copy(c).addSelf(g);f=d.dot(g);g=i.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),a=new THREE.Vector2(a,c)):a=d.multiplyScalar(g).addSelf(h).subSelf(a).clone();return a}function e(c,d){var e,f;for(G=c.length;0<=--G;){e=G;f=G-1;0>f&&(f=c.length-
1);for(var g=0,h=m+2*j,g=0;g<h;g++){var i=T*g,k=T*(g+1),l=d+e+i,i=d+f+i,o=d+f+k,k=d+e+k,p=c,q=g,r=h,t=e,u=f,l=l+E,i=i+E,o=o+E,k=k+E;C.faces.push(new THREE.Face4(l,i,o,k,null,null,s));l=y.generateSideWallUV(C,a,p,b,l,i,o,k,q,r,t,u);C.faceVertexUvs[0].push(l)}}}function f(a,b,c){C.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=E;d+=E;e+=E;C.faces.push(new THREE.Face3(c,d,e,null,null,t));c=f?y.generateBottomUV(C,a,b,c,d,e):y.generateTopUV(C,a,b,c,d,e);C.faceVertexUvs[0].push(c)}var h=
void 0!==b.amount?b.amount:100,i=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:i-2,j=void 0!==b.bevelSegments?b.bevelSegments:3,l=void 0!==b.bevelEnabled?b.bevelEnabled:!0,m=void 0!==b.steps?b.steps:1,o=b.extrudePath,p,q=!1,t=b.material,s=b.extrudeMaterial,y=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,r,B,v;o&&(p=o.getSpacedPoints(m),q=!0,l=!1,w=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(o,m,!1),r=new THREE.Vector3,
B=new THREE.Vector3,v=new THREE.Vector3);l||(k=i=j=0);var u,x,F,C=this,E=this.vertices.length,o=a.extractPoints(),M=o.shape,o=o.holes,D=!THREE.Shape.Utils.isClockWise(M);if(D){M=M.reverse();x=0;for(F=o.length;x<F;x++)u=o[x],THREE.Shape.Utils.isClockWise(u)&&(o[x]=u.reverse());D=!1}var K=THREE.Shape.Utils.triangulateShape(M,o),D=M;x=0;for(F=o.length;x<F;x++)u=o[x],M=M.concat(u);var I,N,O,P,T=M.length,ba=K.length,Q=[],G=0,J=D.length;I=J-1;for(N=G+1;G<J;G++,I++,N++)I===J&&(I=0),N===J&&(N=0),Q[G]=d(D[G],
D[I],D[N]);var S=[],ca,la=Q.concat();x=0;for(F=o.length;x<F;x++){u=o[x];ca=[];G=0;J=u.length;I=J-1;for(N=G+1;G<J;G++,I++,N++)I===J&&(I=0),N===J&&(N=0),ca[G]=d(u[G],u[I],u[N]);S.push(ca);la=la.concat(ca)}for(I=0;I<j;I++){u=I/j;O=i*(1-u);N=k*Math.sin(u*Math.PI/2);G=0;for(J=D.length;G<J;G++)P=c(D[G],Q[G],N),f(P.x,P.y,-O);x=0;for(F=o.length;x<F;x++){u=o[x];ca=S[x];G=0;for(J=u.length;G<J;G++)P=c(u[G],ca[G],N),f(P.x,P.y,-O)}}N=k;for(G=0;G<T;G++)P=l?c(M[G],la[G],N):M[G],q?(B.copy(w.normals[0]).multiplyScalar(P.x),
r.copy(w.binormals[0]).multiplyScalar(P.y),v.copy(p[0]).addSelf(B).addSelf(r),f(v.x,v.y,v.z)):f(P.x,P.y,0);for(u=1;u<=m;u++)for(G=0;G<T;G++)P=l?c(M[G],la[G],N):M[G],q?(B.copy(w.normals[u]).multiplyScalar(P.x),r.copy(w.binormals[u]).multiplyScalar(P.y),v.copy(p[u]).addSelf(B).addSelf(r),f(v.x,v.y,v.z)):f(P.x,P.y,h/m*u);for(I=j-1;0<=I;I--){u=I/j;O=i*(1-u);N=k*Math.sin(u*Math.PI/2);G=0;for(J=D.length;G<J;G++)P=c(D[G],Q[G],N),f(P.x,P.y,h+O);x=0;for(F=o.length;x<F;x++){u=o[x];ca=S[x];G=0;for(J=u.length;G<
J;G++)P=c(u[G],ca[G],N),q?f(P.x,P.y+p[m-1].y,p[m-1].x+O):f(P.x,P.y,h+O)}}if(l){i=0*T;for(G=0;G<ba;G++)h=K[G],g(h[2]+i,h[1]+i,h[0]+i,!0);i=T*(m+2*j);for(G=0;G<ba;G++)h=K[G],g(h[0]+i,h[1]+i,h[2]+i,!1)}else{for(G=0;G<ba;G++)h=K[G],g(h[2],h[1],h[0],!0);for(G=0;G<ba;G++)h=K[G],g(h[0]+T*m,h[1]+T*m,h[2]+T*m,!1)}h=0;e(D,h);h+=D.length;x=0;for(F=o.length;x<F;x++)u=o[x],e(u,h),h+=u.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,e),new THREE.UV(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,k=a.vertices[g].x,j=a.vertices[g].y,
g=a.vertices[g].z,l=a.vertices[h].x,m=a.vertices[h].y,a=a.vertices[h].z;return 0.01>Math.abs(c-i)?[new THREE.UV(b,1-e),new THREE.UV(d,1-f),new THREE.UV(k,1-g),new THREE.UV(l,1-a)]:[new THREE.UV(c,1-e),new THREE.UV(i,1-f),new THREE.UV(j,1-g),new THREE.UV(m,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints();var i=e.shape,k=e.holes;if(!THREE.Shape.Utils.isClockWise(i)){i=i.reverse();e=0;for(f=k.length;e<f;e++)g=k[e],THREE.Shape.Utils.isClockWise(g)&&(k[e]=g.reverse())}var j=THREE.Shape.Utils.triangulateShape(i,k);e=0;for(f=k.length;e<f;e++)g=k[e],i=i.concat(g);k=i.length;f=j.length;for(e=
0;e<k;e++)g=i[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)k=j[e],i=k[0]+h,g=k[1]+h,k=k[2]+h,this.faces.push(new THREE.Face3(i,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,i,g,k))};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);for(var b=b||12,c=c||2*Math.PI,d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);for(var g=b+1,c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;for(var c=a/2,e=b/2,d=this.widthSegments,f=this.heightSegments,g=d+1,h=f+1,i=this.width/d,k=this.height/f,j=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-c,-(a*k-e),0));for(a=0;a<f;a++)for(b=0;b<d;b++)c=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),c.normal.copy(j),c.vertexNormals.push(j.clone(),j.clone(),
j.clone(),j.clone()),this.faces.push(c),this.faceVertexUvs[0].push([new THREE.UV(b/d,1-a/f),new THREE.UV(b/d,1-(a+1)/f),new THREE.UV((b+1)/d,1-(a+1)/f),new THREE.UV((b+1)/d,1-a/f)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.radius=a||50;this.widthSegments=Math.max(3,Math.floor(b)||8);this.heightSegments=Math.max(2,Math.floor(c)||6);for(var d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,f=void 0!==f?f:0,g=void 0!==g?g:Math.PI,c=[],h=[],b=0;b<=this.heightSegments;b++){for(var i=[],k=[],a=0;a<=this.widthSegments;a++){var j=a/this.widthSegments,l=b/this.heightSegments,m=new THREE.Vector3;m.x=-this.radius*Math.cos(d+j*e)*Math.sin(f+l*g);m.y=this.radius*
Math.cos(f+l*g);m.z=this.radius*Math.sin(d+j*e)*Math.sin(f+l*g);this.vertices.push(m);i.push(this.vertices.length-1);k.push(new THREE.UV(j,1-l))}c.push(i);h.push(k)}for(b=0;b<this.heightSegments;b++)for(a=0;a<this.widthSegments;a++){var d=c[b][a+1],e=c[b][a],f=c[b+1][a],g=c[b+1][a+1],i=this.vertices[d].clone().normalize(),k=this.vertices[e].clone().normalize(),j=this.vertices[f].clone().normalize(),l=this.vertices[g].clone().normalize(),m=h[b][a+1].clone(),o=h[b][a].clone(),p=h[b+1][a].clone(),q=
h[b+1][a+1].clone();Math.abs(this.vertices[d].y)===this.radius?(this.faces.push(new THREE.Face3(d,f,g,[i,j,l])),this.faceVertexUvs[0].push([m,p,q])):Math.abs(this.vertices[f].y)===this.radius?(this.faces.push(new THREE.Face3(d,e,f,[i,k,j])),this.faceVertexUvs[0].push([m,o,p])):(this.faces.push(new THREE.Face4(d,e,f,g,[i,k,j,l])),this.faceVertexUvs[0].push([m,o,p,q]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:this.radius}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var e=(this.tubularSegments+1)*c+d-1,f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,i=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);i.normal.addSelf(b[e]);i.normal.addSelf(b[f]);i.normal.addSelf(b[g]);
i.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var i=2*(a/this.radialSegments)*this.p*Math.PI,g=2*(b/this.tubularSegments)*Math.PI,f=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(i,f);d.add(i,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();i=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=i*d.x+g*e.x;f.y+=i*d.y+g*e.y;f.z+=i*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}}for(a=
0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var e=(a+1)%this.radialSegments,f=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.UV(a/this.radialSegments,b/this.tubularSegments),i=new THREE.UV((a+1)/this.radialSegments,b/this.tubularSegments),k=new THREE.UV((a+1)/this.radialSegments,(b+1)/this.tubularSegments),j=new THREE.UV(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,d,e,f));this.faceVertexUvs[0].push([g,
i,k,j])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h,f=this.segments+1,i,k,j,l=new THREE.Vector3,m,o,p,b=new THREE.TubeGeometry.FrenetFrames(a,b,e);m=b.tangents;o=b.normals;p=b.binormals;this.tangents=m;this.normals=o;this.binormals=p;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);j=a.getPointAt(d);d=m[b];g=o[b];h=p[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
j,c,255)),this.debug.add(new THREE.ArrowHelper(g,j,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,j,c,65280)));for(d=0;d<this.radiusSegments;d++)i=2*(d/this.radiusSegments)*Math.PI,k=-this.radius*Math.cos(i),i=this.radius*Math.sin(i),l.copy(j),l.x+=k*g.x+i*h.x,l.y+=k*g.y+i*h.y,l.z+=k*g.z+i*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(l.x,l.y,l.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)f=e?(b+1)%this.segments:b+1,l=(d+1)%this.radiusSegments,a=this.grid[b][d],
c=this.grid[f][d],f=this.grid[f][l],l=this.grid[b][l],m=new THREE.UV(b/this.segments,d/this.radiusSegments),o=new THREE.UV((b+1)/this.segments,d/this.radiusSegments),p=new THREE.UV((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.UV(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,f,l)),this.faceVertexUvs[0].push([m,o,p,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,k,j,l;this.tangents=e;this.normals=f;this.binormals=g;for(k=0;k<b;k++)j=k/(b-1),e[k]=a.getTangentAt(j),e[k].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(e[0].x);j=Math.abs(e[0].y);l=Math.abs(e[0].z);k<=a&&(a=k,d.set(1,0,0));j<=a&&(a=j,d.set(0,1,0));l<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(k=1;k<b;k++)f[k]=f[k-1].clone(),g[k]=g[k-1].clone(),h.cross(e[k-1],e[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[k-1].dot(e[k])),i.makeRotationAxis(h,d).multiplyVector3(f[k])),g[k].cross(e[k],f[k]);if(c){d=Math.acos(f[0].dot(f[b-1]));d/=b-1;0<e[0].dot(h.cross(f[0],f[b-1]))&&(d=-d);for(k=1;k<b;k++)i.makeRotationAxis(e[k],d*k).multiplyVector3(f[k]),g[k].cross(e[k],f[k])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),i.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){l[a.index]||(l[a.index]=[]);l[b.index]||(l[b.index]=[]);var c=l[a.index][b.index];void 0===c&&(l[a.index][b.index]=l[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,i=this,k=0,j=a.length;k<j;k++)e(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));for(var l=[],a=this.vertices,k=0,j=b.length;k<j;k++)f(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(j=this.vertices.length;k<j;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],d=void 0===d?!1:d,h,i,k,j,l=b+1;for(h=0;h<=c;h++){j=h/c;for(i=0;i<=b;i++)k=i/b,k=a(k,j),e.push(k)}var m,o,p,q;for(h=0;h<c;h++)for(i=0;i<b;i++)a=h*l+i,e=h*l+i+1,j=(h+1)*l+i,k=(h+1)*l+i+1,m=new THREE.UV(i/b,h/c),o=new THREE.UV((i+1)/b,h/c),p=new THREE.UV(i/b,(h+1)/c),q=new THREE.UV((i+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(a,e,j)),f.push(new THREE.Face3(e,k,j)),g.push([m,o,
p]),g.push([o,q,p])):(f.push(new THREE.Face4(a,e,k,j)),g.push([m,o,q,p]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x+=g*2E-6*(Math.random()-0.5);f.y+=g*2E-6*(Math.random()-0.5);f.z+=g*2E-6*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var i=c[h],k=f,j=a[i[0]],l;l=j;var m=a[i[1]],o=a[i[2]],p=new THREE.Vector3,q=new THREE.Vector3;p.sub(o,m);q.sub(l,m);p.crossSelf(q);p.normalize();l=p;j=l.dot(j);if(l.dot(k)>=
j){for(k=0;3>k;k++){j=[i[k],i[(k+1)%3]];l=!0;for(m=0;m<g.length;m++)if(g[m][0]===j[1]&&g[m][1]===j[0]){g[m]=g[g.length-1];g.pop();l=!1;break}l&&g.push(j)}c[h]=c[c.length-1];c.pop()}else h++}for(m=0;m<g.length;m++)c.push([g[m][0],g[m][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===f[g[h]]&&(f[g[h]]=e++,this.vertices.push(a[g[h]])),g[h]=f[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=this.faces[d],
this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a),a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.DirectionalLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.sub(a.target.position,a.position);this.color=a.color.clone();var d=THREE.Math.clamp(a.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;var d=this.color.getHex(),e=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1});
this.lightArrow=new THREE.ArrowHelper(this.direction,null,c,d);this.lightSphere=new THREE.Mesh(e,g);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=!1;this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.add(this.lightArrow);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;a.target.properties.targetInverse&&(b=new THREE.SphereGeometry(b,
8,4),c=new THREE.MeshBasicMaterial({color:d,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(b,c),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,a=new THREE.LineDashedMaterial({color:d,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),
d.computeLineDistances(),this.targetLine=new THREE.Line(d,a),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.color.copy(this.light.color);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);
this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};
THREE.HemisphereLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;var d=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.r*=d;this.color.g*=d;this.color.b*=d;var e=this.color.getHex();this.groundColor=a.groundColor.clone();this.groundColor.r*=d;this.groundColor.g*=d;this.groundColor.b*=d;for(var d=this.groundColor.getHex(),f=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0,0.5*Math.PI),g=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0.5*
Math.PI,Math.PI),h=new THREE.MeshBasicMaterial({color:e,fog:!1}),i=new THREE.MeshBasicMaterial({color:d,fog:!1}),k=0,j=f.faces.length;k<j;k++)f.faces[k].materialIndex=0;k=0;for(j=g.faces.length;k<j;k++)g.faces[k].materialIndex=1;THREE.GeometryUtils.merge(f,g);this.lightSphere=new THREE.Mesh(f,new THREE.MeshFaceMaterial([h,i]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(b+c),0),c,e);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,
1,0),new THREE.Vector3(0,-1.1*(b+c),0),c,d);b=new THREE.Object3D;b.rotation.x=0.5*-Math.PI;b.add(this.lightSphere);b.add(this.lightArrow);b.add(this.lightArrowGround);this.add(b);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.groundColor.copy(this.light.groundColor);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.groundColor.r*=a;this.groundColor.g*=a;this.groundColor.b*=a;this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());
this.lookAt(this.target)};
THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.color=a.color.clone();var c=THREE.Math.clamp(a.intensity,0,1);this.color.r*=c;this.color.g*=c;this.color.b*=c;var d=this.color.getHex(),c=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),f=new THREE.IcosahedronGeometry(1,2),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),d=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,
opacity:0.1,transparent:!0});this.lightSphere=new THREE.Mesh(c,g);this.lightRays=new THREE.Line(e,h,THREE.LinePieces);this.lightDistance=new THREE.Mesh(f,d);c=a.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};
THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointLightHelper.prototype.update=function(){this.color.copy(this.light.color);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);a=this.light.distance;0===a?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(a,a,a))};
THREE.SpotLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.sub(a.target.position,a.position);this.color=a.color.clone();var d=THREE.Math.clamp(a.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;var d=this.color.getHex(),e=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.CylinderGeometry(1E-4,1,1,8,1,!0),h=new THREE.Matrix4;h.rotateX(-Math.PI/2);h.translate(new THREE.Vector3(0,
-0.5,0));g.applyMatrix(h);var i=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),k=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightArrow=new THREE.ArrowHelper(this.direction,null,c,d);this.lightSphere=new THREE.Mesh(e,i);this.lightCone=new THREE.Mesh(g,k);c=a.distance?a.distance:1E4;e=2*c*Math.tan(0.5*a.angle);this.lightCone.scale.set(e,e,c);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=
!1;this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightArrow);this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(a.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;a.target.properties.targetInverse&&(b=new THREE.SphereGeometry(b,8,4),f=new THREE.MeshBasicMaterial({color:d,
wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(b,f),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,a=new THREE.LineDashedMaterial({color:d,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),d.computeLineDistances(),this.targetLine=
new THREE.Line(d,a),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.lookAt(this.light.target.position);var a=this.light.distance?this.light.distance:1E4,b=2*a*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(b,b,a);this.color.copy(this.light.color);a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);
this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};THREE.GeometryUtils.orderedKey=function(a,b){return Math.min(a,b)+"_"+Math.max(a,b)};
THREE.GeometryUtils.computeEdgeFaces=function(a){function b(a,b){void 0===g[a]&&(g[a]=[]);g[a].push(b)}var c,d,e,f,g={},h=THREE.GeometryUtils.orderedKey;c=0;for(d=a.faces.length;c<d;c++)e=a.faces[c],e instanceof THREE.Face3?(f=h(e.a,e.b),b(f,c),f=h(e.b,e.c),b(f,c),f=h(e.c,e.a),b(f,c)):e instanceof THREE.Face4&&(f=h(e.a,e.b),b(f,c),f=h(e.b,e.c),b(f,c),f=h(e.c,e.d),b(f,c),f=h(e.d,e.a),b(f,c));return g};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){j.debug&&(console&&console.assert)&&console.assert.apply(console,arguments)}function c(){j.debug&&console.log.apply(console,arguments)}function d(){console&&console.log.apply(console,arguments)}function e(a,b,d,e,g,h,l){var m=new THREE.Face4(a,b,d,e,null,g.color,g.materialIndex);if(j.useOldVertexColors){m.vertexColors=[];for(var o,p,r,q=0;4>q;q++){r=h[q];o=new THREE.Color;o.setRGB(0,0,0);for(var s=0;s<r.length;s++)p=g.vertexColors[r[s]-
1],o.r+=p.r,o.g+=p.g,o.b+=p.b;o.r/=r.length;o.g/=r.length;o.b/=r.length;m.vertexColors[q]=o}}i.push(m);j.supportUVs&&(g=[f(a,""),f(b,l),f(d,l),f(e,l)],g[0]?g[1]?g[2]?g[3]?k.push(g):c("d :( ",e+":"+l):c("c :( ",d+":"+l):c("b :( ",b+":"+l):c("a :( ",a+":"+l))}function f(a,b){var e=a+":"+b,f=w[e];return!f?(a>=q&&a<q+p.length?c("face pt"):c("edge pt"),d("warning, UV not found for",e),null):f}function g(a,b,c){var e=a+":"+b;e in w?d("dup vertexNo",a,"oldFaceNo",b,"value",c,"key",e,w[e]):w[e]=c}var h=[],
i=[],k=[],j=this,l=THREE.GeometryUtils.orderedKey,m=THREE.GeometryUtils.computeEdgeFaces,o=a.vertices,p=a.faces,q=o.length,h=o.concat(),t=[],s={},y={},w={},r,B,v,u,x,F=a.faceVertexUvs[0],C;c("originalFaces, uvs, originalVerticesLength",p.length,F.length,q);if(j.supportUVs){r=0;for(B=F.length;r<B;r++){v=0;for(u=F[r].length;v<u;v++)C=p[r]["abcd".charAt(v)],g(C,r,F[r][v])}}0==F.length&&(j.supportUVs=!1);r=0;for(var E in w)r++;r||(j.supportUVs=!1,c("no uvs"));r=0;for(B=p.length;r<B;r++)x=p[r],t.push(x.centroid),
h.push(x.centroid),j.supportUVs&&(u=new THREE.UV,x instanceof THREE.Face3?(u.u=f(x.a,r).u+f(x.b,r).u+f(x.c,r).u,u.v=f(x.a,r).v+f(x.b,r).v+f(x.c,r).v,u.u/=3,u.v/=3):x instanceof THREE.Face4&&(u.u=f(x.a,r).u+f(x.b,r).u+f(x.c,r).u+f(x.d,r).u,u.v=f(x.a,r).v+f(x.b,r).v+f(x.c,r).v+f(x.d,r).v,u.u/=4,u.v/=4),g(q+r,"",u));var m=m(a),M;B=0;var D,K;E={};F={};for(r in m){C=m[r];D=r.split("_");K=D[0];D=D[1];v=K;x=[K,D];void 0===E[v]&&(E[v]=[]);E[v].push(x);v=D;x=[K,D];void 0===E[v]&&(E[v]=[]);E[v].push(x);v=0;
for(u=C.length;v<u;v++){x=C[v];M=K;var I=x,N=r;void 0===F[M]&&(F[M]={});F[M][I]=N;M=D;I=r;void 0===F[M]&&(F[M]={});F[M][x]=I}2>C.length&&(y[r]=!0)}for(r in m)if(C=m[r],x=C[0],M=C[1],D=r.split("_"),K=D[0],D=D[1],u=new THREE.Vector3,b(0<C.length,"an edge without faces?!"),1==C.length?(u.addSelf(o[K]),u.addSelf(o[D]),u.multiplyScalar(0.5)):(u.addSelf(t[x]),u.addSelf(t[M]),u.addSelf(o[K]),u.addSelf(o[D]),u.multiplyScalar(0.25)),s[r]=q+p.length+B,h.push(u),B++,j.supportUVs)u=new THREE.UV,u.u=f(K,x).u+
f(D,x).u,u.v=f(K,x).v+f(D,x).v,u.u/=2,u.v/=2,g(s[r],x,u),2<=C.length&&(b(2==C.length,"did we plan for more than 2 edges?"),u=new THREE.UV,u.u=f(K,M).u+f(D,M).u,u.v=f(K,M).v+f(D,M).v,u.u/=2,u.v/=2,g(s[r],M,u));c("-- Step 2 done");var O,P;u=["123","12","2","23"];M=["123","23","3","31"];var I=["123","31","1","12"],N=["1234","12","2","23"],T=["1234","23","3","34"],ba=["1234","34","4","41"],Q=["1234","41","1","12"];r=0;for(B=t.length;r<B;r++)x=p[r],C=q+r,x instanceof THREE.Face3?(K=l(x.a,x.b),D=l(x.b,
x.c),O=l(x.c,x.a),e(C,s[K],x.b,s[D],x,u,r),e(C,s[D],x.c,s[O],x,M,r),e(C,s[O],x.a,s[K],x,I,r)):x instanceof THREE.Face4?(K=l(x.a,x.b),D=l(x.b,x.c),O=l(x.c,x.d),P=l(x.d,x.a),e(C,s[K],x.b,s[D],x,N,r),e(C,s[D],x.c,s[O],x,T,r),e(C,s[O],x.d,s[P],x,ba,r),e(C,s[P],x.a,s[K],x,Q,r)):c("face should be a face!",x);s=new THREE.Vector3;x=new THREE.Vector3;r=0;for(B=o.length;r<B;r++)if(void 0!==E[r]){s.set(0,0,0);x.set(0,0,0);D=new THREE.Vector3(0,0,0);C=0;for(v in F[r])s.addSelf(t[v]),C++;M=0;K=E[r].length;u=C!=
K;for(v=0;v<K;v++)y[l(E[r][v][0],E[r][v][1])]&&M++;s.divideScalar(C);M=0;if(u){for(v=0;v<K;v++)if(C=E[r][v],I=1==m[l(C[0],C[1])].length)C=o[C[0]].clone().addSelf(o[C[1]]).divideScalar(2),x.addSelf(C),M++;x.divideScalar(4);b(2==M,"should have only 2 boundary edges")}else{for(v=0;v<K;v++)C=E[r][v],C=o[C[0]].clone().addSelf(o[C[1]]).divideScalar(2),x.addSelf(C);x.divideScalar(K)}D.addSelf(o[r]);u?(D.divideScalar(2),D.addSelf(x)):(D.multiplyScalar(K-3),D.addSelf(s),D.addSelf(x.multiplyScalar(2)),D.divideScalar(K));
h[r]=D}a.vertices=h;a.faces=i;a.faceVertexUvs[0]=k;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};
THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity});h=d[i];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=i)}}for(i in d)h=d[i],this.createAnimation(i,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)if(d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time)d.time=0,d.directionBackwards=!1}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,i,k,j,l,m;this.init=function(o){b=o.context;c=o;d=new Float32Array(16);e=new Uint16Array(6);o=0;d[o++]=-1;d[o++]=-1;d[o++]=0;d[o++]=0;d[o++]=1;d[o++]=-1;d[o++]=1;d[o++]=0;
d[o++]=1;d[o++]=1;d[o++]=1;d[o++]=1;d[o++]=-1;d[o++]=1;d[o++]=0;d[o++]=1;o=0;e[o++]=0;e[o++]=1;e[o++]=2;e[o++]=0;e[o++]=2;e[o++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,j=a(THREE.ShaderFlares.lensFlare)):(k=!0,j=a(THREE.ShaderFlares.lensFlareVertexTexture));l={};m={};l.vertex=b.getAttribLocation(j,"position");l.uv=b.getAttribLocation(j,"uv");m.renderType=b.getUniformLocation(j,"renderType");m.map=b.getUniformLocation(j,"map");m.occlusionMap=b.getUniformLocation(j,"occlusionMap");m.opacity=b.getUniformLocation(j,"opacity");m.color=b.getUniformLocation(j,
"color");m.scale=b.getUniformLocation(j,"scale");m.rotation=b.getUniformLocation(j,"rotation");m.screenPosition=b.getUniformLocation(j,"screenPosition")};this.render=function(a,d,e,t){var a=a.__webglFlares,s=a.length;if(s){var y=new THREE.Vector3,w=t/e,r=0.5*e,B=0.5*t,v=16/t,u=new THREE.Vector2(v*w,v),x=new THREE.Vector3(1,1,0),F=new THREE.Vector2(1,1),C=m,v=l;b.useProgram(j);b.enableVertexAttribArray(l.vertex);b.enableVertexAttribArray(l.uv);b.uniform1i(C.occlusionMap,0);b.uniform1i(C.map,1);b.bindBuffer(b.ARRAY_BUFFER,
f);b.vertexAttribPointer(v.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(v.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var E,M,D,K,I;for(E=0;E<s;E++)if(v=16/t,u.set(v*w,v),K=a[E],y.set(K.matrixWorld.elements[12],K.matrixWorld.elements[13],K.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(y),d.projectionMatrix.multiplyVector3(y),x.copy(y),F.x=x.x*r+r,F.y=x.y*B+B,k||0<F.x&&F.x<e&&0<F.y&&F.y<t){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,F.x-8,F.y-8,16,16,0);b.uniform1i(C.renderType,0);b.uniform2f(C.scale,u.x,u.y);b.uniform3f(C.screenPosition,x.x,x.y,x.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,F.x-8,F.y-8,16,16,0);b.uniform1i(C.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,
6,b.UNSIGNED_SHORT,0);K.positionScreen.copy(x);K.customUpdateCallback?K.customUpdateCallback(K):K.updateLensFlares();b.uniform1i(C.renderType,2);b.enable(b.BLEND);M=0;for(D=K.lensFlares.length;M<D;M++)I=K.lensFlares[M],0.001<I.opacity&&0.001<I.scale&&(x.x=I.x,x.y=I.y,x.z=I.z,v=I.size*I.scale/t,u.x=v*w,u.y=v,b.uniform3f(C.screenPosition,x.x,x.y,x.z),b.uniform2f(C.scale,u.x,u.y),b.uniform1f(C.rotation,I.rotation),b.uniform1f(C.opacity,I.opacity),b.uniform3f(C.color,I.color.r,I.color.g,I.color.b),c.setBlending(I.blending,
I.blendEquation,I.blendSrc,I.blendDst),c.setTexture(I.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(j,l){var m,o,p,q,t,s,y,w,r,B=[];q=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);m=0;for(o=j.__lights.length;m<o;m++)if(p=j.__lights[m],p.castShadow)if(p instanceof THREE.DirectionalLight&&p.shadowCascade)for(t=0;t<p.shadowCascadeCount;t++){var v;if(p.shadowCascadeArray[t])v=p.shadowCascadeArray[t];else{r=p;y=t;v=new THREE.DirectionalLight;v.isVirtual=!0;v.onlyShadow=!0;v.castShadow=!0;v.shadowCameraNear=r.shadowCameraNear;v.shadowCameraFar=r.shadowCameraFar;v.shadowCameraLeft=r.shadowCameraLeft;v.shadowCameraRight=r.shadowCameraRight;
v.shadowCameraBottom=r.shadowCameraBottom;v.shadowCameraTop=r.shadowCameraTop;v.shadowCameraVisible=r.shadowCameraVisible;v.shadowDarkness=r.shadowDarkness;v.shadowBias=r.shadowCascadeBias[y];v.shadowMapWidth=r.shadowCascadeWidth[y];v.shadowMapHeight=r.shadowCascadeHeight[y];v.pointsWorld=[];v.pointsFrustum=[];w=v.pointsWorld;s=v.pointsFrustum;for(var u=0;8>u;u++)w[u]=new THREE.Vector3,s[u]=new THREE.Vector3;w=r.shadowCascadeNearZ[y];r=r.shadowCascadeFarZ[y];s[0].set(-1,-1,w);s[1].set(1,-1,w);s[2].set(-1,
1,w);s[3].set(1,1,w);s[4].set(-1,-1,r);s[5].set(1,-1,r);s[6].set(-1,1,r);s[7].set(1,1,r);v.originalCamera=l;s=new THREE.Gyroscope;s.position=p.shadowCascadeOffset;s.add(v);s.add(v.target);l.add(s);p.shadowCascadeArray[t]=v;console.log("Created virtualLight",v)}y=p;w=t;r=y.shadowCascadeArray[w];r.position.copy(y.position);r.target.position.copy(y.target.position);r.lookAt(r.target);r.shadowCameraVisible=y.shadowCameraVisible;r.shadowDarkness=y.shadowDarkness;r.shadowBias=y.shadowCascadeBias[w];s=y.shadowCascadeNearZ[w];
y=y.shadowCascadeFarZ[w];r=r.pointsFrustum;r[0].z=s;r[1].z=s;r[2].z=s;r[3].z=s;r[4].z=y;r[5].z=y;r[6].z=y;r[7].z=y;B[q]=v;q++}else B[q]=p,q++;m=0;for(o=B.length;m<o;m++){p=B[m];p.shadowMap||(p.shadowMap=new THREE.WebGLRenderTarget(p.shadowMapWidth,p.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),p.shadowMapSize=new THREE.Vector2(p.shadowMapWidth,p.shadowMapHeight),p.shadowMatrix=new THREE.Matrix4);if(!p.shadowCamera){if(p instanceof THREE.SpotLight)p.shadowCamera=
new THREE.PerspectiveCamera(p.shadowCameraFov,p.shadowMapWidth/p.shadowMapHeight,p.shadowCameraNear,p.shadowCameraFar);else if(p instanceof THREE.DirectionalLight)p.shadowCamera=new THREE.OrthographicCamera(p.shadowCameraLeft,p.shadowCameraRight,p.shadowCameraTop,p.shadowCameraBottom,p.shadowCameraNear,p.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}j.add(p.shadowCamera);b.autoUpdateScene&&j.updateMatrixWorld()}p.shadowCameraVisible&&!p.cameraHelper&&(p.cameraHelper=
new THREE.CameraHelper(p.shadowCamera),p.shadowCamera.add(p.cameraHelper));if(p.isVirtual&&v.originalCamera==l){t=l;q=p.shadowCamera;s=p.pointsFrustum;r=p.pointsWorld;i.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(y=0;8>y;y++)if(w=r[y],w.copy(s[y]),THREE.ShadowMapPlugin.__projector.unprojectVector(w,t),q.matrixWorldInverse.multiplyVector3(w),w.x<i.x&&(i.x=w.x),w.x>k.x&&(k.x=w.x),w.y<i.y&&(i.y=w.y),w.y>k.y&&(k.y=w.y),w.z<i.z&&(i.z=w.z),w.z>k.z)k.z=w.z;q.left=i.x;q.right=
k.x;q.top=k.y;q.bottom=i.y;q.updateProjectionMatrix()}q=p.shadowMap;s=p.shadowMatrix;t=p.shadowCamera;t.position.copy(p.matrixWorld.getPosition());t.lookAt(p.target.matrixWorld.getPosition());t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);p.cameraHelper&&(p.cameraHelper.visible=p.shadowCameraVisible);p.shadowCameraVisible&&p.cameraHelper.update();s.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);s.multiplySelf(t.projectionMatrix);s.multiplySelf(t.matrixWorldInverse);t._viewMatrixArray||
(t._viewMatrixArray=new Float32Array(16));t._projectionMatrixArray||(t._projectionMatrixArray=new Float32Array(16));t.matrixWorldInverse.flattenToArray(t._viewMatrixArray);t.projectionMatrix.flattenToArray(t._projectionMatrixArray);h.multiply(t.projectionMatrix,t.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(q);b.clear();r=j.__webglObjects;p=0;for(q=r.length;p<q;p++)if(y=r[p],s=y.object,y.render=!1,s.visible&&s.castShadow&&(!(s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)||
!s.frustumCulled||g.contains(s)))s._modelViewMatrix.multiply(t.matrixWorldInverse,s.matrixWorld),y.render=!0;p=0;for(q=r.length;p<q;p++)y=r[p],y.render&&(s=y.object,y=y.buffer,u=s.material instanceof THREE.MeshFaceMaterial?s.material.materials[0]:s.material,w=0<s.geometry.morphTargets.length&&u.morphTargets,u=s instanceof THREE.SkinnedMesh&&u.skinning,w=s.customDepthMaterial?s.customDepthMaterial:u?w?f:e:w?d:c,y instanceof THREE.BufferGeometry?b.renderBufferDirect(t,j.__lights,null,w,y,s):b.renderBuffer(t,
j.__lights,null,w,y,s));r=j.__webglObjectsImmediate;p=0;for(q=r.length;p<q;p++)y=r[p],s=y.object,s.visible&&s.castShadow&&(s._modelViewMatrix.multiply(t.matrixWorldInverse,s.matrixWorld),b.renderImmediateObject(t,j.__lights,null,c,s))}m=b.getClearColor();o=b.getClearAlpha();a.clearColor(m.r,m.g,m.b,o);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,e,f,g,h,i,k;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);
b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,l=b.createProgram(),m=b.createShader(b.FRAGMENT_SHADER),o=b.createShader(b.VERTEX_SHADER);b.shaderSource(m,a.fragmentShader);b.shaderSource(o,a.vertexShader);b.compileShader(m);b.compileShader(o);b.attachShader(l,m);b.attachShader(l,o);b.linkProgram(l);h=l;i={};k={};i.position=b.getAttribLocation(h,"position");i.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,
"uvOffset");k.uvScale=b.getUniformLocation(h,"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");
k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");k.fogType=b.getUniformLocation(h,"fogType");k.fogDensity=b.getUniformLocation(h,"fogDensity");k.fogNear=b.getUniformLocation(h,"fogNear");k.fogFar=b.getUniformLocation(h,"fogFar");k.fogColor=b.getUniformLocation(h,"fogColor");k.alphaTest=b.getUniformLocation(h,"alphaTest")};this.render=function(d,e,m,o){var p=d.__webglSprites,q=p.length;if(q){var t=i,s=k,y=o/m,m=0.5*m,w=0.5*o,
r=!0;b.useProgram(h);b.enableVertexAttribArray(t.position);b.enableVertexAttribArray(t.uv);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(t.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(t.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.uniformMatrix4fv(s.projectionMatrix,!1,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(s.map,0);var B=t=0,v=d.fog;v?(b.uniform3f(s.fogColor,v.color.r,v.color.g,v.color.b),
v instanceof THREE.Fog?(b.uniform1f(s.fogNear,v.near),b.uniform1f(s.fogFar,v.far),b.uniform1i(s.fogType,1),B=t=1):v instanceof THREE.FogExp2&&(b.uniform1f(s.fogDensity,v.density),b.uniform1i(s.fogType,2),B=t=2)):(b.uniform1i(s.fogType,0),B=t=0);for(var u,x=[],v=0;v<q;v++)u=p[v],u.visible&&0!==u.opacity&&(u.useScreenCoordinates?u.z=-u.position.z:(u._modelViewMatrix.multiply(e.matrixWorldInverse,u.matrixWorld),u.z=-u._modelViewMatrix.elements[14]));p.sort(a);for(v=0;v<q;v++)if(u=p[v],u.visible&&0!==
u.opacity&&u.map&&u.map.image&&u.map.image.width)b.uniform1f(s.alphaTest,u.alphaTest),u.useScreenCoordinates?(b.uniform1i(s.useScreenCoordinates,1),b.uniform3f(s.screenPosition,(u.position.x-m)/m,(w-u.position.y)/w,Math.max(0,Math.min(1,u.position.z)))):(b.uniform1i(s.useScreenCoordinates,0),b.uniform1i(s.affectedByDistance,u.affectedByDistance?1:0),b.uniformMatrix4fv(s.modelViewMatrix,!1,u._modelViewMatrix.elements)),e=d.fog&&u.fog?B:0,t!==e&&(b.uniform1i(s.fogType,e),t=e),e=1/(u.scaleByViewport?
o:1),x[0]=e*y*u.scale.x,x[1]=e*u.scale.y,b.uniform2f(s.uvScale,u.uvScale.x,u.uvScale.y),b.uniform2f(s.uvOffset,u.uvOffset.x,u.uvOffset.y),b.uniform2f(s.alignment,u.alignment.x,u.alignment.y),b.uniform1f(s.opacity,u.opacity),b.uniform3f(s.color,u.color.r,u.color.g,u.color.b),b.uniform1f(s.rotation,u.rotation),b.uniform2fv(s.scale,x),u.mergeWith3D&&!r?(b.enable(b.DEPTH_TEST),r=!0):!u.mergeWith3D&&r&&(b.disable(b.DEPTH_TEST),r=!1),c.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),c.setTexture(u.map,
0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(i,k){var j,l,m,o,p,q;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&i.updateMatrixWorld();k._viewMatrixArray||(k._viewMatrixArray=new Float32Array(16));
k._projectionMatrixArray||(k._projectionMatrixArray=new Float32Array(16));k.matrixWorldInverse.getInverse(k.matrixWorld);k.matrixWorldInverse.flattenToArray(k._viewMatrixArray);k.projectionMatrix.flattenToArray(k._projectionMatrixArray);h.multiply(k.projectionMatrix,k.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(this.renderTarget);b.clear();q=i.__webglObjects;j=0;for(l=q.length;j<l;j++)if(m=q[j],p=m.object,m.render=!1,p.visible&&(!(p instanceof THREE.Mesh||p instanceof THREE.ParticleSystem)||
!p.frustumCulled||g.contains(p)))p._modelViewMatrix.multiply(k.matrixWorldInverse,p.matrixWorld),m.render=!0;var t;j=0;for(l=q.length;j<l;j++)if(m=q[j],m.render&&(p=m.object,m=m.buffer,!(p instanceof THREE.ParticleSystem)||p.customDepthMaterial))(t=p.material instanceof THREE.MeshFaceMaterial?p.material.materials[0]:p.material)&&b.setMaterialFaces(p.material),o=0<p.geometry.morphTargets.length&&t.morphTargets,t=p instanceof THREE.SkinnedMesh&&t.skinning,o=p.customDepthMaterial?p.customDepthMaterial:
t?o?f:e:o?d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(k,i.__lights,null,o,m,p):b.renderBuffer(k,i.__lights,null,o,m,p);q=i.__webglObjectsImmediate;j=0;for(l=q.length;j<l;j++)m=q[j],p=m.object,p.visible&&(p._modelViewMatrix.multiply(k.matrixWorldInverse,p.matrixWorld),b.renderImmediateObject(k,i.__lights,null,c,p));j=b.getClearColor();l=b.getClearAlpha();a.clearColor(j.r,j.g,j.b,l);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};
THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);
b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));b=this.target;c=this.object.position;b.x=c.x+100*
Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),
!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};
THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*f.autoRotateSpeed}function d(a){a.preventDefault();y===s.ROTATE?(i.set(a.clientX,a.clientY),k.sub(i,h),f.rotateLeft(2*Math.PI*k.x/g*f.userRotateSpeed),f.rotateUp(2*Math.PI*k.y/g*f.userRotateSpeed),h.copy(i)):y===s.ZOOM&&(l.set(a.clientX,a.clientY),m.sub(l,j),0<m.y?f.zoomIn():f.zoomOut(),j.copy(l))}function e(){f.userRotate&&(document.removeEventListener("mousemove",d,!1),document.removeEventListener("mouseup",e,!1),y=s.NONE)}THREE.EventTarget.call(this);
this.object=a;this.domElement=void 0!==b?b:document;this.center=new THREE.Vector3;this.userZoom=!0;this.userZoomSpeed=1;this.userRotate=!0;this.userRotateSpeed=1;this.autoRotate=!1;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minDistance=0;this.maxDistance=Infinity;var f=this,g=1800,h=new THREE.Vector2,i=new THREE.Vector2,k=new THREE.Vector2,j=new THREE.Vector2,l=new THREE.Vector2,m=new THREE.Vector2,o=0,p=0,q=1,t=new THREE.Vector3,s={NONE:-1,ROTATE:0,ZOOM:1},y=s.NONE,
w={type:"change"};this.rotateLeft=function(a){void 0===a&&(a=c());p-=a};this.rotateRight=function(a){void 0===a&&(a=c());p+=a};this.rotateUp=function(a){void 0===a&&(a=c());o-=a};this.rotateDown=function(a){void 0===a&&(a=c());o+=a};this.zoomIn=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));q/=a};this.zoomOut=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));q*=a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*
b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+p,e=e+o,e=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,e)),e=Math.max(1E-6,Math.min(Math.PI-1E-6,e)),f=b.length()*q,f=Math.max(this.minDistance,Math.min(this.maxDistance,f));b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);o=p=0;q=1;0<t.distanceTo(this.object.position)&&(this.dispatchEvent(w),t.copy(this.object.position))};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){f.userRotate&&(a.preventDefault(),0===a.button||2===a.button?(y=s.ROTATE,h.set(a.clientX,a.clientY)):1===a.button&&(y=s.ZOOM,j.set(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",e,!1))},!1);this.domElement.addEventListener("mousewheel",function(a){f.userZoom&&(0<a.wheelDelta?f.zoomOut():f.zoomIn())},!1)};
THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),t=g.length,s=0;f=t-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<t-1;f++)s=d*h.chunks[f]/h.total,b.keys[f]={time:s,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=2*Math.PI,h=Math.PI/180;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===
document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=0<=a?a:a+g;b=this.verticalAngleMap.srcRange;
a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=
function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),
c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=
this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),o=0;o<b.points.length;o++)c=new THREE.Mesh(g,h),c.position.copy(b.points[o]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),
!1)};this.handleResize()};THREE.PathControlsIdCounter=0;
THREE.PointerLockControls=function(a){var b=this,c=new THREE.Object3D;c.add(a);var d=new THREE.Object3D;d.position.y=10;d.add(c);var e=!1,f=!1,g=!1,h=!1,i=!1,k=!1,j=new THREE.Vector3,l=Math.PI/2;document.addEventListener("mousemove",function(a){if(!1!==b.enabled){var e=a.movementY||a.mozMovementY||a.webkitMovementY||0;d.rotation.y-=0.002*(a.movementX||a.mozMovementX||a.webkitMovementX||0);c.rotation.x-=0.002*e;c.rotation.x=Math.max(-l,Math.min(l,c.rotation.x))}},!1);document.addEventListener("keydown",
function(a){switch(a.keyCode){case 38:case 87:e=!0;break;case 37:case 65:g=!0;break;case 40:case 83:f=!0;break;case 39:case 68:h=!0;break;case 32:!0===k&&(j.y+=10),k=!1}},!1);document.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:e=!1;break;case 37:case 65:g=!1;break;case 40:case 83:f=!1;break;case 39:case 68:h=!1}},!1);this.enabled=!1;this.getObject=function(){return d};this.isOnObject=function(a){k=i=a};this.update=function(a){if(!1!==b.enabled&&(a*=0.1,j.x+=0.08*-j.x*a,
j.z+=0.08*-j.z*a,j.y-=0.25*a,e&&(j.z-=0.12*a),f&&(j.z+=0.12*a),g&&(j.x-=0.12*a),h&&(j.x+=0.12*a),!0===i&&(j.y=Math.max(0,j.y)),d.translateX(j.x),d.translateY(j.y),d.translateZ(j.z),10>d.position.y))j.y=0,d.position.y=10,k=!0}};
THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,h=1,i=0,k=0,j=0,l=0,m=0,o=0,p=0;this.handleResize=function(){o=window.innerWidth/2;p=window.innerHeight/2};this.update=function(a){if(this.mouseLook){var b=
a*this.lookSpeed;this.rotateHorizontally(b*l);this.rotateVertically(b*m)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<i||this.autoForward&&!(0>i)?1:i));this.object.translateX(b*k);this.object.translateY(b*j);g&&(this.roll+=this.rollSpeed*a*h);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);
c.cross(d,e).normalize();d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=Math.cos(this.roll);
this.object.matrix.multiplySelf(f);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.elements[4]*
a;this.object.position.y+=this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};
this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){l=(a.clientX-o)/window.innerWidth;m=(a.clientY-p)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();
switch(a.button){case 0:i=1;break;case 2:i=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:i=1;break;case 37:case 65:k=-1;break;case 40:case 83:i=-1;break;case 39:case 68:k=1;break;case 81:g=!0;h=1;break;case 69:g=!0;h=-1;break;case 82:j=1;break;case 70:j=-1}},!1);this.domElement.addEventListener("keyup",
function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:k=0;break;case 40:case 83:i=0;break;case 39:case 68:k=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:j=0;break;case 70:j=0}},!1);this.handleResize()};
THREE.TrackballControls=function(a,b){function c(a){h.enabled&&(window.removeEventListener("keydown",c),l=j,j===i.NONE&&(a.keyCode===h.keys[i.ROTATE]&&!h.noRotate?j=i.ROTATE:a.keyCode===h.keys[i.ZOOM]&&!h.noZoom?j=i.ZOOM:a.keyCode===h.keys[i.PAN]&&!h.noPan&&(j=i.PAN)))}function d(a){h.enabled&&(j===i.ROTATE&&!h.noRotate?p=h.getMouseProjectionOnBall(a.clientX,a.clientY):j===i.ZOOM&&!h.noZoom?t=h.getMouseOnScreen(a.clientX,a.clientY):j===i.PAN&&!h.noPan&&(y=h.getMouseOnScreen(a.clientX,a.clientY)))}
function e(a){h.enabled&&(a.preventDefault(),a.stopPropagation(),j=i.NONE,document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",e))}function f(a){if(h.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);q.y+=0.05*(1/b)}}function g(a){if(h.enabled)switch(a.preventDefault(),a.touches.length){case 1:o=p=h.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:q=t=h.getMouseOnScreen(a.touches[0].pageX,
a.touches[0].pageY);break;case 3:s=y=h.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY)}}THREE.EventTarget.call(this);var h=this,i={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=
0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var k=new THREE.Vector3,j=i.NONE,l=i.NONE,m=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector2,t=new THREE.Vector2,s=new THREE.Vector2,y=new THREE.Vector2,w={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+this.screen.height)/4};this.handleEvent=
function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-h.screen.offsetLeft)/h.radius),0.5*((b-h.screen.offsetTop)/h.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*h.screen.width-h.screen.offsetLeft)/h.radius,(0.5*h.screen.height+h.screen.offsetTop-b)/h.radius,0),d=c.length();1<d?c.normalize():c.z=Math.sqrt(1-d*d);m.copy(h.object.position).subSelf(h.target);d=h.object.up.clone().setLength(c.y);
d.addSelf(h.object.up.clone().crossSelf(m).setLength(c.x));d.addSelf(m.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(o.dot(p)/o.length()/p.length());if(a){var b=(new THREE.Vector3).cross(o,p).normalize(),c=new THREE.Quaternion,a=a*h.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(m);c.multiplyVector3(h.object.up);c.multiplyVector3(p);h.staticMoving?o.copy(p):(c.setFromAxisAngle(b,a*(h.dynamicDampingFactor-1)),c.multiplyVector3(o))}};this.zoomCamera=function(){var a=
1+(t.y-q.y)*h.zoomSpeed;1!==a&&0<a&&(m.multiplyScalar(a),h.staticMoving?q.copy(t):q.y+=(t.y-q.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=y.clone().subSelf(s);if(a.lengthSq()){a.multiplyScalar(m.length()*h.panSpeed);var b=m.clone().crossSelf(h.object.up).setLength(a.x);b.addSelf(h.object.up.clone().setLength(a.y));h.object.position.addSelf(b);h.target.addSelf(b);h.staticMoving?s=y:s.addSelf(a.sub(y,s).multiplyScalar(h.dynamicDampingFactor))}};this.checkDistances=function(){if(!h.noZoom||
!h.noPan)h.object.position.lengthSq()>h.maxDistance*h.maxDistance&&h.object.position.setLength(h.maxDistance),m.lengthSq()<h.minDistance*h.minDistance&&h.object.position.add(h.target,m.setLength(h.minDistance))};this.update=function(){m.copy(h.object.position).subSelf(h.target);h.noRotate||h.rotateCamera();h.noZoom||h.zoomCamera();h.noPan||h.panCamera();h.object.position.add(h.target,m);h.checkDistances();h.object.lookAt(h.target);0<k.distanceToSquared(h.object.position)&&(h.dispatchEvent(w),k.copy(h.object.position))};
this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){h.enabled&&(a.preventDefault(),a.stopPropagation(),j===i.NONE&&(j=a.button),j===i.ROTATE&&!h.noRotate?o=p=h.getMouseProjectionOnBall(a.clientX,a.clientY):j===i.ZOOM&&!h.noZoom?q=t=h.getMouseOnScreen(a.clientX,a.clientY):j===i.PAN&&!h.noPan&&(s=y=h.getMouseOnScreen(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",
e,!1))},!1);this.domElement.addEventListener("mousewheel",f,!1);this.domElement.addEventListener("DOMMouseScroll",f,!1);this.domElement.addEventListener("touchstart",g,!1);this.domElement.addEventListener("touchend",g,!1);this.domElement.addEventListener("touchmove",function(a){if(h.enabled)switch(a.preventDefault(),a.touches.length){case 1:p=h.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:t=h.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY);break;case 3:y=h.getMouseOnScreen(a.touches[0].pageX,
a.touches[0].pageY)}},!1);window.addEventListener("keydown",c,!1);window.addEventListener("keyup",function(){h.enabled&&(j=l,window.addEventListener("keydown",c,!1))},!1);this.handleResize()};
THREE.AnaglyphEffect=function(a,b,c){var d=new THREE.Matrix4,e=new THREE.Matrix4,f,g,h,i,k=new THREE.PerspectiveCamera;k.matrixAutoUpdate=!1;var j=new THREE.PerspectiveCamera;j.matrixAutoUpdate=!1;var l=new THREE.OrthographicCamera(-1,1,1,-1,0,1),m=new THREE.Scene,o={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};void 0===b&&(b=512);void 0===c&&(c=512);var p=new THREE.WebGLRenderTarget(b,c,o),q=new THREE.WebGLRenderTarget(b,c,o),t=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:p},mapRight:{type:"t",value:q}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 colorL, colorR;\n\tvec2 uv = vUv;\n\tcolorL = texture2D( mapLeft, uv );\n\tcolorR = texture2D( mapRight, uv );\n\tgl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"}),
b=new THREE.Mesh(new THREE.PlaneGeometry(2,2),t);m.add(b);this.setSize=function(b,c){p=new THREE.WebGLRenderTarget(b,c,o);q=new THREE.WebGLRenderTarget(b,c,o);t.uniforms.mapLeft.value=p;t.uniforms.mapRight.value=q;a.setSize(b,c)};this.render=function(b,c){b.updateMatrixWorld();void 0===c.parent&&c.updateMatrixWorld();if(f!==c.aspect||g!==c.near||h!==c.far||i!==c.fov){f=c.aspect;g=c.near;h=c.far;i=c.fov;var o=c.projectionMatrix.clone(),r=0.5*(125/30),t=r*g/125,v=g*Math.tan(i*Math.PI/360),u;d.elements[12]=
r;e.elements[12]=-r;r=-v*f+t;u=v*f+t;o.elements[0]=2*g/(u-r);o.elements[8]=(u+r)/(u-r);k.projectionMatrix.copy(o);r=-v*f-t;u=v*f-t;o.elements[0]=2*g/(u-r);o.elements[8]=(u+r)/(u-r);j.projectionMatrix.copy(o)}k.matrixWorld.copy(c.matrixWorld).multiplySelf(e);k.position.copy(c.position);k.near=c.near;k.far=c.far;a.render(b,k,p,!0);j.matrixWorld.copy(c.matrixWorld).multiplySelf(d);j.position.copy(c.position);j.near=c.near;j.far=c.far;a.render(b,j,q,!0);a.render(m,l)}};
THREE.AsciiEffect=function(a,b,c){b=void 0===b?" .:-=+*#%@":b;c||(c={});var d=!c.resolution?0.15:c.resolution,e=!c.scale?1:c.scale,f=!c.color?!1:c.color,g=!c.alpha?!1:c.alpha,h=!c.block?!1:c.block,i=!c.invert?!1:c.invert,k,j,c=document.createElement("div");c.style.cursor="default";var l=document.createElement("table");c.appendChild(l);var m,o,p;this.setSize=function(b,c){k=b;j=c;a.setSize(b,c);m=Math.round(k*B);o=Math.round(j*B);y.width=m;y.height=o;p=a.domElement;p.style.backgroundColor&&(l.rows[0].cells[0].style.backgroundColor=
p.style.backgroundColor,l.rows[0].cells[0].style.color=p.style.color);l.cellSpacing=0;l.cellPadding=0;var d=l.style;d.display="inline";d.width=Math.round(m/B*e)+"px";d.height=Math.round(o/B*e)+"px";d.whiteSpace="pre";d.margin="0px";d.padding="0px";d.letterSpacing=x+"px";d.fontFamily=t;d.fontSize=v+"px";d.lineHeight=u+"px";d.textAlign="left";d.textDecoration="none"};this.render=function(b,c){a.render(b,c);w.clearRect(0,0,m,o);w.drawImage(s,0,0,m,o);for(var d=w.getImageData(0,0,m,o).data,e="",j=0;j<
o;j+=2){for(var k=0;k<m;k++){var p=4*(j*m+k),q=d[p],t=d[p+1],u=d[p+2],p=d[p+3],v;v=(0.3*q+0.59*t+0.11*u)/255;0==p&&(v=1);v=Math.floor((1-v)*(r.length-1));i&&(v=r.length-v-1);v=r[v];if(void 0===v||" "==v)v="&nbsp;";e=f?e+("<span style='color:rgb("+q+","+t+","+u+");"+(h?"background-color:rgb("+q+","+t+","+u+");":"")+(g?"opacity:"+p/255+";":"")+"'>"+v+"</span>"):e+v}e+="<br/>"}l.innerHTML="<tr><td>"+e+"</td></tr>"};this.domElement=c;var c=" .,:;i1tfLCG08@".split(""),q=" CGO08@".split(""),t="courier new, monospace",
s=a.domElement,y=document.createElement("canvas");if(y.getContext){var w=y.getContext("2d");if(w.getImageData){var r=f?q:c;b&&(r=b);var B=0.5;switch("low"){case "low":B=0.25;break;case "medium":B=0.5;break;case "high":B=1}d&&(B=d);var v=2/B*e,u=2/B*e,x=0;switch(e){case 1:x=-1;break;case 2:case 3:x=-2.1;break;case 4:x=-3.1;break;case 5:x=-4.15}}}};
THREE.CrosseyedEffect=function(a){this.separation=10;var b,c,d=new THREE.PerspectiveCamera;d.target=new THREE.Vector3;var e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3;a.autoClear=!1;this.setSize=function(d,e){b=d/2;c=e;a.setSize(d,e)};this.render=function(f,g){d.fov=g.fov;d.aspect=0.5*g.aspect;d.near=g.near;d.far=g.far;d.updateProjectionMatrix();d.position.copy(g.position);d.target.copy(g.target);d.translateX(this.separation);d.lookAt(d.target);e.near=g.near;e.far=g.far;e.projectionMatrix=
d.projectionMatrix;e.position.copy(g.position);e.target.copy(g.target);e.translateX(-this.separation);e.lookAt(e.target);a.clear();a.setViewport(0,0,b,c);a.render(f,d);a.setViewport(b,0,b,c);a.render(f,e,!1)}};
THREE.ParallaxBarrierEffect=function(a){var b=new THREE.Matrix4,c=new THREE.Matrix4,d,e,f,g,h=new THREE.PerspectiveCamera;h.matrixAutoUpdate=!1;var i=new THREE.PerspectiveCamera;i.matrixAutoUpdate=!1;var k=new THREE.Scene,j=new THREE.PerspectiveCamera(53,1,1,1E4);j.position.z=2;k.add(j);var l={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},m=new THREE.WebGLRenderTarget(512,512,l),o=new THREE.WebGLRenderTarget(512,512,l),p=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:m},mapRight:{type:"t",value:o}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec2 uv = vUv;\n\tif ( ( mod( gl_FragCoord.x, 2.0 ) ) > 1.00 ) {\n\t\tgl_FragColor = texture2D( mapLeft, uv );\n\t} else {\n\t\tgl_FragColor = texture2D( mapRight, uv );\n\t}\n}"}),q=new THREE.Mesh(new THREE.PlaneGeometry(2,
2),p);k.add(q);this.setSize=function(b,c){m=new THREE.WebGLRenderTarget(b,c,l);o=new THREE.WebGLRenderTarget(b,c,l);p.uniforms.mapLeft.value=m;p.uniforms.mapRight.value=o;a.setSize(b,c)};this.render=function(l,p){l.updateMatrixWorld();void 0===p.parent&&p.updateMatrixWorld();if(d!==p.aspect||e!==p.near||f!==p.far||g!==p.fov){d=p.aspect;e=p.near;f=p.far;g=p.fov;var q=p.projectionMatrix.clone(),w=0.5*(125/30),r=w*e/125,B=e*Math.tan(g*Math.PI/360),v;b.elements[12]=w;c.elements[12]=-w;w=-B*d+r;v=B*d+
r;q.elements[0]=2*e/(v-w);q.elements[8]=(v+w)/(v-w);h.projectionMatrix.copy(q);w=-B*d-r;v=B*d-r;q.elements[0]=2*e/(v-w);q.elements[8]=(v+w)/(v-w);i.projectionMatrix.copy(q)}h.matrixWorld.copy(p.matrixWorld).multiplySelf(c);h.position.copy(p.position);h.near=p.near;h.far=p.far;a.render(l,h,m,!0);i.matrixWorld.copy(p.matrixWorld).multiplySelf(b);i.position.copy(p.position);i.near=p.near;i.far=p.far;a.render(l,i,o,!0);k.updateMatrixWorld();a.render(k,j)}};THREE.GeometryExporter=function(){};
THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(a){function b(a,b,c){var d=a.toString()+b.toString()+c.toString();if(void 0!==g[d])return g[d];g[d]=f.length/3;f.push(a,b,c);return g[d]}for(var c=[],d=0;d<a.vertices.length;d++){var e=a.vertices[d];c.push(e.x,e.y,e.z)}for(var e=[],f=[],g={},d=0;d<a.faces.length;d++){var h=a.faces[d],i=h instanceof THREE.Face3,k=void 0!==h.materialIndex,j=0<h.normal.length(),l=void 0!==h.vertexNormals[0],m=0,m=!i?m|1:m&-2,m=j?m|16:
m&-17,m=l?m|32:m&-33;e.push(m);i?e.push(h.a,h.b,h.c):e.push(h.a,h.b,h.c,h.d);k&&e.push(h.materialIndex);j&&(k=h.normal,e.push(b(k.x,k.y,k.z)));l&&(h=h.vertexNormals,i?e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z)):e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z),b(h[3].x,h[3].y,h[3].z)))}return['{\n\t"metadata": {\n\t\t"formatVersion" : 3.1,\n\t\t"generatedBy"\t: "GeometryExporter"\n\t},','\t"vertices": '+JSON.stringify(c)+",",'\t"normals": '+
JSON.stringify(f)+",",'\t"uvs": '+JSON.stringify([[]])+",",'\t"faces": '+JSON.stringify(e),"}"].join("\n")}};
THREE.ColladaLoader=function(){function a(a,d,e){V=a;d=d||cb;void 0!==e&&(a=e.split("/"),a.pop(),fb=(1>a.length?".":a.join("/"))+"/");if((a=V.evaluate("//dae:asset",V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(e=0;e<a.childNodes.length;e++){var i=a.childNodes[e];switch(i.nodeName){case "unit":(i=i.getAttribute("meter"))&&parseFloat(i);break;case "up_axis":Ma=i.textContent.charAt(0)}}if(!qa.convertUpAxis||Ma===qa.upAxis)Fa=null;else switch(Ma){case "X":Fa="Y"===
qa.upAxis?"XtoY":"XtoZ";break;case "Y":Fa="X"===qa.upAxis?"YtoX":"YtoZ";break;case "Z":Fa="X"===qa.upAxis?"ZtoX":"ZtoY"}ua=b("//dae:library_images/dae:image",g,"image");Ya=b("//dae:library_materials/dae:material",F,"material");Sa=b("//dae:library_effects/dae:effect",K,"effect");Ta=b("//dae:library_geometries/dae:geometry",t,"geometry");Oa=b(".//dae:library_cameras/dae:camera",ba,"camera");xa=b("//dae:library_controllers/dae:controller",h,"controller");pa=b("//dae:library_animations/dae:animation",
N,"animation");qb=b(".//dae:library_visual_scenes/dae:visual_scene",j,"visual_scene");va=[];ya=[];(a=V.evaluate(".//dae:scene/dae:instance_visual_scene",V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),$=qb[0<a.length?a:"visual_scene0"]):$=null;fa=new THREE.Object3D;for(a=0;a<$.nodes.length;a++)fa.add(f($.nodes[a]));Ua=[];c(fa);a={scene:fa,morphs:va,skins:ya,animations:Ua,dae:{images:ua,materials:Ya,cameras:Oa,effects:Sa,geometries:Ta,controllers:xa,
animations:pa,visualScenes:qb,scene:$}};d&&d(a);return a}function b(a,b,c){for(var a=V.evaluate(a,V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=$.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};Ua.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,
b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function e(a,b,c){var e,
f=xa[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var c=1E6,g=-c,h=0;for(e in pa)for(var i=pa[e],j=0;j<i.sampler.length;j++){var k=i.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;for(var b=$.getChildById(b.skeleton[0],!0)||$.getChildBySid(b.skeleton[0],!0),l,m,g=new THREE.Vector3,o,j=
0;j<a.vertices.length;j++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[j]);for(c=0;c<e;c++){h=[];i=[];for(j=0;j<a.vertices.length;j++)i.push(new THREE.Vector3);d(b,h,c);j=h;k=f.skin;for(m=0;m<j.length;m++)if(l=j[m],o=-1,"JOINT"==l.type){for(var p=0;p<k.joints.length;p++)if(l.sid==k.joints[p]){o=p;break}if(0<=o){p=k.invBindMatrices[o];l.invBindMatrix=p;l.skinningMatrix=new THREE.Matrix4;l.skinningMatrix.multiply(l.world,p);l.weights=[];for(p=0;p<k.weights.length;p++)for(var q=0;q<k.weights[p].length;q++){var r=
k.weights[p][q];r.joint==o&&l.weights.push(r)}}else throw"ColladaLoader: Could not find joint '"+l.sid+"'.";}for(j=0;j<h.length;j++)if("JOINT"==h[j].type)for(k=0;k<h[j].weights.length;k++)l=h[j].weights[k],m=l.index,l=l.weight,o=a.vertices[m],m=i[m],g.x=o.x,g.y=o.y,g.z=o.z,h[j].skinningMatrix.multiplyVector3(g),m.x+=g.x*l,m.y+=g.y*l,m.z+=g.z*l;a.morphTargets.push({name:"target_"+c,vertices:i})}}}function f(a){var b=new THREE.Object3D,c,d,g,h;for(g=0;g<a.controllers.length;g++){var i=xa[a.controllers[g].url];
switch(i.type){case "skin":if(Ta[i.skin.source]){var j=new q;j.url=i.skin.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j);c=a.controllers[g]}else xa[i.skin.source]&&(d=i=xa[i.skin.source],i.morph&&Ta[i.morph.source]&&(j=new q,j.url=i.morph.source,j.instance_material=a.controllers[g].instance_material,a.geometries.push(j)));break;case "morph":Ta[i.morph.source]&&(j=new q,j.url=i.morph.source,j.instance_material=a.controllers[g].instance_material,a.geometries.push(j),
d=a.controllers[g]),console.log("ColladaLoader: Morph-controller partially supported.")}}j={};for(g=0;g<a.geometries.length;g++){h=a.geometries[g];var i=h.instance_material,k=Ta[h.url],l={},m=[],p=0,r;if(k&&k.mesh&&k.mesh.primitives){0==b.name.length&&(b.name=k.id);if(i)for(h=0;h<i.length;h++){r=i[h];var s=Ya[r.target],t=Sa[s.instance_effect.url].shader.material;if(k.doubleSided){if(!(t in j)){var u=t.clone();u.side=THREE.DoubleSide;j[t]=u}t=j[t]}t.opacity=!t.opacity?1:t.opacity;l[r.symbol]=p;m.push(t);
r=t;r.name=null==s.name||""===s.name?s.id:s.name;p++}i=r||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide});k=k.mesh.geometry3js;if(1<p){i=new THREE.MeshFaceMaterial(m);for(h=0;h<k.faces.length;h++)m=k.faces[h],m.materialIndex=l[m.daeMaterial]}if(void 0!==c)e(k,c),i.morphTargets=!0,i=new THREE.SkinnedMesh(k,i,!1),i.skeleton=c.skeleton,i.skinController=xa[c.url],i.skinInstanceController=c,i.name="skin_"+ya.length,ya.push(i);
else if(void 0!==d){h=k;l=d instanceof o?xa[d.url]:d;if(!l||!l.morph)console.log("could not find morph controller!");else{l=l.morph;for(m=0;m<l.targets.length;m++)p=Ta[l.targets[m]],p.mesh&&(p.mesh.primitives&&p.mesh.primitives.length)&&(p=p.mesh.primitives[0].geometry,p.vertices.length===h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:p.vertices}));h.morphTargets.push({name:"target_Z",vertices:h.vertices})}i.morphTargets=!0;i=new THREE.Mesh(k,i);i.name="morph_"+va.length;va.push(i)}else i=
new THREE.Mesh(k,i);1<a.geometries.length?b.add(i):b=i}}for(g=0;g<a.cameras.length;g++)b=Oa[a.cameras[g].url],b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar);b.name=a.id||"";b.matrix=a.matrix;g=a.matrix.decompose();b.position=g[0];b.quaternion=g[1];b.useQuaternion=!0;b.scale=g[2];qa.centerGeometry&&b.geometry&&(g=THREE.GeometryUtils.center(b.geometry),b.quaternion.multiplyVector3(g.multiplySelf(b.scale)),b.position.subSelf(g));for(g=0;g<a.nodes.length;g++)b.add(f(a.nodes[g],a));
return b}function g(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=null}function i(){this.weights=this.targets=this.source=this.method=null}function k(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function j(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function l(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function m(){this.type=this.sid="";this.data=[];this.obj=null}function o(){this.url="";this.skeleton=[];this.instance_material=[]}function p(){this.target=this.symbol=""}function q(){this.url="";this.instance_material=[]}function t(){this.id="";this.mesh=null}function s(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function y(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function w(){y.call(this);
this.vcount=[]}function r(){y.call(this);this.vcount=3}function B(){this.source="";this.stride=this.count=0;this.params=[]}function v(){this.input={}}function u(){this.semantic="";this.offset=0;this.source="";this.set=0}function x(a){this.id=a;this.type=null}function F(){this.name=this.id="";this.instance_effect=null}function C(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function E(a,b){this.type=
a;this.effect=b;this.material=null}function M(a){this.effect=a;this.format=this.init_from=null}function D(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function K(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function I(){this.url=""}function N(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function O(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function P(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function T(a){this.targets=[];this.time=a}function ba(){this.technique=this.name=this.id=""}function Q(){this.url=""}function G(a){return"dae"==a?"http://www.collada.org/2005/11/COLLADASchema":null}function J(a){for(var a=ca(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function S(a){for(var a=
ca(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function ca(a){return 0<a.length?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function la(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function L(a,b){a.doubleSided=!1;var c=V.evaluate(".//dae:extra//dae:double_sided",b,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c&&(c=c.iterateNext())&&1===parseInt(c.textContent,10))a.doubleSided=!0}function R(a,b){if(qa.convertUpAxis&&Ma!==qa.upAxis)switch(Fa){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1],a[1]=a[2],a[2]=b*c}}function ea(a,b){var c=[a[b],a[b+1],a[b+2]];R(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function W(a){if(qa.convertUpAxis){var b=[a[0],a[4],a[8]];R(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];R(b,-1);a[1]=b[0];a[5]=b[1];a[9]=
b[2];b=[a[2],a[6],a[10]];R(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];R(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];R(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];R(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];R(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function da(a){if(qa.convertUpAxis)switch(a){case "X":switch(Fa){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch(Fa){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(Fa){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var V=null,fa=null,$,cb=null,Aa={},ua={},pa={},xa={},Ta={},Ya={},Sa={},Oa={},Ua,qb,fb,va,ya,mb=THREE.SmoothShading,qa={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},Ma="Y",Fa=null,wa=Math.PI/180;g.prototype.parse=function(a){this.id=
a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];"init_from"==c.nodeName&&(this.init_from=c.textContent)}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new k).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new i).parse(c),this.type=c.nodeName}}return this};i.prototype.parse=function(a){var b=
{},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case "source":e=(new x).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};i.prototype.parseInputs=
function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":b.push((new u).parse(d))}}return b};k.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case "bind_shape_matrix":f=J(f.textContent);this.bindShapeMatrix=W(f);break;case "source":f=
(new x).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};k.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":var d=(new u).parse(d),e=b[d.source];"JOINT"==d.semantic?this.joints=e.read():"INV_BIND_MATRIX"==d.semantic&&(this.invBindMatrices=e.read())}}};k.prototype.parseWeights=function(a,
b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case "input":e.push((new u).parse(g));break;case "v":c=S(g.textContent);break;case "vcount":d=S(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},l=0;l<e.length;l++){var m=e[l],o=c[g+m.offset];switch(m.semantic){case "JOINT":k.joint=o;break;case "WEIGHT":k.weight=b[m.source].data[o]}}i.push(k);g+=e.length}for(j=0;j<i.length;j++)i[j].index=f;this.weights.push(i)}};
j.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};j.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};j.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "node":this.nodes.push((new l).parse(c))}}return this};
l.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=0<=e.indexOf("."),g=0<=e.indexOf("("),h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};l.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=
0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};l.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};l.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};l.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");
this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type="JOINT"==this.type?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case "node":this.nodes.push((new l).parse(b));break;case "instance_camera":this.cameras.push((new Q).parse(b));break;case "instance_controller":this.controllers.push((new o).parse(b));
break;case "instance_geometry":this.geometries.push((new q).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=V.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new l).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new m).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=
[];c=1E6;b=-1E6;for(var d in pa)for(var e=pa[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];d==this.id&&(h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g))}a.length&&(this.startTime=c,this.endTime=b);if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var i=this.channels[c],f=i.fullSid,g=i.sampler,h=g.input,j=this.getTransformBySid(i.sid),k;if(i.arrIndices){k=[];b=0;for(var p=i.arrIndices.length;b<
p;b++){var r=k,s=b,t=i.arrIndices[b];-1<t&&3>t&&(t=da(["X","Y","Z"][t]),t={X:0,Y:1,Z:2}[t]);r[s]=t}}else k=da(i.member);if(j){-1===a.indexOf(f)&&a.push(f);b=0;for(p=h.length;b<p;b++){for(var r=h[b],i=g.getData(j.type,b),s=null,t=0,u=d.length;t<u&&null==s;t++){var v=d[t];if(v.time===r)s=v;else if(v.time>r)break}if(!s){s=new T(r);t=-1;u=0;for(v=d.length;u<v&&-1==t;u++)d[u].time>=r&&(t=u);r=t;d.splice(-1==r?d.length:r,0,s)}s.addTarget(f,j,k,i)}}else console.log('Could not find transform "'+i.sid+'" in node '+
this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(s=d[b],!s.hasTarget(e)){h=d;f=s;k=b;g=e;j=void 0;a:{j=k?k-1:0;for(j=0<=j?j:j+h.length;0<=j;j--)if(p=h[j],p.hasTarget(g)){j=p;break a}j=null}p=void 0;a:{for(k+=1;k<h.length;k++)if(p=h[k],p.hasTarget(g))break a;p=null}if(j&&p){h=(f.time-j.time)/(p.time-j.time);j=j.getTarget(g);k=p.getTarget(g).data;p=j.data;i=void 0;if("matrix"===j.type)i=p;else if(p.length){i=[];for(r=0;r<p.length;++r)i[r]=p[r]+(k[r]-p[r])*h}else i=p+(k-p)*h;f.addTarget(g,
j.transform,j.member,i)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};l.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};m.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=J(a.textContent);this.convert();return this};m.prototype.convert=function(){switch(this.type){case "matrix":this.obj=W(this.data);break;case "rotate":this.angle=this.data[3]*wa;case "translate":R(this.data,
-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":R(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};m.prototype.apply=function(a){switch(this.type){case "matrix":a.multiplySelf(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,this.angle);break;case "scale":a.scale(this.obj)}};m.prototype.update=function(a,
b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(1===b.length)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0],this.obj.n24=a[1],this.obj.n34=a[2],this.obj.n44=a[3]}else 2===b.length?this.obj["n"+(b[0]+1)+(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");
else this.obj.copy(a);break;case "translate":case "scale":"[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case "rotate":switch("[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]),b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;case "ANGLE":this.angle=a*wa;break;default:this.obj.x=
a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=a[3]*wa}}};o.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1===c.nodeType)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=V.evaluate(".//dae:instance_material",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new p).parse(d)),
d=c.iterateNext()}}return this};p.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&"bind_material"==c.nodeName){if(a=V.evaluate(".//dae:instance_material",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new p).parse(b)),
b=a.iterateNext();break}}return this};t.prototype.parse=function(a){this.id=a.getAttribute("id");L(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new s(this)).parse(c)}}return this};s.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");void 0==Aa[d]&&(Aa[d]=(new x(d)).parse(c));break;case "vertices":this.vertices=(new v).parse(c);
break;case "triangles":this.primitives.push((new r).parse(c));break;case "polygons":this.primitives.push((new y).parse(c));break;case "polylist":this.primitives.push((new w).parse(c))}}this.geometry3js=new THREE.Geometry;a=Aa[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(ea(a,b).clone());for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();
this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};s.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,i,j,k,l=0,m=3,o=0,p=[];for(c=0;c<f.length;c++)switch(g=f[c],m=g.offset+1,o=o<m?m:o,g.semantic){case "TEXCOORD":p.push(g.set)}for(var q=0;q<e.length;++q)for(var r=e[q],s=0;s<r.length;){var t=[],u=[],v=null,w=[],m=a.vcount?a.vcount.length?
a.vcount[l++]:a.vcount:r.length/o;for(c=0;c<m;c++)for(d=0;d<f.length;d++)switch(g=f[d],j=Aa[g.source],h=r[s+c*o+g.offset],k=j.accessor.params.length,i=h*k,g.semantic){case "VERTEX":t.push(h);break;case "NORMAL":u.push(ea(j.data,i));break;case "TEXCOORD":v=v||{};void 0===v[g.set]&&(v[g.set]=[]);v[g.set].push(new THREE.UV(j.data[i],j.data[i+1]));break;case "COLOR":w.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}if(0==u.length)if(g=this.vertices.input.NORMAL){j=Aa[g.source];k=j.accessor.params.length;
c=0;for(h=t.length;c<h;c++)u.push(ea(j.data,t[c]*k))}else b.calcNormals=!0;if(!v&&(v={},g=this.vertices.input.TEXCOORD)){p.push(g.set);j=Aa[g.source];k=j.accessor.params.length;c=0;for(h=t.length;c<h;c++)i=t[c]*k,void 0===v[g.set]&&(v[g.set]=[]),v[g.set].push(new THREE.UV(j.data[i],1-j.data[i+1]))}if(0==w.length&&(g=this.vertices.input.COLOR)){j=Aa[g.source];k=j.accessor.params.length;c=0;for(h=t.length;c<h;c++)i=t[c]*k,w.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}d=null;g=
[];if(3===m)g.push(new THREE.Face3(t[0],t[1],t[2],u,w.length?w:new THREE.Color));else if(4===m)g.push(new THREE.Face4(t[0],t[1],t[2],t[3],u,w.length?w:new THREE.Color));else if(4<m&&qa.subdivideFaces){w=w.length?w:new THREE.Color;for(d=1;d<m-1;)g.push(new THREE.Face3(t[0],t[d],t[d+1],[u[0],u[d++],u[d]],w))}if(g.length){c=0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<p.length;d++)t=v[p[d]],t=4<m?[t[0],t[c+1],t[c+2]]:4===m?[t[0],t[1],t[2],t[3]]:[t[0],t[1],t[2]],
b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]),b.faceVertexUvs[d].push(t)}}else console.log("dropped face with vcount "+m+" for geometry with id: "+b.id);s+=o*m}};y.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)this.inputs[b].source==a.id&&(this.inputs[b].source=a.input.POSITION.source)};y.prototype.parse=function(a){this.material=a.getAttribute("material");this.count=la(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new u).parse(a.childNodes[b]));
break;case "vcount":this.vcount=S(c.textContent);break;case "p":this.p.push(S(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};w.prototype=Object.create(y.prototype);r.prototype=Object.create(y.prototype);B.prototype.parse=function(a){this.params=[];this.source=a.getAttribute("source");this.count=la(a,"count",0);this.stride=la(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if("param"==c.nodeName){var d={};d.name=c.getAttribute("name");
d.type=c.getAttribute("type");this.params.push(d)}}return this};v.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if("input"==a.childNodes[b].nodeName){var c=(new u).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};u.prototype.parse=function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=la(a,"set",-1);this.offset=la(a,"offset",0);"TEXCOORD"==this.semantic&&0>this.set&&(this.set=
0);return this};x.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=ca(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push("true"==d[f]||"1"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;break;case "float_array":this.data=J(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=S(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=ca(c.textContent);
this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if("accessor"==c.childNodes[d].nodeName){this.accessor=(new B).parse(c.childNodes[d]);break}}}return this};x.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=W(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+
b.type+".")}return a};F.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if("instance_effect"==a.childNodes[b].nodeName){this.instance_effect=(new I).parse(a.childNodes[b]);break}return this};C.prototype.isColor=function(){return null==this.texture};C.prototype.isTexture=function(){return null!=this.texture};C.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "color":c=
J(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};C.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&"extra"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&"technique"===a.childNodes[1].nodeName&&
(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=c.textContent}}return this};E.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=
(new C).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=V.evaluate(".//dae:float",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};E.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=
this[c];if(d instanceof C)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=ua[this.effect.surface.init_from];e&&(e=THREE.ImageUtils.loadTexture(fb+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e,"emission"===
c&&(a.emissive=16777215))}}else if("diffuse"===c||!b)"emission"===c?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];0<a[c]&&(a.envMap=qa.defaultEnvMap);a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=this[c];1!==this[c]&&(a.envMap=qa.defaultEnvMap);break;case "transparency":b&&(a.transparent=!0,a.opacity=this[c],b=!0)}a.shading=mb;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;
switch(this.type){case "constant":a.color=a.emission;this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":a.color=a.diffuse;this.material=new THREE.MeshPhongMaterial(a);break;default:a.color=a.diffuse,this.material=new THREE.MeshLambertMaterial(a)}return this.material};M.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;
break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};D.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+
c.nodeName)}}return this};K.prototype.create=function(){if(null==this.shader)return null};K.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");L(this,a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};K.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];
if(1==d.nodeType)switch(d.nodeName){case "surface":this.surface=(new M(this)).parse(d);this.surface.sid=b;break;case "sampler2D":this.sampler=(new D(this)).parse(d);this.sampler.sid=b;break;case "extra":break;default:console.log(d.nodeName)}}};K.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);
break;case "image":d=(new g).parse(d);ua[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};K.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=(new E(c.nodeName,this)).parse(c)}}};I.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};N.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "animation":var c=(new N).parse(c),d;for(d in c.source)this.source[d]=c.source[d];for(var e=0;e<c.channel.length;e++)this.channel.push(c.channel[e]),this.sampler.push(c.sampler[e]);break;case "source":d=(new x).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new P(this)).parse(c));break;case "channel":this.channel.push((new O(this)).parse(c))}}return this};
O.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=b.shift(),c=0<=a.indexOf("."),d=0<=a.indexOf("(");if(c)b=a.split("."),this.sid=b.shift(),this.member=b.shift();else if(d){b=a.split("(");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};P.prototype.parse=function(a){this.id=
a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "input":this.inputs.push((new u).parse(c))}}return this};P.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;
case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),this.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};P.prototype.getData=function(a,b){var c;if("matrix"===a&&16===this.strideOut)c=this.output[b];else if(1<this.strideOut){c=[];for(var b=b*
this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case "rotate":case "translate":R(c,-1);break;case "scale":R(c,1)}else 4===this.strideOut&&"matrix"===a&&R(c,-1)}else c=this.output[b];return c};T.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};T.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};T.prototype.getTarget=
function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};T.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};T.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if("matrix"!==d.transform.type&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log("Key.interpolate: Warning! Scale out of bounds:"+
f),f=0>f?0:1;if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};ba.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};ba.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if("technique_common"==a.childNodes[b].nodeName)for(var c=
a.childNodes[b],d=0;d<c.childNodes.length;d++)if(this.technique=c.childNodes[d].nodeName,"perspective"==this.technique)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if("orthographic"==this.technique){e=c.childNodes[d];for(f=
0;f<e.childNodes.length;f++)switch(g=e.childNodes[f],g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}return this};Q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=
new XMLHttpRequest;f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)if(f.responseXML)cb=c,a(f.responseXML,void 0,b);else if(f.responseText){cb=c;var g=(new DOMParser).parseFromString(f.responseText,"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+b+")")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader("Content-Length")),d({total:e,loaded:f.responseText.length}))};f.open("GET",b,!0);f.send(null)}else alert("Don't know how to parse XML!")},
parse:a,setPreferredShading:function(a){mb=a},applySkin:e,geometries:Ta,options:qa}};THREE.MTLLoader=function(a,b){THREE.EventTarget.call(this);this.baseUrl=a;this.options=b};
THREE.MTLLoader.prototype={load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(c){200===c.target.status||0===c.target.status?(c=b.parse(c.target.responseText),b.dispatchEvent({type:"load",content:c})):b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText})},!1);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);c.open("GET",a,!0);c.send(null)},parse:function(a){for(var b=a.split("\n"),c={},d=/\s+/,a={},e=0;e<b.length;e++){var f=b[e],f=f.trim();if(!(0===f.length||"#"===f.charAt(0))){var g=f.indexOf(" "),h=0<=g?f.substring(0,g):f,h=h.toLowerCase(),f=0<=g?f.substring(g+1):"",f=f.trim();"newmtl"===h?(c={name:f},a[f]=c):c&&("ka"===h||"kd"===h||"ks"===h?(f=f.split(d,3),c[h]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]):c[h]=f)}}b=new THREE.MTLLoader.MaterialCreator(this.baseUrl,
this.options);b.setMaterials(a);return b}};THREE.MTLLoader.MaterialCreator=function(a,b){THREE.EventTarget.call(this);this.baseUrl=a;this.options=b;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={},c;for(c in a){var d=a[c],e={};b[c]=e;for(var f in d){var g=!0,h=d[f],i=f.toLowerCase();switch(i){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&(h=[h[0]/255,h[1]/255,h[2]/255]);this.options&&this.options.ignoreZeroRGBs&&0===h[0]&&(0===h[1]&&0===h[1])&&(g=!1);
break;case "d":this.options&&this.options.invertTransparency&&(h=1-h)}g&&(e[i]=h)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,b;for(b in this.materialsInfo)this.materialsArray[a]=this.create(b),this.nameLookup[b]=a,a++;return this.materialsArray},create:function(a){void 0===this.materials[a]&&this.createMaterial_(a);return this.materials[a]},createMaterial_:function(a){var b=this.materialsInfo[a],
c={name:a,side:this.side},d;for(d in b){var e=b[d];switch(d.toLowerCase()){case "kd":c.diffuse=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ka":c.ambient=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ks":c.specular=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "map_kd":c.map=THREE.MTLLoader.loadTexture(this.baseUrl+e);c.map.wrapS=this.wrap;c.map.wrapT=this.wrap;break;case "ns":c.shininess=e;break;case "d":1>e&&(c.transparent=!0,c.opacity=e)}}c.diffuse&&(c.ambient||(c.ambient=
c.diffuse),c.color=c.diffuse);this.materials[a]=new THREE.MeshPhongMaterial(c);return this.materials[a]}};
THREE.MTLLoader.loadTexture=function(a,b,c,d){if(a.toLowerCase().endsWith(".dds"))var e=THREE.ImageUtils.loadCompressedTexture(a,b,c,d);else{var f=new Image,e=new THREE.Texture(f,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=THREE.MTLLoader.ensurePowerOfTwo_(a.content);e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f)}return e};
THREE.MTLLoader.ensurePowerOfTwo_=function(a){if(!THREE.MTLLoader.isPowerOfTwo_(a.width)||!THREE.MTLLoader.isPowerOfTwo_(a.height)){var b=document.createElement("canvas");b.width=THREE.MTLLoader.nextHighestPowerOfTwo_(a.width);b.height=THREE.MTLLoader.nextHighestPowerOfTwo_(a.height);b.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,b.width,b.height);return b}return a};THREE.MTLLoader.isPowerOfTwo_=function(a){return 0===(a&a-1)};
THREE.MTLLoader.nextHighestPowerOfTwo_=function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1};THREE.OBJLoader=function(){THREE.EventTarget.call(this)};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){b.dispatchEvent({type:"load",content:b.parse(a.target.responseText)})},!1);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.open("GET",a,!0);c.send(null)},parse:function(a){function b(a,
b,c){return new THREE.Vector3(a,b,c)}function c(a,b){return new THREE.UV(a,b)}function d(a,b,c,d){return new THREE.Face3(a,b,c,d)}function e(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}var f=new THREE.Object3D,g=[],h=[],i=[],k,j;for(k=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(j=k.exec(a));)g.push(b(parseFloat(j[1]),parseFloat(j[2]),parseFloat(j[3])));for(k=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(j=k.exec(a));)h.push(b(parseFloat(j[1]),parseFloat(j[2]),
parseFloat(j[3])));for(k=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(j=k.exec(a));)i.push(c(parseFloat(j[1]),parseFloat(j[2])));for(var a=a.split("\no "),l=0,m=a.length;l<m;l++){var o=a[l],p=new THREE.Geometry;p.vertices=g;for(k=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/g;null!=(j=k.exec(o));)void 0===j[4]?p.faces.push(d(parseInt(j[1])-1,parseInt(j[2])-1,parseInt(j[3])-1)):p.faces.push(e(parseInt(j[1])-1,parseInt(j[2])-1,parseInt(j[3])-1,parseInt(j[4])-1));for(k=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/g;null!=
(j=k.exec(o));)void 0===j[10]?(p.faces.push(d(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1)),p.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[6])-1],i[parseInt(j[9])-1]])):(p.faces.push(e(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1,parseInt(j[11])-1)),p.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[6])-1],i[parseInt(j[9])-1],i[parseInt(j[12])-1]]));for(k=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/g;null!=
(j=k.exec(o));)void 0===j[13]?(p.faces.push(d(parseInt(j[2])-1,parseInt(j[6])-1,parseInt(j[10])-1,[h[parseInt(j[4])-1],h[parseInt(j[8])-1],h[parseInt(j[12])-1]])),p.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[7])-1],i[parseInt(j[11])-1]])):(p.faces.push(e(parseInt(j[2])-1,parseInt(j[6])-1,parseInt(j[10])-1,parseInt(j[14])-1,[h[parseInt(j[4])-1],h[parseInt(j[8])-1],h[parseInt(j[12])-1],h[parseInt(j[16])-1]])),p.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[7])-1],i[parseInt(j[11])-
1],i[parseInt(j[15])-1]]));for(k=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/g;null!=(j=k.exec(o));)void 0===j[10]?p.faces.push(d(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1,[h[parseInt(j[3])-1],h[parseInt(j[6])-1],h[parseInt(j[9])-1]])):p.faces.push(e(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1,parseInt(j[11])-1,[h[parseInt(j[3])-1],h[parseInt(j[6])-1],h[parseInt(j[9])-1],h[parseInt(j[12])-1]]));p.computeCentroids();p.computeFaceNormals();
p.computeBoundingSphere();f.add(new THREE.Mesh(p,new THREE.MeshLambertMaterial))}return f}};THREE.OBJMTLLoader=function(){THREE.EventTarget.call(this)};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(a,b,c){function d(c){"load"===c.type?c.content instanceof THREE.MTLLoader.MaterialCreator?(g=!0,i=c.content,i.preload()):200===c.target.status||0===c.target.status?(c=c.target.responseText,h=b?e.parse(c):e.parse(c,function(a){g=!1;k.load(k.baseUrl+a)})):e.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText}):"error"===c.type&&(g=!0);g&&h&&(i&&h.traverse(function(a){if(a instanceof
THREE.Mesh&&a.material.name){var b=i.create(a.material.name);if(b)a.material=b}}),e.dispatchEvent({type:"load",content:h}))}var e=this,f=new XMLHttpRequest,g,h,i,k=new THREE.MTLLoader(a.substr(0,a.lastIndexOf("/")+1),c);k.addEventListener("load",d);k.addEventListener("error",d);b?(k.load(b),g=!1):g=!0;f.addEventListener("load",d,!1);f.addEventListener("progress",function(a){e.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);f.addEventListener("error",function(){e.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);f.open("GET",a,!0);f.send(null)},parse:function(a,b){function c(a,b,c){return new THREE.Vector3(a,b,c)}function d(a,b){return new THREE.UV(a,b)}function e(a,b,c,d){return new THREE.Face3(a,b,c,d)}function f(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}function g(a,b){b.geometry.computeCentroids();b.geometry.computeFaceNormals();b.geometry.computeBoundingSphere();a.add(new THREE.Mesh(b.geometry,b.material))}var h=[],i=[],k=[],j=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,
l=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,m=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,o=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/,p=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/,q=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/,t=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/,s=new THREE.Object3D,y=new THREE.Geometry;y.vertices=h;
for(var w={material:new THREE.MeshLambertMaterial,geometry:y},r=a.split("\n"),B=0;B<r.length;B++){var v=r[B],v=v.trim(),u;0===v.length||"#"===v.charAt(0)||(null!==(u=j.exec(v))?h.push(c(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]))):null!==(u=l.exec(v))?i.push(c(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]))):null!==(u=m.exec(v))?k.push(d(parseFloat(u[1]),parseFloat(u[2]))):null!==(u=o.exec(v))?void 0===u[4]?y.faces.push(e(parseInt(u[1])-1,parseInt(u[2])-1,parseInt(u[3])-1)):y.faces.push(f(parseInt(u[1])-
1,parseInt(u[2])-1,parseInt(u[3])-1,parseInt(u[4])-1)):null!==(u=p.exec(v))?void 0===u[10]?(y.faces.push(e(parseInt(u[2])-1,parseInt(u[5])-1,parseInt(u[8])-1)),y.faceVertexUvs[0].push([k[parseInt(u[3])-1],k[parseInt(u[6])-1],k[parseInt(u[9])-1]])):(y.faces.push(f(parseInt(u[2])-1,parseInt(u[5])-1,parseInt(u[8])-1,parseInt(u[11])-1)),y.faceVertexUvs[0].push([k[parseInt(u[3])-1],k[parseInt(u[6])-1],k[parseInt(u[9])-1],k[parseInt(u[12])-1]])):null!==(u=q.exec(v))?void 0===u[13]?(y.faces.push(e(parseInt(u[2])-
1,parseInt(u[6])-1,parseInt(u[10])-1,[i[parseInt(u[4])-1],i[parseInt(u[8])-1],i[parseInt(u[12])-1]])),y.faceVertexUvs[0].push([k[parseInt(u[3])-1],k[parseInt(u[7])-1],k[parseInt(u[11])-1]])):(y.faces.push(f(parseInt(u[2])-1,parseInt(u[6])-1,parseInt(u[10])-1,parseInt(u[14])-1,[i[parseInt(u[4])-1],i[parseInt(u[8])-1],i[parseInt(u[12])-1],i[parseInt(u[16])-1]])),y.faceVertexUvs[0].push([k[parseInt(u[3])-1],k[parseInt(u[7])-1],k[parseInt(u[11])-1],k[parseInt(u[15])-1]])):null!==(u=t.exec(v))?void 0===
u[10]?y.faces.push(e(parseInt(u[2])-1,parseInt(u[5])-1,parseInt(u[8])-1,[i[parseInt(u[3])-1],i[parseInt(u[6])-1],i[parseInt(u[9])-1]])):y.faces.push(f(parseInt(u[2])-1,parseInt(u[5])-1,parseInt(u[8])-1,parseInt(u[11])-1,[i[parseInt(u[3])-1],i[parseInt(u[6])-1],i[parseInt(u[9])-1],i[parseInt(u[12])-1]])):v.startsWith("usemtl ")?(v=v.substring(7),v=v.trim(),u=new THREE.MeshLambertMaterial,u.name=v,0<y.faces.length&&(g(s,w),y=new THREE.Geometry,y.vertices=h,w={geometry:y}),w.material=u):v.startsWith("g ")?
(v=v.substring(2),v=v.trim()):v.startsWith("o ")?(v=v.substring(2),v=v.trim()):v.startsWith("s ")||(v.startsWith("mtllib ")?b&&(v=v.substring(7),v=v.trim(),b(v)):console.error("Unhandled line "+v)))}g(s,w);return s}};THREE.STLLoader=function(){THREE.EventTarget.call(this)};
THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){c.dispatchEvent({type:"load",content:c.parse(a.target.responseText)})},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b&&c.addEventListener("load",function(a){b(a.content)});d.open("GET",
a,!0);d.send(null)},parse:function(a){for(var b=new THREE.Geometry,c=/facet([\s\S]*?)endfacet/g,d;null!=(d=c.exec(a));){for(var e=d[0],f=/normal[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=(d=f.exec(e));)var g=new THREE.Vector3(d[1],d[3],d[5]);for(f=/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=
(d=f.exec(e));)b.vertices.push(new THREE.Vector3(d[1],d[3],d[5]));d=b.vertices.length;b.faces.push(new THREE.Face3(d-3,d-2,d-1,g))}b.computeCentroids();b.computeBoundingSphere();return b}};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype.load=function(a,b,c){this.downloadModelJson(a,c,b)};THREE.UTF8Loader.BufferGeometryCreator=function(){};
THREE.UTF8Loader.BufferGeometryCreator.prototype.create=function(a,b){var c=b.length/3,d=new THREE.BufferGeometry,e=new Float32Array(9*c),f=new Float32Array(9*c),c=new Float32Array(6*c),g,h,i,k,j,l=a.length;for(g=h=0;g<l;g+=8)i=a[g],k=a[g+1],j=a[g+2],e[h++]=i,e[h++]=k,e[h++]=j;h=0;for(g=3;g<l;g+=8)i=a[g],k=a[g+1],c[h++]=i,c[h++]=k;h=0;for(g=5;g<l;g+=8)i=a[g],k=a[g+1],j=a[g+2],f[h++]=i,f[h++]=k,f[h++]=j;g=d.attributes;g.index={itemSize:1,array:b,numItems:b.length};g.position={itemSize:3,array:e,numItems:e.length};
g.normal={itemSize:3,array:f,numItems:f.length};g.uv={itemSize:2,array:c,numItems:c.length};d.offsets=[{start:0,count:b.length,index:0}];d.computeBoundingSphere();return d};THREE.UTF8Loader.GeometryCreator=function(){};
THREE.UTF8Loader.GeometryCreator.prototype={create:function(a,b){var c=new THREE.Geometry;this.init_vertices(c,a,8,0);var d=this.init_uvs(a,8,3),e=this.init_normals(a,8,5);this.init_faces(c,e,d,b);c.computeCentroids();c.computeFaceNormals();return c},init_vertices:function(a,b,c,d){for(var e,f,g,h=b.length;d<h;d+=c)e=b[d],f=b[d+1],g=b[d+2],this.addVertex(a,e,f,g)},init_normals:function(a,b,c){for(var d=[],e,f,g,h=a.length;c<h;c+=b)e=a[c],f=a[c+1],g=a[c+2],d.push(e,f,g);return d},init_uvs:function(a,
b,c){for(var d=[],e,f,g=a.length;c<g;c+=b)e=a[c],f=a[c+1],d.push(e,f);return d},init_faces:function(a,b,c,d){var e,f,g,h,i,k,j,l=d.length;for(e=0;e<l;e+=3)f=d[e],g=d[e+1],h=d[e+2],this.f3n(a,b,f,g,h,0,f,g,h),i=c[2*f],f=c[2*f+1],k=c[2*g],g=c[2*g+1],j=c[2*h],h=c[2*h+1],this.uv3(a.faceVertexUvs[0],i,f,k,g,j,h)},addVertex:function(a,b,c,d){a.vertices.push(new THREE.Vector3(b,c,d))},f3n:function(a,b,c,d,e,f,g,h,i){var k=b[3*h],j=b[3*h+1],l=b[3*h+2],h=b[3*i],m=b[3*i+1],i=b[3*i+2],b=new THREE.Vector3(b[3*
g],b[3*g+1],b[3*g+2]),k=new THREE.Vector3(k,j,l),j=new THREE.Vector3(h,m,i);a.faces.push(new THREE.Face3(c,d,e,[b,k,j],null,f))},uv3:function(a,b,c,d,e,f,g){var h=[];h.push(new THREE.UV(b,c));h.push(new THREE.UV(d,e));h.push(new THREE.UV(f,g));a.push(h)}};var DEFAULT_DECODE_PARAMS={decodeOffsets:[-4095,-4095,-4095,0,0,-511,-511,-511],decodeScales:[1/8191,1/8191,1/8191,1/1023,1/1023,1/1023,1/1023,1/1023]};
THREE.UTF8Loader.prototype.decompressAttribsInner_=function(a,b,c,d,e,f,g,h){for(var i=0;b<c;b++){var k=a.charCodeAt(b),i=i+(k>>1^-(k&1));d[e]=h*(i+g);e+=f}};THREE.UTF8Loader.prototype.decompressIndices_=function(a,b,c,d,e){for(var f=0,g=0;g<c;g++){var h=a.charCodeAt(b++);d[e++]=f-h;0===h&&f++}};
THREE.UTF8Loader.prototype.decompressAABBs_=function(a,b,c,d,e){for(var f=6*c,c=b+f,g=0,f=new Float32Array(f);b<c;b+=6){var h=a.charCodeAt(b+0)+d[0],i=a.charCodeAt(b+1)+d[1],k=a.charCodeAt(b+2)+d[2],j=a.charCodeAt(b+3)+1>>1,l=a.charCodeAt(b+4)+1>>1,m=a.charCodeAt(b+5)+1>>1;f[g++]=e[0]*(h+j);f[g++]=e[1]*(i+l);f[g++]=e[2]*(k+m);f[g++]=e[0]*j;f[g++]=e[1]*l;f[g++]=e[2]*m}return f};
THREE.UTF8Loader.prototype.decompressMesh=function(a,b,c,d,e,f){for(var g=c.decodeScales.length,h=c.decodeOffsets,c=c.decodeScales,i=b.attribRange[1],k=b.attribRange[0],j=new Float32Array(g*i),l=0;l<g;l++){var m=k+i,o=c[l];o&&this.decompressAttribsInner_(a,k,m,j,l,g,h[l],o);k=m}i=3*b.indexRange[1];g=new Uint16Array(i);this.decompressIndices_(a,k,i,g,0);k=void 0;(i=b.bboxes)&&(k=this.decompressAABBs_(a,i,b.names.length,h,c));f(d,e,j,g,k,b)};
THREE.UTF8Loader.prototype.copyAttrib=function(a,b,c,d){for(var e=0;e<a;e++)c[e]=b[a*d+e]};THREE.UTF8Loader.prototype.decodeAttrib2=function(a,b,c,d,e,f,g,h,i,k){for(var j=0;5>j;j++){var l=a.charCodeAt(e+f*j+k);i[j]+=l>>1^-(l&1);h[b*k+j]=i[j];g[b*k+j]=d[j]*(i[j]+c[j])}};
THREE.UTF8Loader.prototype.accumulateNormal=function(a,b,c,d,e){var f=d[8*a],g=d[8*a+1],h=d[8*a+2],i=d[8*b],k=d[8*b+1],j=d[8*b+2],l=d[8*c],m=d[8*c+1],d=d[8*c+2],i=i-f,k=k-g,j=j-h,l=l-f,m=m-g,d=d-h,f=k*d-j*m,g=j*l-i*d,h=i*m-k*l;e[3*a]+=f;e[3*a+1]+=g;e[3*a+2]+=h;e[3*b]+=f;e[3*b+1]+=g;e[3*b+2]+=h;e[3*c]+=f;e[3*c+1]+=g;e[3*c+2]+=h};
THREE.UTF8Loader.prototype.decompressMesh2=function(a,b,c,d,e,f){for(var g=c.decodeScales.length,h=c.decodeOffsets,i=c.decodeScales,c=b.attribRange[0],k=b.attribRange[1],j=b.codeRange[0],l=3*b.codeRange[2],m=new Uint16Array(l),o=new Int32Array(3*k),p=new Uint16Array(g),q=new Uint16Array(g*k),t=new Float32Array(g*k),s=0,y=0,w=0;w<l;w+=3){var r=a.charCodeAt(j++),B=Math.min(w,96);if(r<B){var v=r%3,r=w-(r-v),u,x,F;switch(v){case 0:u=m[r+2];x=m[r+1];F=m[r+0];break;case 1:u=m[r+0];x=m[r+2];F=m[r+1];break;
case 2:u=m[r+1],x=m[r+0],F=m[r+2]}m[y++]=u;m[y++]=x;r=a.charCodeAt(j++);v=s-r;m[y++]=v;if(0===r){for(r=0;5>r;r++)B=a.charCodeAt(c+k*r+s),B=(B>>1^-(B&1))+q[g*u+r]+q[g*x+r]-q[g*F+r],p[r]=B,q[g*s+r]=B,t[g*s+r]=i[r]*(B+h[r]);s++}else this.copyAttrib(g,q,p,v);this.accumulateNormal(u,x,v,q,o)}else{v=s-(r-B);m[y++]=v;r===B?this.decodeAttrib2(a,g,h,i,c,k,t,q,p,s++):this.copyAttrib(g,q,p,v);r=a.charCodeAt(j++);B=s-r;m[y++]=B;0===r?this.decodeAttrib2(a,g,h,i,c,k,t,q,p,s++):this.copyAttrib(g,q,p,B);var r=a.charCodeAt(j++),
C=s-r;m[y++]=C;if(0===r){for(r=0;5>r;r++)p[r]=(q[g*v+r]+q[g*B+r])/2;this.decodeAttrib2(a,g,h,i,c,k,t,q,p,s++)}else this.copyAttrib(g,q,p,C);this.accumulateNormal(v,B,C,q,o)}}for(w=0;w<k;w++)h=o[3*w],u=o[3*w+1],x=o[3*w+2],F=511/Math.sqrt(h*h+u*u+x*x),i=a.charCodeAt(c+5*k+w),j=a.charCodeAt(c+6*k+w),l=a.charCodeAt(c+7*k+w),t[g*w+5]=F*h+(i>>1^-(i&1)),t[g*w+6]=F*u+(j>>1^-(j&1)),t[g*w+7]=F*x+(l>>1^-(l&1));f(d,e,t,m,void 0,b)};
THREE.UTF8Loader.prototype.downloadMesh=function(a,b,c,d,e){function f(a){for(;h<c.length;){var f=c[h],j=f.indexRange;if(j){j=j[0]+3*j[1];if(a.responseText.length<j)break;g.decompressMesh(a.responseText,f,d,b,h,e)}else{j=f.codeRange;j=j[0]+j[1];if(a.responseText.length<j)break;g.decompressMesh2(a.responseText,f,d,b,h,e)}++h}}var g=this,h=0;getHttpRequest(a,function(a,b){(200===a.status||0===a.status)&&f(a,b)},f)};
THREE.UTF8Loader.prototype.downloadMeshes=function(a,b,c,d){for(var e in b)this.downloadMesh(a+e,e,b[e],c,d)};
THREE.UTF8Loader.prototype.createMeshCallback=function(a,b,c){var d=0,e=0,f={},g={},h={},i=b.urls,k;for(k in i)f[k]=i[k].length,g[k]=0,e++,h[k]=new THREE.Object3D;var j=new THREE.Object3D,l=new THREE.MTLLoader.MaterialCreator(a,b.options);l.setMaterials(b.materials);l.preload();var m=new THREE.UTF8Loader.GeometryCreator,o=new THREE.UTF8Loader.BufferGeometryCreator;return function(a,i,k,s,y,w){i=(void 0!==b.options.useBuffers?b.options.useBuffers:1)?o.create(k,s):m.create(k,s);w=l.create(w.material);
w=new THREE.Mesh(i,w);h[a].add(w);g[a]++;g[a]===f[a]&&(d++,j.add(h[a]),d===e&&c(j))}};THREE.UTF8Loader.prototype.downloadModel=function(a,b,c,d){b=this.createMeshCallback(b,c,d);this.downloadMeshes(a,c.urls,c.decodeParams,b)};
THREE.UTF8Loader.prototype.downloadModelJson=function(a,b,c){getJsonRequest(a,function(d){d.decodeParams||(d.decodeParams=b&&b.decodeParams?b.decodeParams:DEFAULT_DECODE_PARAMS);d.options=b;var e=a.substr(0,a.lastIndexOf("/")+1),f=e;b&&b.geometryBase&&(e=b.geometryBase,"/"!==e.charAt(e.length-1)&&(e+="/"));b&&b.materialBase&&(f=b.materialBase,"/"!==f.charAt(f.length-1)&&(f+="/"));this.downloadModel(e,f,d,c)}.bind(this))};
function getHttpRequest(a,b,c){var d=new XMLHttpRequest;addListeners(d,{load:function(a){b(d,a)},progress:function(a){c(d,a)}});d.open("GET",a,!0);d.send(null)}function getJsonRequest(a,b){getHttpRequest(a,function(a){b(JSON.parse(a.responseText))},function(){})}function addListeners(a,b){for(var c in b)a.addEventListener(c,b[c])}THREE.VTKLoader=function(){THREE.EventTarget.call(this)};
THREE.VTKLoader.prototype={constructor:THREE.VTKLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){c.dispatchEvent({type:"load",content:c.parse(a.target.responseText)})},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b&&c.addEventListener("load",function(a){b(a.content)});d.open("GET",
a,!0);d.send(null)},parse:function(a){var b=new THREE.Geometry,c,d;for(c=/([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)/g;null!=(d=c.exec(a));){var e=parseFloat(d[1]),f=parseFloat(d[2]);d=parseFloat(d[3]);b.vertices.push(new THREE.Vector3(e,f,d))}for(c=/3[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=(d=c.exec(a));)e=parseInt(d[1]),f=parseInt(d[2]),d=parseInt(d[3]),b.faces.push(new THREE.Face3(e,f,d));for(c=/4[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=
(d=c.exec(a));){var e=parseInt(d[1]),f=parseInt(d[2]),g=parseInt(d[3]);d=parseInt(d[4]);b.faces.push(new THREE.Face4(e,f,g,d))}b.computeCentroids();b.computeFaceNormals();b.computeVertexNormals();b.computeBoundingSphere();return b}};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(a){if(!this._buffer||this._windowSize!==a)this._buffer=[];this._windowSize=a;this._streamPos=this._pos=0};
LZMA.OutWindow.prototype.flush=function(){var a=this._pos-this._streamPos;if(0!==a){for(;a--;)this._stream.writeByte(this._buffer[this._streamPos++]);this._pos>=this._windowSize&&(this._pos=0);this._streamPos=this._pos}};LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(a){this.releaseStream();this._stream=a};LZMA.OutWindow.prototype.init=function(a){a||(this._pos=this._streamPos=0)};
LZMA.OutWindow.prototype.copyBlock=function(a,b){var c=this._pos-a-1;for(0>c&&(c+=this._windowSize);b--;)c>=this._windowSize&&(c=0),this._buffer[this._pos++]=this._buffer[c++],this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.putByte=function(a){this._buffer[this._pos++]=a;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(a){a=this._pos-a-1;0>a&&(a+=this._windowSize);return this._buffer[a]};LZMA.RangeDecoder=function(){};
LZMA.RangeDecoder.prototype.setStream=function(a){this._stream=a};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};LZMA.RangeDecoder.prototype.init=function(){var a=5;this._code=0;for(this._range=-1;a--;)this._code=this._code<<8|this._stream.readByte()};
LZMA.RangeDecoder.prototype.decodeDirectBits=function(a){for(var b=0,c;a--;)this._range>>>=1,c=this._code-this._range>>>31,this._code-=this._range&c-1,b=b<<1|1-c,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return b};
LZMA.RangeDecoder.prototype.decodeBit=function(a,b){var c=a[b],d=(this._range>>>11)*c;if((this._code^2147483648)<(d^2147483648))return this._range=d,a[b]+=2048-c>>>5,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0;this._range-=d;this._code-=d;a[b]-=c>>>5;0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return 1};LZMA.initBitModels=function(a,b){for(;b--;)a[b]=1024};
LZMA.BitTreeDecoder=function(a){this._models=[];this._numBitLevels=a};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(a){for(var b=1,c=this._numBitLevels;c--;)b=b<<1|a.decodeBit(this._models,b);return b-(1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.reverseDecode=function(a){for(var b=1,c=0,d=0,e;d<this._numBitLevels;++d)e=a.decodeBit(this._models,b),b=b<<1|e,c|=e<<d;return c};
LZMA.reverseDecode2=function(a,b,c,d){for(var e=1,f=0,g=0,h;g<d;++g)h=c.decodeBit(a,b+e),e=e<<1|h,f|=h<<g;return f};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};LZMA.LenDecoder.prototype.create=function(a){for(;this._numPosStates<a;++this._numPosStates)this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3),this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)};
LZMA.LenDecoder.prototype.init=function(){var a=this._numPosStates;for(LZMA.initBitModels(this._choice,2);a--;)this._lowCoder[a].init(),this._midCoder[a].init();this._highCoder.init()};LZMA.LenDecoder.prototype.decode=function(a,b){return 0===a.decodeBit(this._choice,0)?this._lowCoder[b].decode(a):0===a.decodeBit(this._choice,1)?8+this._midCoder[b].decode(a):16+this._highCoder.decode(a)};LZMA.Decoder2=function(){this._decoders=[]};
LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(a){var b=1;do b=b<<1|a.decodeBit(this._decoders,b);while(256>b);return b&255};LZMA.Decoder2.prototype.decodeWithMatchByte=function(a,b){var c=1,d,e;do if(d=b>>7&1,b<<=1,e=a.decodeBit(this._decoders,(1+d<<8)+c),c=c<<1|e,d!==e){for(;256>c;)c=c<<1|a.decodeBit(this._decoders,c);break}while(256>c);return c&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(a,b){var c;if(!this._coders||!(this._numPrevBits===b&&this._numPosBits===a)){this._numPosBits=a;this._posMask=(1<<a)-1;this._numPrevBits=b;this._coders=[];for(c=1<<this._numPrevBits+this._numPosBits;c--;)this._coders[c]=new LZMA.Decoder2}};LZMA.LiteralDecoder.prototype.init=function(){for(var a=1<<this._numPrevBits+this._numPosBits;a--;)this._coders[a].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(a,b){return this._coders[((a&this._posMask)<<this._numPrevBits)+((b&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(a){if(0>a)return!1;this._dictionarySize!==a&&(this._dictionarySize=a,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096)));return!0};
LZMA.Decoder.prototype.setLcLpPb=function(a,b,c){var d=1<<c;if(8<a||4<b||4<c)return!1;this._literalDecoder.create(b,a);this._lenDecoder.create(d);this._repLenDecoder.create(d);this._posStateMask=d-1;return!0};
LZMA.Decoder.prototype.init=function(){var a=4;this._outWindow.init(!1);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();a--;)this._posSlotDecoder[a].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,k=0;this._rangeDecoder.setStream(a);this._outWindow.setStream(b);for(this.init();0>c||i<c;)if(a=i&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(d<<4)+a))k=this._literalDecoder.getDecoder(i++,k),k=7<=d?k.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(e)):k.decodeNormal(this._rangeDecoder),this._outWindow.putByte(k),d=4>d?0:d-(10>d?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,
d)){if(k=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,d)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(d<<4)+a)&&(d=7>d?9:11,k=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,d)?b=f:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,d)?b=g:(b=h,h=g),g=f),f=e,e=b),0===k)k=2+this._repLenDecoder.decode(this._rangeDecoder,a),d=7>d?8:11}else if(h=g,g=f,f=e,k=2+this._lenDecoder.decode(this._rangeDecoder,a),d=7>d?7:10,a=this._posSlotDecoder[5>=k?k-2:3].decode(this._rangeDecoder),
4<=a)if(b=(a>>1)-1,e=(2|a&1)<<b,14>a)e+=LZMA.reverseDecode2(this._posDecoders,e-a-1,this._rangeDecoder,b);else{if(e+=this._rangeDecoder.decodeDirectBits(b-4)<<4,e+=this._posAlignDecoder.reverseDecode(this._rangeDecoder),0>e){if(-1===e)break;return!1}}else e=a;if(e>=i||e>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(e,k);i+=k;k=this._outWindow.getByte(0)}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();return!0};
LZMA.Decoder.prototype.setDecoderProperties=function(a){var b,c;if(5>a.size)return!1;b=a.readByte();c=b%9;b=~~(b/9);if(!this.setLcLpPb(c,b%5,~~(b/5)))return!1;b=a.readByte();b|=a.readByte()<<8;b|=a.readByte()<<16;b+=16777216*a.readByte();return this.setDictionarySize(b)};LZMA.decompress=function(a,b,c,d){var e=new LZMA.Decoder;if(!e.setDecoderProperties(a))throw"Incorrect stream properties";if(!e.decode(b,c,d))throw"Error in data stream";return!0};var CTM=CTM||{};
CTM.CompressionMethod={RAW:5718354,MG1:3229517,MG2:3295053};CTM.Flags={NORMALS:1};CTM.File=function(a){this.load(a)};CTM.File.prototype.load=function(a){this.header=new CTM.FileHeader(a);this.body=new CTM.FileBody(this.header);this.getReader().read(a,this.body)};CTM.File.prototype.getReader=function(){var a;switch(this.header.compressionMethod){case CTM.CompressionMethod.RAW:a=new CTM.ReaderRAW;break;case CTM.CompressionMethod.MG1:a=new CTM.ReaderMG1;break;case CTM.CompressionMethod.MG2:a=new CTM.ReaderMG2}return a};
CTM.FileHeader=function(a){a.readInt32();this.fileFormat=a.readInt32();this.compressionMethod=a.readInt32();this.vertexCount=a.readInt32();this.triangleCount=a.readInt32();this.uvMapCount=a.readInt32();this.attrMapCount=a.readInt32();this.flags=a.readInt32();this.comment=a.readString()};CTM.FileHeader.prototype.hasNormals=function(){return this.flags&CTM.Flags.NORMALS};
CTM.FileBody=function(a){var b=3*a.triangleCount,c=3*a.vertexCount,d=a.hasNormals()?3*a.vertexCount:0,e=2*a.vertexCount,f=4*a.vertexCount,g=0,h=new ArrayBuffer(4*(b+c+d+e*a.uvMapCount+f*a.attrMapCount));this.indices=new Uint32Array(h,0,b);this.vertices=new Float32Array(h,4*b,c);a.hasNormals()&&(this.normals=new Float32Array(h,4*(b+c),d));if(a.uvMapCount){this.uvMaps=[];for(g=0;g<a.uvMapCount;++g)this.uvMaps[g]={uv:new Float32Array(h,4*(b+c+d+g*e),e)}}if(a.attrMapCount){this.attrMaps=[];for(g=0;g<
a.attrMapCount;++g)this.attrMaps[g]={attr:new Float32Array(h,4*(b+c+d+e*a.uvMapCount+g*f),f)}}};
CTM.FileMG2Header=function(a){a.readInt32();this.vertexPrecision=a.readFloat32();this.normalPrecision=a.readFloat32();this.lowerBoundx=a.readFloat32();this.lowerBoundy=a.readFloat32();this.lowerBoundz=a.readFloat32();this.higherBoundx=a.readFloat32();this.higherBoundy=a.readFloat32();this.higherBoundz=a.readFloat32();this.divx=a.readInt32();this.divy=a.readInt32();this.divz=a.readInt32();this.sizex=(this.higherBoundx-this.lowerBoundx)/this.divx;this.sizey=(this.higherBoundy-this.lowerBoundy)/this.divy;
this.sizez=(this.higherBoundz-this.lowerBoundz)/this.divz};CTM.ReaderRAW=function(){};CTM.ReaderRAW.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderRAW.prototype.readIndices=function(a,b){a.readInt32();a.readArrayInt32(b)};CTM.ReaderRAW.prototype.readVertices=function(a,b){a.readInt32();a.readArrayFloat32(b)};
CTM.ReaderRAW.prototype.readNormals=function(a,b){a.readInt32();a.readArrayFloat32(b)};CTM.ReaderRAW.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),b[c].filename=a.readString(),a.readArrayFloat32(b[c].uv)};CTM.ReaderRAW.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),a.readArrayFloat32(b[c].attr)};CTM.ReaderMG1=function(){};
CTM.ReaderMG1.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG1.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG1.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,1);LZMA.decompress(a,a,c,c.data.length)};CTM.ReaderMG1.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length)};
CTM.ReaderMG1.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG1.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG2=function(){};
CTM.ReaderMG2.prototype.read=function(a,b){this.MG2Header=new CTM.FileMG2Header(a);this.readVertices(a,b.vertices);this.readIndices(a,b.indices);b.normals&&this.readNormals(a,b);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG2.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);c=this.readGridIndices(a,b);CTM.restoreVertices(b,this.MG2Header,c,this.MG2Header.vertexPrecision)};
CTM.ReaderMG2.prototype.readGridIndices=function(a,b){a.readInt32();a.readInt32();var c=new Uint32Array(b.length/3),d=new CTM.InterleavedStream(c,1);LZMA.decompress(a,a,d,d.data.length);CTM.restoreGridIndices(c,c.length);return c};CTM.ReaderMG2.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG2.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b.normals,3);LZMA.decompress(a,a,c,c.data.length);c=CTM.calcSmoothNormals(b.indices,b.vertices);CTM.restoreNormals(b.normals,c,this.MG2Header.normalPrecision)};
CTM.ReaderMG2.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].uv,2,d)}};
CTM.ReaderMG2.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].attr,4,d)}};CTM.restoreIndices=function(a,b){var c=3;for(0<b&&(a[2]+=a[0]);c<b;c+=3)a[c]+=a[c-3],a[c+1]=a[c]===a[c-3]?a[c+1]+a[c-2]:a[c+1]+a[c],a[c+2]+=a[c]};CTM.restoreGridIndices=function(a,b){for(var c=1;c<b;++c)a[c]+=a[c-1]};
CTM.restoreVertices=function(a,b,c,d){for(var e,f,g,h,i,k=new Uint32Array(a.buffer,a.byteOffset,a.length),j=b.divx,l=j*b.divy,m=2147483647,o=0,p=0,q=0,t=c.length;p<t;q+=3)g=e=c[p++],i=~~(g/l),g-=~~(i*l),h=~~(g/j),g-=~~(h*j),f=k[q],e===m&&(f+=o),a[q]=b.lowerBoundx+g*b.sizex+d*f,a[q+1]=b.lowerBoundy+h*b.sizey+d*k[q+1],a[q+2]=b.lowerBoundz+i*b.sizez+d*k[q+2],m=e,o=f};
CTM.restoreNormals=function(a,b,c){for(var d,e,f,g,h,i,k=new Uint32Array(a.buffer,a.byteOffset,a.length),j=0,l=a.length;j<l;j+=3)d=k[j]*c,e=k[j+1],0===e?(a[j]=b[j]*d,a[j+1]=b[j+1]*d,a[j+2]=b[j+2]*d):(f=4>=e?1.5707963267948966*(k[j+2]-2):1.5707963267948966*(4*k[j+2]/e-2),e*=1.5707963267948966*c,g=d*Math.sin(e),h=g*Math.cos(f),f=g*Math.sin(f),d*=Math.cos(e),g=b[j+1],e=b[j]-b[j+2],i=Math.sqrt(2*g*g+e*e),1E-20<i&&(e/=i,g/=i),a[j]=b[j]*d+(b[j+1]*g-b[j+2]*e)*f-g*h,a[j+1]=b[j+1]*d-(b[j+2]+b[j])*g*f+e*h,
a[j+2]=b[j+2]*d+(b[j]*e+b[j+1]*g)*f+g*h)};CTM.restoreMap=function(a,b,c){for(var d,e,f=new Uint32Array(a.buffer,a.byteOffset,a.length),g=0,h,i=a.length;g<b;++g){d=0;for(h=g;h<i;h+=b)e=f[h],d+=e&1?-(e+1>>1):e>>1,a[h]=d*c}};
CTM.calcSmoothNormals=function(a,b){var c=new Float32Array(b.length),d,e,f,g,h,i,k,j,l,m,o,p;o=0;for(p=a.length;o<p;)d=3*a[o++],e=3*a[o++],f=3*a[o++],i=b[e]-b[d],j=b[f]-b[d],k=b[e+1]-b[d+1],l=b[f+1]-b[d+1],h=b[e+2]-b[d+2],m=b[f+2]-b[d+2],g=k*m-h*l,h=h*j-i*m,i=i*l-k*j,k=Math.sqrt(g*g+h*h+i*i),1E-10<k&&(g/=k,h/=k,i/=k),c[d]+=g,c[d+1]+=h,c[d+2]+=i,c[e]+=g,c[e+1]+=h,c[e+2]+=i,c[f]+=g,c[f+1]+=h,c[f+2]+=i;o=0;for(p=c.length;o<p;o+=3)k=Math.sqrt(c[o]*c[o]+c[o+1]*c[o+1]+c[o+2]*c[o+2]),1E-10<k&&(c[o]/=k,c[o+
1]/=k,c[o+2]/=k);return c};CTM.isLittleEndian=function(){var a=new ArrayBuffer(2),b=new Uint8Array(a),a=new Uint16Array(a);b[0]=1;return 1===a[0]}();CTM.InterleavedStream=function(a,b){this.data=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);this.offset=CTM.isLittleEndian?3:0;this.count=4*b;this.len=this.data.length};
CTM.InterleavedStream.prototype.writeByte=function(a){this.data[this.offset]=a;this.offset+=this.count;this.offset>=this.len&&(this.offset-=this.len-4,this.offset>=this.count&&(this.offset-=this.count+(CTM.isLittleEndian?1:-1)))};CTM.Stream=function(a){this.data=a;this.offset=0};CTM.Stream.prototype.TWO_POW_MINUS23=Math.pow(2,-23);CTM.Stream.prototype.TWO_POW_MINUS126=Math.pow(2,-126);CTM.Stream.prototype.readByte=function(){return this.data.charCodeAt(this.offset++)&255};
CTM.Stream.prototype.readInt32=function(){var a=this.readByte(),a=a|this.readByte()<<8,a=a|this.readByte()<<16;return a|this.readByte()<<24};CTM.Stream.prototype.readFloat32=function(){var a=this.readByte(),a=a+(this.readByte()<<8),b=this.readByte(),c=this.readByte(),a=a+((b&127)<<16),b=(c&127)<<1|(b&128)>>>7,c=c&128?-1:1;return 255===b?0!==a?NaN:Infinity*c:0<b?c*(1+a*this.TWO_POW_MINUS23)*Math.pow(2,b-127):0!==a?c*a*this.TWO_POW_MINUS126:0*c};
CTM.Stream.prototype.readString=function(){var a=this.readInt32();this.offset+=a;return this.data.substr(this.offset-a,a)};CTM.Stream.prototype.readArrayInt32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readInt32();return a};CTM.Stream.prototype.readArrayFloat32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readFloat32();return a};THREE.CTMLoader=function(a){THREE.Loader.call(this,a)};THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.CTMLoader.prototype.loadParts=function(a,b,c){var d=this,e=new XMLHttpRequest,f=c.basePath?c.basePath:this.extractUrlBase(a);e.onreadystatechange=function(){if(4===e.readyState&&(200===e.status||0===e.status)){for(var a=JSON.parse(e.responseText),h=[],i=[],k=0,j=0;j<a.materials.length;j++)h[j]=THREE.Loader.prototype.createMaterial(a.materials[j],f);d.load(f+a.data,function(c){k+=1;i.push(c);k===a.offsets.length&&b(i,h)},{useWorker:c.useWorker,useBuffers:c.useBuffers,offsets:a.offsets})}};e.open("GET",
a,!0);e.overrideMimeType&&e.overrideMimeType("text/plain; charset=x-user-defined");e.setRequestHeader("Content-Type","text/plain");e.send(null)};
THREE.CTMLoader.prototype.load=function(a,b,c){var d=this,e=void 0!==c.offsets?c.offsets:[0],f=void 0!==c.useBuffers?c.useBuffers:!0,g=new XMLHttpRequest;g.onreadystatechange=function(){if(4===g.readyState)if(200===g.status||0===g.status){var h=g.responseText;if(c.useWorker){var i=new Worker("js/loaders/ctm/CTMWorker.js");i.onmessage=function(a){for(var a=a.data,c=0;c<a.length;c++){var e=a[c];f?d.createModelBuffers(e,b):d.createModelClassic(e,b)}};i.postMessage({data:h,offsets:e})}else for(i=0;i<
e.length;i++){var k=new CTM.Stream(h);k.offset=e[i];k=new CTM.File(k);f?d.createModelBuffers(k,b):d.createModelClassic(k,b)}}else console.error("Couldn't load ["+a+"] ["+g.status+"]");else 3!==g.readyState&&2===g.readyState&&g.getResponseHeader("Content-Length")};g.overrideMimeType("text/plain; charset=x-user-defined");g.open("GET",a,!0);g.send(null)};
THREE.CTMLoader.prototype.createModelBuffers=function(a,b){var c=function(){this.materials=[];THREE.BufferGeometry.call(this);var b=a.body.indices,c=a.body.vertices,f=a.body.normals,g,h;void 0!==a.body.uvMaps&&0<a.body.uvMaps.length&&(g=a.body.uvMaps[0].uv);void 0!==a.body.attrMaps&&(0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name)&&(h=a.body.attrMaps[0].attr);var i=new Uint32Array(b.length),k=new Float32Array(c.length),j,l,m;f&&(j=new Float32Array(f.length));g&&(l=new Float32Array(g.length));
h&&(m=new Float32Array(h.length));for(var o={},p=0,q=function(a){if(o[a]===void 0){o[a]=p;var b=a*3,d=a*3+1,i=a*3+2,q=p*3,r=p*3+1,s=p*3+2;k[q]=c[b];k[r]=c[d];k[s]=c[i];if(f){j[q]=f[b];j[r]=f[d];j[s]=f[i]}if(g){l[p*2]=g[a*2];l[p*2+1]=g[a*2+1]}if(h){m[p*4]=h[a*4];m[p*4+1]=h[a*4+1];m[p*4+2]=h[a*4+2];m[p*4+3]=h[a*4+3]}p=p+1}},t,s,y,w=0;w<b.length;w+=3)t=b[w],s=b[w+1],y=b[w+2],q(t),q(s),q(y),i[w]=o[t],i[w+1]=o[s],i[w+2]=o[y];b=i;c=k;f&&(f=j);g&&(g=l);h&&(h=m);this.offsets=[];i=b;q=0;s=c.length;y=0;t=s;
for(w=0;w<i.length;){for(var r=0;3>r;++r){var B=i[w++];B<s&&(s=B);B>y&&(y=B)}if(65535<y-s){w-=3;for(s=q;s<w;++s)i[s]-=t;this.offsets.push({start:q,count:w-q,index:t});q=w;s=c.length;y=0}t=s}for(s=q;s<w;++s)i[s]-=t;this.offsets.push({start:q,count:w-q,index:t});b=new Uint16Array(b);w=this.attributes;w.index={itemSize:1,array:b,numItems:b.length};w.position={itemSize:3,array:c,numItems:c.length};void 0!==f&&(w.normal={itemSize:3,array:f,numItems:f.length});void 0!==g&&(w.uv={itemSize:2,array:g,numItems:g.length});
void 0!==h&&(w.color={itemSize:4,array:h,numItems:h.length})};c.prototype=Object.create(THREE.BufferGeometry.prototype);c=new c;void 0===c.attributes.normal&&c.computeVertexNormals();b(c)};
THREE.CTMLoader.prototype.createModelClassic=function(a,b){var c=function(){this.materials=[];THREE.Geometry.call(this);var b=[],c=[],f=[],g=a.body.vertices,h,i,k,j,l=g.length;for(j=0;j<l;j+=3)h=g[j],i=g[j+1],k=g[j+2],this.vertices.push(new THREE.Vector3(h,i,k));if(void 0!==a.body.normals){g=a.body.normals;l=g.length;for(j=0;j<l;j+=3)h=g[j],i=g[j+1],k=g[j+2],b.push(h,i,k)}if(void 0!==a.body.uvMaps&&0<a.body.uvMaps.length){g=a.body.uvMaps[0].uv;j=g.length;for(k=0;k<j;k+=2)h=g[k],i=g[k+1],c.push(h,
i)}if(void 0!==a.body.attrMaps&&0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name){g=a.body.attrMaps[0].attr;l=g.length;for(j=0;j<l;j+=4){h=g[j];i=g[j+1];k=g[j+2];var m=new THREE.Color;m.setRGB(h,i,k);f.push(m)}}g=0<b.length?!0:!1;h=0<c.length?!0:!1;i=0<f.length?!0:!1;k=a.body.indices;var o,p,q,t,s,y,w,l=k.length;for(j=0;j<l;j+=3){o=k[j];p=k[j+1];m=k[j+2];if(g){q=o;y=p;w=m;var r=b[3*p],B=b[3*p+1],v=b[3*p+2];s=b[3*m];var u=b[3*m+1],x=b[3*m+2];t=new THREE.Vector3(b[3*o],b[3*o+1],b[3*o+2]);
r=new THREE.Vector3(r,B,v);s=new THREE.Vector3(s,u,x);q=new THREE.Face3(q,y,w,[t,r,s],null,0)}else q=new THREE.Face3(o,p,m,null,null,0);this.faces.push(q);i&&(q.vertexColors[0]=f[o],q.vertexColors[1]=f[p],q.vertexColors[2]=f[m]);h&&(q=c[2*o],o=c[2*o+1],t=c[2*p],s=c[2*p+1],y=c[2*m],w=c[2*m+1],m=this.faceVertexUvs[0],p=t,t=s,s=[],s.push(new THREE.UV(q,o)),s.push(new THREE.UV(p,t)),s.push(new THREE.UV(y,w)),m.push(s))}this.computeCentroids();this.computeFaceNormals()};c.prototype=Object.create(THREE.Geometry.prototype);
b(new c)};
THREE.EffectComposer=function(a,b){this.renderer=a;this.renderTarget1=b;if(void 0===this.renderTarget1){var c=window.innerWidth||1,d=window.innerHeight||1;this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};this.renderTarget1=new THREE.WebGLRenderTarget(c,d,this.renderTargetParameters)}this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===
THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=!1,c,d,e=this.passes.length;for(d=0;d<e;d++)if(c=this.passes[d],c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var f=this.renderer.context;f.stencilFunc(f.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,
this.writeBuffer,this.readBuffer,a);f.stencilFunc(f.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1)}},reset:function(a){this.renderTarget1=a;void 0===this.renderTarget1&&(this.renderTarget1=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters));this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2}};
THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);
THREE.BloomPass=function(a,b,c,d){var a=void 0!==a?a:1,b=void 0!==b?b:25,c=void 0!==c?c:4,d=void 0!==d?d:256,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=
new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);this.materialConvolution=
new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:b.toFixed(1),KERNEL_SIZE_INT:b.toFixed(0)}});this.enabled=!0;this.clear=this.needsSwap=!1};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.value=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,!0);THREE.EffectComposer.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);
THREE.DotScreenPass=function(a,b,c){void 0===THREE.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var d=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(d.uniforms);void 0!==a&&this.uniforms.center.value.copy(a);void 0!==b&&(this.uniforms.angle.value=b);void 0!==c&&(this.uniforms.scale.value=c);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader});this.enabled=!0;this.renderToScreen=
!1;this.needsSwap=!0};THREE.DotScreenPass.prototype={render:function(a,b,c){this.uniforms.tDiffuse.value=c;this.uniforms.tSize.value.set(c.width,c.height);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};
THREE.FilmPass=function(a,b,c,d){void 0===THREE.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var e=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader});void 0!==d&&(this.uniforms.grayscale.value=d);void 0!==a&&(this.uniforms.nIntensity.value=a);void 0!==b&&(this.uniforms.sIntensity.value=b);void 0!==c&&(this.uniforms.sCount.value=c);
this.enabled=!0;this.renderToScreen=!1;this.needsSwap=!0};THREE.FilmPass.prototype={render:function(a,b,c,d){this.uniforms.tDiffuse.value=c;this.uniforms.time.value+=d;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1);d.depthMask(!1);var e,f;this.inverse?(e=0,f=1):(e=1,f=0);d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,e,4294967295);d.clearStencil(f);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(!0,!0,!0,!0);d.depthMask(!0);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};
THREE.ClearMaskPass=function(){this.enabled=!0};THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=void 0!==e?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha));a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};
THREE.SavePass=function(a){void 0===THREE.CopyShader&&console.error("THREE.SavePass relies on THREE.CopyShader");var b=THREE.CopyShader;this.textureID="tDiffuse";this.uniforms=THREE.UniformsUtils.clone(b.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});this.renderTarget=a;void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1},
this.renderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters));this.enabled=!0;this.clear=this.needsSwap=!1};THREE.SavePass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}};
THREE.ShaderPass=function(a,b){this.textureID=void 0!==b?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=!1;this.needsSwap=this.enabled=!0;this.clear=!1};
THREE.ShaderPass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};
THREE.TexturePass=function(a,b){void 0===THREE.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var c=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);this.uniforms.opacity.value=void 0!==b?b:1;this.uniforms.tDiffuse.value=a;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader});this.enabled=!0;this.needsSwap=!1};
THREE.TexturePass.prototype={render:function(a,b,c){THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c)}};THREE.CSS3DObject=function(a){THREE.Object3D.call(this);this.element=a;this.element.style.position="absolute";this.element.style.WebkitTransformStyle="preserve-3d";this.element.style.MozTransformStyle="preserve-3d";this.element.style.oTransformStyle="preserve-3d";this.element.style.transformStyle="preserve-3d"};
THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype);THREE.CSS3DSprite=function(a){THREE.CSS3DObject.call(this,a)};THREE.CSS3DSprite.prototype=Object.create(THREE.CSS3DObject.prototype);
THREE.CSS3DRenderer=function(){console.log("THREE.CSS3DRenderer",THREE.REVISION);var a,b,c,d,e=new THREE.Projector,f=new THREE.Matrix4;this.domElement=document.createElement("div");this.domElement.style.overflow="hidden";this.domElement.style.WebkitTransformStyle="preserve-3d";this.domElement.style.WebkitPerspectiveOrigin="50% 50%";this.domElement.style.MozTransformStyle="preserve-3d";this.domElement.style.MozPerspectiveOrigin="50% 50%";this.domElement.style.oTransformStyle="preserve-3d";this.domElement.style.oPerspectiveOrigin=
"50% 50%";this.domElement.style.transformStyle="preserve-3d";this.domElement.style.perspectiveOrigin="50% 50%";this.cameraElement=document.createElement("div");this.cameraElement.style.WebkitTransformStyle="preserve-3d";this.cameraElement.style.MozTransformStyle="preserve-3d";this.cameraElement.style.oTransformStyle="preserve-3d";this.cameraElement.style.transformStyle="preserve-3d";this.domElement.appendChild(this.cameraElement);this.setSize=function(e,f){a=e;b=f;c=a/2;d=b/2;this.domElement.style.width=
e+"px";this.domElement.style.height=f+"px";this.cameraElement.style.width=e+"px";this.cameraElement.style.height=f+"px"};var g=function(a){return 1E-6>Math.abs(a)?0:a},h=function(a){a=a.elements;return"translate3d(-50%,-50%,0) matrix3d("+g(a[0])+","+g(a[1])+","+g(a[2])+","+g(a[3])+","+g(a[4])+","+g(a[5])+","+g(a[6])+","+g(a[7])+","+g(a[8])+","+g(a[9])+","+g(a[10])+","+g(a[11])+","+g(a[12])+","+g(a[13])+","+g(a[14])+","+g(a[15])+") scale3d(1,-1,1)"};this.render=function(a,k){var j=0.5/Math.tan(k.fov*
Math.PI/360)*b;this.domElement.style.WebkitPerspective=j+"px";this.domElement.style.MozPerspective=j+"px";this.domElement.style.oPerspective=j+"px";this.domElement.style.perspective=j+"px";var j="translate3d(0,0,"+j+"px)",l;l=k.matrixWorldInverse.elements;l="matrix3d("+g(l[0])+","+g(-l[1])+","+g(l[2])+","+g(l[3])+","+g(l[4])+","+g(-l[5])+","+g(l[6])+","+g(l[7])+","+g(l[8])+","+g(-l[9])+","+g(l[10])+","+g(l[11])+","+g(l[12])+","+g(-l[13])+","+g(l[14])+","+g(l[15])+")";var m=j+l+" translate3d("+c+"px,"+
d+"px, 0)";this.cameraElement.style.WebkitTransform=m;this.cameraElement.style.MozTransform=m;this.cameraElement.style.oTransform=m;this.cameraElement.style.transform=m;j=e.projectScene(a,k,!1).objects;l=0;for(var o=j.length;l<o;l++)if(m=j[l].object,m instanceof THREE.CSS3DObject){var p=m.element;m instanceof THREE.CSS3DSprite?(f.copy(k.matrixWorldInverse),f.transpose(),f.extractPosition(m.matrixWorld),f.elements[3]=0,f.elements[7]=0,f.elements[11]=0,f.elements[15]=1,m=h(f)):m=h(m.matrixWorld);p.style.WebkitTransform=
m;p.style.MozTransform=m;p.style.oTransform=m;p.style.transform=m;p.parentNode!==this.cameraElement&&this.cameraElement.appendChild(p)}}};
THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector;a:{for(var i=["transform","MozTransform","WebkitTransform","msTransform","OTransform"],k=document.documentElement,j=0;j<i.length;j++)if("string"===typeof k.style[i[j]]){g=i[j];break a}g=null}this.domElement=document.createElement("div");this.setSize=function(a,b){c=a;d=b;e=c/2;f=d/2};this.render=function(c,d){var i,j,k,t,s,y;a=h.projectScene(c,d);b=a.elements;i=0;for(j=b.length;i<j;i++)k=
b[i],k instanceof THREE.RenderableParticle&&k.material instanceof THREE.ParticleDOMMaterial&&(t=k.material.domElement,s=k.x*e+e-(t.offsetWidth>>1),y=k.y*f+f-(t.offsetHeight>>1),t.style.left=s+"px",t.style.top=y+"px",t.style.zIndex=Math.abs(Math.floor((1-k.z)*d.far/d.near)),g&&(t.style[g]="scale("+k.scale.x*e+","+k.scale.y*f+")"))}};
THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,h,i,j;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(i=g.matrixWorld.getPosition().normalize(),j=c.dot(i),0>=j||(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)):g instanceof THREE.PointLight&&(i=g.matrixWorld.getPosition(),j=c.dot(E.sub(i,b).normalize()),0>=j||(j*=0==g.distance?1:1-Math.min(b.distanceTo(i)/g.distance,1),0!=j&&(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)))}function b(a){null==M[a]&&
(M[a]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==O&&M[a].setAttribute("shape-rendering","crispEdges"));return M[a]}function c(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}console.log("THREE.SVGRenderer",THREE.REVISION);var d=this,e,f,g,h=new THREE.Projector,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),k,j,l,m,o,p,q,t,s=new THREE.Rectangle,y=new THREE.Rectangle,w=!1,r=new THREE.Color,B=new THREE.Color,v=new THREE.Color,u=new THREE.Color,x=new THREE.Color,F=new THREE.Color,
C,E=new THREE.Vector3,M=[],D=[],K,I,N,O=1;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setQuality=function(a){switch(a){case "high":O=1;break;case "low":O=0}};this.setSize=function(a,b){k=a;j=b;l=k/2;m=j/2;i.setAttribute("viewBox",-l+" "+-m+" "+k+" "+j);i.setAttribute("width",k);i.setAttribute("height",j);s.set(-l,-m,l,m)};this.clear=function(){for(;0<i.childNodes.length;)i.removeChild(i.childNodes[0])};this.render=function(j,
k){if(!1===k instanceof THREE.Camera)console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera.");else{var E,M,G,J;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;e=h.projectScene(j,k,this.sortObjects,this.sortElements);f=e.elements;g=e.lights;N=I=0;if(w=0<g.length){u.setRGB(0,0,0);x.setRGB(0,0,0);F.setRGB(0,0,0);E=0;for(M=g.length;E<M;E++)J=g[E],G=J.color,J instanceof THREE.AmbientLight?(u.r+=G.r,u.g+=G.g,u.b+=G.b):J instanceof THREE.DirectionalLight?
(x.r+=G.r,x.g+=G.g,x.b+=G.b):J instanceof THREE.PointLight&&(F.r+=G.r,F.g+=G.g,F.b+=G.b)}E=0;for(M=f.length;E<M;E++)if(G=f[E],J=G.material,!(void 0===J||!1===J.visible))if(y.empty(),G instanceof THREE.RenderableParticle)o=G,o.x*=l,o.y*=-m;else if(G instanceof THREE.RenderableLine){if(o=G.v1,p=G.v2,o.positionScreen.x*=l,o.positionScreen.y*=-m,p.positionScreen.x*=l,p.positionScreen.y*=-m,y.addPoint(o.positionScreen.x,o.positionScreen.y),y.addPoint(p.positionScreen.x,p.positionScreen.y),s.intersects(y)){G=
o;var S=p,ca=N++;null==D[ca]&&(D[ca]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==O&&D[ca].setAttribute("shape-rendering","crispEdges"));K=D[ca];K.setAttribute("x1",G.positionScreen.x);K.setAttribute("y1",G.positionScreen.y);K.setAttribute("x2",S.positionScreen.x);K.setAttribute("y2",S.positionScreen.y);J instanceof THREE.LineBasicMaterial&&(K.setAttribute("style","fill: none; stroke: "+J.color.getContextStyle()+"; stroke-width: "+J.linewidth+"; stroke-opacity: "+J.opacity+"; stroke-linecap: "+
J.linecap+"; stroke-linejoin: "+J.linejoin),i.appendChild(K))}}else if(G instanceof THREE.RenderableFace3){if(o=G.v1,p=G.v2,q=G.v3,o.positionScreen.x*=l,o.positionScreen.y*=-m,p.positionScreen.x*=l,p.positionScreen.y*=-m,q.positionScreen.x*=l,q.positionScreen.y*=-m,y.addPoint(o.positionScreen.x,o.positionScreen.y),y.addPoint(p.positionScreen.x,p.positionScreen.y),y.addPoint(q.positionScreen.x,q.positionScreen.y),s.intersects(y)){var S=o,ca=p,la=q;d.info.render.vertices+=3;d.info.render.faces++;K=
b(I++);K.setAttribute("d","M "+S.positionScreen.x+" "+S.positionScreen.y+" L "+ca.positionScreen.x+" "+ca.positionScreen.y+" L "+la.positionScreen.x+","+la.positionScreen.y+"z");J instanceof THREE.MeshBasicMaterial?(r.copy(J.color),J.vertexColors===THREE.FaceColors&&(r.r*=G.color.r,r.g*=G.color.g,r.b*=G.color.b)):J instanceof THREE.MeshLambertMaterial?(B.copy(J.color),v.copy(J.emissive),J.vertexColors===THREE.FaceColors&&(B.r*=G.color.r,B.g*=G.color.g,B.b*=G.color.b),w)?(r.r=u.r,r.g=u.g,r.b=u.b,a(g,
G.centroidWorld,G.normalWorld,r),r.r=r.r*B.r+v.r,r.g=r.g*B.g+v.g,r.b=r.b*B.b+v.b):r.copy(B):J instanceof THREE.MeshDepthMaterial?(C=1-J.__2near/(J.__farPlusNear-G.z*J.__farMinusNear),r.setRGB(C,C,C)):J instanceof THREE.MeshNormalMaterial&&r.setRGB(c(G.normalWorld.x),c(G.normalWorld.y),c(G.normalWorld.z));J.wireframe?K.setAttribute("style","fill: none; stroke: "+r.getContextStyle()+"; stroke-width: "+J.wireframeLinewidth+"; stroke-opacity: "+J.opacity+"; stroke-linecap: "+J.wireframeLinecap+"; stroke-linejoin: "+
J.wireframeLinejoin):K.setAttribute("style","fill: "+r.getContextStyle()+"; fill-opacity: "+J.opacity);i.appendChild(K)}}else if(G instanceof THREE.RenderableFace4&&(o=G.v1,p=G.v2,q=G.v3,t=G.v4,o.positionScreen.x*=l,o.positionScreen.y*=-m,p.positionScreen.x*=l,p.positionScreen.y*=-m,q.positionScreen.x*=l,q.positionScreen.y*=-m,t.positionScreen.x*=l,t.positionScreen.y*=-m,y.addPoint(o.positionScreen.x,o.positionScreen.y),y.addPoint(p.positionScreen.x,p.positionScreen.y),y.addPoint(q.positionScreen.x,
q.positionScreen.y),y.addPoint(t.positionScreen.x,t.positionScreen.y),s.intersects(y))){var S=o,ca=p,la=q,L=t;d.info.render.vertices+=4;d.info.render.faces++;K=b(I++);K.setAttribute("d","M "+S.positionScreen.x+" "+S.positionScreen.y+" L "+ca.positionScreen.x+" "+ca.positionScreen.y+" L "+la.positionScreen.x+","+la.positionScreen.y+" L "+L.positionScreen.x+","+L.positionScreen.y+"z");J instanceof THREE.MeshBasicMaterial?(r.copy(J.color),J.vertexColors===THREE.FaceColors&&(r.r*=G.color.r,r.g*=G.color.g,
r.b*=G.color.b)):J instanceof THREE.MeshLambertMaterial?(B.copy(J.color),v.copy(J.emissive),J.vertexColors===THREE.FaceColors&&(B.r*=G.color.r,B.g*=G.color.g,B.b*=G.color.b),w)?(r.r=u.r,r.g=u.g,r.b=u.b,a(g,G.centroidWorld,G.normalWorld,r),r.r=r.r*B.r+v.r,r.g=r.g*B.g+v.g,r.b=r.b*B.b+v.b):r.copy(B):J instanceof THREE.MeshDepthMaterial?(C=1-J.__2near/(J.__farPlusNear-G.z*J.__farMinusNear),r.setRGB(C,C,C)):J instanceof THREE.MeshNormalMaterial&&r.setRGB(c(G.normalWorld.x),c(G.normalWorld.y),c(G.normalWorld.z));
J.wireframe?K.setAttribute("style","fill: none; stroke: "+r.getContextStyle()+"; stroke-width: "+J.wireframeLinewidth+"; stroke-opacity: "+J.opacity+"; stroke-linecap: "+J.wireframeLinecap+"; stroke-linejoin: "+J.wireframeLinejoin):K.setAttribute("style","fill: "+r.getContextStyle()+"; fill-opacity: "+J.opacity);i.appendChild(K)}}}};THREE.BasicShader={uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"};
THREE.BleachBypassShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base = texture2D( tDiffuse, vUv );\nvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\nfloat lum = dot( lumCoeff, base.rgb );\nvec3 blend = vec3( lum );\nfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 = 2.0 * base.rgb * blend;\nvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor = mix( result1, result2, L );\nfloat A2 = opacity * base.a;\nvec3 mixRGB = A2 * newColor.rgb;\nmixRGB += ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor = vec4( mixRGB, base.a );\n}"};
THREE.BlendShader={uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform float mixRatio;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel1 = texture2D( tDiffuse1, vUv );\nvec4 texel2 = texture2D( tDiffuse2, vUv );\ngl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n}"};
THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:0.025},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float focus;\nuniform float aspect;\nvoid main() {\nvec2 aspectcorrect = vec2( 1.0, aspect );\nvec4 depth1 = texture2D( tDepth, vUv );\nfloat factor = depth1.x - focus;\nvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\nvec2 dofblur9 = dofblur * 0.9;\nvec2 dofblur7 = dofblur * 0.7;\nvec2 dofblur4 = dofblur * 0.4;\nvec4 col = vec4( 0.0 );\ncol += texture2D( tColor, vUv.xy );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\ngl_FragColor = col / 41.0;\ngl_FragColor.a = 1.0;\n}"};
THREE.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb += brightness;\nif (contrast > 0.0) {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};
THREE.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 powRGB;\nuniform vec3 mulRGB;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );\n}"};
THREE.ColorifyShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v * color, texel.w );\n}"};
THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE_INT ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}",
buildKernel:function(a){var b,c,d,e,f=2*Math.ceil(3*a)+1;25<f&&(f=25);e=0.5*(f-1);c=Array(f);for(b=d=0;b<f;++b)c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a)),d+=c[b];for(b=0;b<f;++b)c[b]/=d;return c}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};
THREE.DOFMipMapShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float focus;\nuniform float maxblur;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\nvoid main() {\nvec4 depth = texture2D( tDepth, vUv );\nfloat factor = depth.x - focus;\nvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\ngl_FragColor = col;\ngl_FragColor.a = 1.0;\n}"};
THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s = sin( angle ), c = cos( angle );\nvec2 tex = vUv * tSize - center;\nvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nfloat average = ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"};
THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"};
THREE.FocusShader={uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:0.94},waveFactor:{type:"f",value:0.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd = color = org = texture2D( tDiffuse, uv );\nvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist = dot( vin, vin ) * 2.0;\nf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\ncolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"};
THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\nvarying vec2 vUv;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\nvec3 rgbM  = rgbaM.xyz;\nfloat opacity  = rgbaM.w;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec3 rgbA = 0.5 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );\nfloat lumaB = dot( rgbB, luma );\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = vec4( rgbA, opacity );\n} else {\ngl_FragColor = vec4( rgbB, opacity );\n}\n}"};
THREE.HorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat hh = h * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.HueSaturationShader={uniforms:{tDiffuse:{type:"t",value:null},hue:{type:"f",value:0},saturation:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float hue;\nuniform float saturation;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\nfloat angle = hue * 3.14159265;\nfloat s = sin(angle), c = cos(angle);\nvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\nfloat len = length(gl_FragColor.rgb);\ngl_FragColor.rgb = vec3(\ndot(gl_FragColor.rgb, weights.xyz),\ndot(gl_FragColor.rgb, weights.zxy),\ndot(gl_FragColor.rgb, weights.yzx)\n);\nfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nif (saturation > 0.0) {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n} else {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n}\n}"};
THREE.LuminosityShader={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"};
THREE.NormalMapShader={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:0.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"};
THREE.SepiaShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float amount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nvec3 c = color.rgb;\ncolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\ncolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\ncolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\ngl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n}"};
THREE.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:0.3},lumInfluence:{type:"f",value:0.9}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"uniform float cameraNear;\nuniform float cameraFar;\nuniform float fogNear;\nuniform float fogFar;\nuniform bool fogEnabled;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nfloat width = size.x;\nfloat height = size.y;\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\nconst int samples = 8;\nconst float radius = 5.0;\nconst bool useNoise = false;\nconst float noiseAmount = 0.0003;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\nconst vec3 onlyAOColor = vec3( 1.0, 0.7, 0.5 );\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( width / 2.0 ) );\nfloat gg = fract( coord.t * ( height / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat doFog() {\nfloat zdepth = unpackDepth( texture2D( tDepth, vUv ) );\nfloat depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );\nreturn smoothstep( fogNear, fogFar, depth );\n}\nfloat readDepth( const in vec2 coord ) {\nreturn cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 2.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nfloat dd = radius - depth * radius;\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + dd * vv;\nvec2 coord2 = vUv - dd * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat pw;\nfloat ph;\nfloat ao;\nfloat dz = 1.0 / float( samples );\nfloat z = 1.0 - dz / 2.0;\nfloat l = 0.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\npw = cos( l ) * r;\nph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nif ( fogEnabled ) {\nao = mix( ao, 1.0, doFog() );\n}\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 1.0 );\n}"};
THREE.TriangleBlurShader={uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define ITERATIONS 10.0\nuniform sampler2D texture;\nuniform vec2 delta;\nvarying vec2 vUv;\nfloat random( vec3 scale, float seed ) {\nreturn fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\n}\nvoid main() {\nvec4 color = vec4( 0.0 );\nfloat total = 0.0;\nfloat offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\nfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\nfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\nfloat weight = 1.0 - abs( percent );\ncolor += texture2D( texture, vUv + delta * percent ) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}"};
THREE.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvoid main() {\nfloat depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\ngl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\n}"};
THREE.VerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat vv = v * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float offset;\nuniform float darkness;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\ngl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n}"};
THREE.AudioObject=function(a,b,c,d){THREE.Object3D.call(this);void 0===c&&(c=1);void 0===b&&(b=1);void 0===d&&(d=!0);if(!this.context)try{this.context=new webkitAudioContext}catch(e){return console.warn("THREE.AudioObject: webkitAudioContext not found"),this}this.directionalSource=!1;this.listener=this.context.listener;this.panner=this.context.createPanner();this.source=this.context.createBufferSource();this.masterGainNode=this.context.createGainNode();this.dryGainNode=this.context.createGainNode();
this.masterGainNode.gain.value=b;this.dryGainNode.gain.value=3;this.source.connect(this.panner);this.panner.connect(this.dryGainNode);this.dryGainNode.connect(this.masterGainNode);this.masterGainNode.connect(this.context.destination);this.source.playbackRate.value=c;this.source.loop=d;var f=new XMLHttpRequest;f.open("GET",a,!0);f.responseType="arraybuffer";f.onload=function(){t.source.buffer=t.context.createBuffer(f.response,!0);t.source.noteOn(0)};f.send();var g=new THREE.Vector3,h=new THREE.Vector3,
i=new THREE.Vector3,k=new THREE.Vector3,j=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,t=this;this.setVolume=function(a){this.masterGainNode.gain.value=a};this.update=function(a){i.copy(g);k.copy(h);g.copy(this.matrixWorld.getPosition());h.copy(a.matrixWorld.getPosition());j.sub(g,i);l.sub(h,k);q.copy(a.up);o.set(0,0,-1);a.matrixWorld.rotateAxis(o);o.normalize();this.listener.setPosition(h.x,h.y,h.z);this.listener.setVelocity(l.x,
l.y,l.z);this.listener.setOrientation(o.x,o.y,o.z,q.x,q.y,q.z);this.panner.setPosition(g.x,g.y,g.z);this.panner.setVelocity(j.x,j.y,j.z);this.directionalSource&&(m.set(0,0,-1),this.matrixWorld.rotateAxis(m),m.normalize(),p.copy(this.up),this.panner.setOrientation(m.x,m.y,m.z,p.x,p.y,p.z))}};THREE.AudioObject.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioObject.prototype.context=null;THREE.AudioObject.prototype.type=null;
THREE.Car=function(){function a(){if(b.bodyGeometry&&b.wheelGeometry){if(b.autoWheelGeometry){b.wheelGeometry.computeBoundingBox();var a=b.wheelGeometry.boundingBox;b.wheelOffset.add(a.min,a.max);b.wheelOffset.multiplyScalar(0.5);b.wheelDiameter=a.max.y-a.min.y;THREE.GeometryUtils.center(b.wheelGeometry)}var a=b.modelScale,d=new THREE.Vector3,e=new THREE.MeshFaceMaterial(b.bodyMaterials),f=new THREE.MeshFaceMaterial(b.wheelMaterials);b.bodyMesh=new THREE.Mesh(b.bodyGeometry,e);b.bodyMesh.scale.set(a,
a,a);b.root.add(b.bodyMesh);d.multiply(b.wheelOffset,new THREE.Vector3(a,a,a));b.frontLeftWheelRoot.position.addSelf(d);b.frontLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.frontLeftWheelMesh.scale.set(a,a,a);b.frontLeftWheelRoot.add(b.frontLeftWheelMesh);b.root.add(b.frontLeftWheelRoot);d.multiply(b.wheelOffset,new THREE.Vector3(-a,a,a));b.frontRightWheelRoot.position.addSelf(d);b.frontRightWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.frontRightWheelMesh.scale.set(a,a,a);b.frontRightWheelMesh.rotation.z=
Math.PI;b.frontRightWheelRoot.add(b.frontRightWheelMesh);b.root.add(b.frontRightWheelRoot);d.multiply(b.wheelOffset,new THREE.Vector3(a,a,-a));d.z-=b.backWheelOffset;b.backLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.backLeftWheelMesh.position.addSelf(d);b.backLeftWheelMesh.scale.set(a,a,a);b.root.add(b.backLeftWheelMesh);d.multiply(b.wheelOffset,new THREE.Vector3(-a,a,-a));d.z-=b.backWheelOffset;b.backRightWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.backRightWheelMesh.position.addSelf(d);
b.backRightWheelMesh.scale.set(a,a,a);b.backRightWheelMesh.rotation.z=Math.PI;b.root.add(b.backRightWheelMesh);b.meshes=[b.bodyMesh,b.frontLeftWheelMesh,b.frontRightWheelMesh,b.backLeftWheelMesh,b.backRightWheelMesh];b.loaded=!0;b.callback&&b.callback(b)}}var b=this;this.modelScale=1;this.backWheelOffset=2;this.autoWheelGeometry=!0;this.wheelOffset=new THREE.Vector3;this.wheelDiameter=1;this.MAX_SPEED=2200;this.MAX_REVERSE_SPEED=-1500;this.MAX_WHEEL_ROTATION=0.6;this.FRONT_ACCELERATION=1250;this.BACK_ACCELERATION=
1500;this.WHEEL_ANGULAR_ACCELERATION=1.5;this.FRONT_DECCELERATION=750;this.WHEEL_ANGULAR_DECCELERATION=1;this.STEERING_RADIUS_RATIO=0.0023;this.MAX_TILT_SIDES=0.05;this.MAX_TILT_FRONTBACK=0.015;this.carOrientation=this.wheelOrientation=this.acceleration=this.speed=0;this.root=new THREE.Object3D;this.frontLeftWheelRoot=new THREE.Object3D;this.frontRightWheelRoot=new THREE.Object3D;this.wheelMaterials=this.bodyMaterials=this.wheelGeometry=this.bodyGeometry=this.backRightWheelMesh=this.backLeftWheelMesh=
this.frontRightWheelMesh=this.frontLeftWheelMesh=this.bodyMesh=null;this.loaded=!1;this.meshes=[];this.enableShadows=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].castShadow=a,this.meshes[b].receiveShadow=a};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].visible=a,this.meshes[b].visible=a};this.loadPartsJSON=function(c,d){var e=new THREE.JSONLoader;e.load(c,function(c,d){b.bodyGeometry=c;b.bodyMaterials=d;a()});e.load(d,function(c,d){b.wheelGeometry=
c;b.wheelMaterials=d;a()})};this.loadPartsBinary=function(c,d){var e=new THREE.BinaryLoader;e.load(c,function(c,d){b.bodyGeometry=c;b.bodyMaterials=d;a()});e.load(d,function(c,d){b.wheelGeometry=c;b.wheelMaterials=d;a()})};this.updateCarModel=function(a,b){b.moveForward&&(this.speed=THREE.Math.clamp(this.speed+a*this.FRONT_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration+a,-1,1));b.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-a*this.BACK_ACCELERATION,
this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration-a,-1,1));b.moveLeft&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION));b.moveRight&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION));if(!b.moveForward&&!b.moveBackward)if(0<this.speed){var e=1===this.speed/this.MAX_SPEED?
1:-Math.pow(2,-10*(this.speed/this.MAX_SPEED))+1;this.speed=THREE.Math.clamp(this.speed-e*a*this.FRONT_DECCELERATION,0,this.MAX_SPEED);this.acceleration=THREE.Math.clamp(this.acceleration-e*a,0,1)}else e=1===this.speed/this.MAX_REVERSE_SPEED?1:-Math.pow(2,-10*(this.speed/this.MAX_REVERSE_SPEED))+1,this.speed=THREE.Math.clamp(this.speed+e*a*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,0),this.acceleration=THREE.Math.clamp(this.acceleration+e*a,-1,0);!b.moveLeft&&!b.moveRight&&(this.wheelOrientation=
0<this.wheelOrientation?THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_DECCELERATION,0,this.MAX_WHEEL_ROTATION):THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_DECCELERATION,-this.MAX_WHEEL_ROTATION,0));e=this.speed*a;this.carOrientation+=e*this.STEERING_RADIUS_RATIO*this.wheelOrientation;this.root.position.x+=Math.sin(this.carOrientation)*e;this.root.position.z+=Math.cos(this.carOrientation)*e;this.root.rotation.y=this.carOrientation;this.loaded&&(this.bodyMesh.rotation.z=
this.MAX_TILT_SIDES*this.wheelOrientation*(this.speed/this.MAX_SPEED),this.bodyMesh.rotation.x=-this.MAX_TILT_FRONTBACK*this.acceleration);e*=1/(this.modelScale*(this.wheelDiameter/2));this.loaded&&(this.frontLeftWheelMesh.rotation.x+=e,this.frontRightWheelMesh.rotation.x+=e,this.backLeftWheelMesh.rotation.x+=e,this.backRightWheelMesh.rotation.x+=e);this.frontLeftWheelRoot.rotation.y=this.wheelOrientation;this.frontRightWheelRoot.rotation.y=this.wheelOrientation}};THREE.Curves={};
THREE.Curves.GrannyKnot=THREE.Curve.create(function(){},function(a){var a=2*Math.PI*a,b=-0.22*Math.cos(a)-1.28*Math.sin(a)-0.44*Math.cos(3*a)-0.78*Math.sin(3*a),c=-0.1*Math.cos(2*a)-0.27*Math.sin(2*a)+0.38*Math.cos(4*a)+0.46*Math.sin(4*a),a=0.7*Math.cos(3*a)-0.4*Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(20)});
THREE.Curves.HeartCurve=THREE.Curve.create(function(a){this.scale=void 0===a?5:a},function(a){var a=a*2*Math.PI,b=16*Math.pow(Math.sin(a),3),a=13*Math.cos(a)-5*Math.cos(2*a)-2*Math.cos(3*a)-Math.cos(4*a);return(new THREE.Vector3(b,a,0)).multiplyScalar(this.scale)});THREE.Curves.VivianiCurve=THREE.Curve.create(function(a){this.radius=a},function(a){var a=4*a*Math.PI,b=this.radius/2,c=b*(1+Math.cos(a)),d=b*Math.sin(a),a=2*b*Math.sin(a/2);return new THREE.Vector3(c,d,a)});
THREE.Curves.KnotCurve=THREE.Curve.create(function(){},function(a){var a=a*2*Math.PI,b=50*Math.sin(a),c=Math.cos(a)*(10+50*Math.cos(a)),a=Math.sin(a)*(10+50*Math.cos(a));return new THREE.Vector3(b,c,a)});THREE.Curves.HelixCurve=THREE.Curve.create(function(){},function(a){var b=150*2*Math.PI*a/30,c=30*Math.cos(b),b=30*Math.sin(b);return new THREE.Vector3(c,b,150*a)});
THREE.Curves.TrefoilKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=a*2*Math.PI,b=(2+Math.cos(3*a))*Math.cos(2*a),c=(2+Math.cos(3*a))*Math.sin(2*a),a=Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TorusKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=a*2*Math.PI,b=(2+Math.cos(4*a))*Math.cos(3*a),c=(2+Math.cos(4*a))*Math.sin(3*a),a=Math.sin(4*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.CinquefoilKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=a*2*Math.PI,b=(2+Math.cos(5*a))*Math.cos(2*a),c=(2+Math.cos(5*a))*Math.sin(2*a),a=Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TrefoilPolynomialKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=4*a-2,b=Math.pow(a,3)-3*a,c=Math.pow(a,4)-4*a*a,a=0.2*Math.pow(a,5)-2*a;return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
var scaleTo=function(a,b,c){return c*(b-a)+a};THREE.Curves.FigureEightPolynomialKnot=THREE.Curve.create(function(a){this.scale=void 0===a?1:a},function(a){var a=scaleTo(-4,4,a),b=0.4*a*(a*a-7)*(a*a-10),c=Math.pow(a,4)-13*a*a;return(new THREE.Vector3(b,c,0.1*a*(a*a-4)*(a*a-9)*(a*a-12))).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4a=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var a=a*2*Math.PI,b=Math.cos(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),c=Math.sin(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),a=0.35*Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4b=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI,a=Math.cos(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),c=Math.sin(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),b=0.2*Math.sin(9*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5a=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI,a=Math.cos(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),c=Math.sin(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),b=0.2*Math.sin(20*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5c=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI,a=Math.cos(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),c=Math.sin(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),b=0.35*Math.sin(15*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.MarchingCubes=function(a,b,c,d){THREE.ImmediateRenderObject.call(this);this.material=b;this.enableUvs=void 0!==c?c:!1;this.enableColors=void 0!==d?d:!1;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(3*this.size3);this.vlist=new Float32Array(36);this.nlist=
new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=!1;this.positionArray=new Float32Array(3*this.maxCount);this.normalArray=new Float32Array(3*this.maxCount);this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount));this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))};this.lerp=function(a,b,c){return a+(b-a)*c};this.VIntX=function(a,b,c,d,i,k,j,l,m,o){i=(i-m)/(o-m);m=this.normal_cache;b[d]=k+
i*this.delta;b[d+1]=j;b[d+2]=l;c[d]=this.lerp(m[a],m[a+3],i);c[d+1]=this.lerp(m[a+1],m[a+4],i);c[d+2]=this.lerp(m[a+2],m[a+5],i)};this.VIntY=function(a,b,c,d,i,k,j,l,m,o){i=(i-m)/(o-m);m=this.normal_cache;b[d]=k;b[d+1]=j+i*this.delta;b[d+2]=l;b=a+3*this.yd;c[d]=this.lerp(m[a],m[b],i);c[d+1]=this.lerp(m[a+1],m[b+1],i);c[d+2]=this.lerp(m[a+2],m[b+2],i)};this.VIntZ=function(a,b,c,d,i,k,j,l,m,o){i=(i-m)/(o-m);m=this.normal_cache;b[d]=k;b[d+1]=j;b[d+2]=l+i*this.delta;b=a+3*this.zd;c[d]=this.lerp(m[a],
m[b],i);c[d+1]=this.lerp(m[a+1],m[b+1],i);c[d+2]=this.lerp(m[a+2],m[b+2],i)};this.compNorm=function(a){var b=3*a;0===this.normal_cache[b]&&(this.normal_cache[b]=this.field[a-1]-this.field[a+1],this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd],this.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,b,c,d,i,k){var j=d+1,l=d+this.yd,m=d+this.zd,o=j+this.yd,p=j+this.zd,q=d+this.yd+this.zd,t=j+this.yd+this.zd,s=0,y=this.field[d],w=this.field[j],
r=this.field[l],B=this.field[o],v=this.field[m],u=this.field[p],x=this.field[q],F=this.field[t];y<i&&(s|=1);w<i&&(s|=2);r<i&&(s|=8);B<i&&(s|=4);v<i&&(s|=16);u<i&&(s|=32);x<i&&(s|=128);F<i&&(s|=64);var C=THREE.edgeTable[s];if(0===C)return 0;var E=this.delta,M=a+E,D=b+E,E=c+E;C&1&&(this.compNorm(d),this.compNorm(j),this.VIntX(3*d,this.vlist,this.nlist,0,i,a,b,c,y,w));C&2&&(this.compNorm(j),this.compNorm(o),this.VIntY(3*j,this.vlist,this.nlist,3,i,M,b,c,w,B));C&4&&(this.compNorm(l),this.compNorm(o),
this.VIntX(3*l,this.vlist,this.nlist,6,i,a,D,c,r,B));C&8&&(this.compNorm(d),this.compNorm(l),this.VIntY(3*d,this.vlist,this.nlist,9,i,a,b,c,y,r));C&16&&(this.compNorm(m),this.compNorm(p),this.VIntX(3*m,this.vlist,this.nlist,12,i,a,b,E,v,u));C&32&&(this.compNorm(p),this.compNorm(t),this.VIntY(3*p,this.vlist,this.nlist,15,i,M,b,E,u,F));C&64&&(this.compNorm(q),this.compNorm(t),this.VIntX(3*q,this.vlist,this.nlist,18,i,a,D,E,x,F));C&128&&(this.compNorm(m),this.compNorm(q),this.VIntY(3*m,this.vlist,this.nlist,
21,i,a,b,E,v,x));C&256&&(this.compNorm(d),this.compNorm(m),this.VIntZ(3*d,this.vlist,this.nlist,24,i,a,b,c,y,v));C&512&&(this.compNorm(j),this.compNorm(p),this.VIntZ(3*j,this.vlist,this.nlist,27,i,M,b,c,w,u));C&1024&&(this.compNorm(o),this.compNorm(t),this.VIntZ(3*o,this.vlist,this.nlist,30,i,M,D,c,B,F));C&2048&&(this.compNorm(l),this.compNorm(q),this.VIntZ(3*l,this.vlist,this.nlist,33,i,a,D,c,r,x));s<<=4;for(i=d=0;-1!=THREE.triTable[s+i];)a=s+i,b=a+1,c=a+2,this.posnormtriv(this.vlist,this.nlist,
3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[c],k),i+=3,d++;return d};this.posnormtriv=function(a,b,c,d,i,k){var j=3*this.count;this.positionArray[j]=a[c];this.positionArray[j+1]=a[c+1];this.positionArray[j+2]=a[c+2];this.positionArray[j+3]=a[d];this.positionArray[j+4]=a[d+1];this.positionArray[j+5]=a[d+2];this.positionArray[j+6]=a[i];this.positionArray[j+7]=a[i+1];this.positionArray[j+8]=a[i+2];this.normalArray[j]=b[c];this.normalArray[j+1]=b[c+1];this.normalArray[j+2]=b[c+2];this.normalArray[j+
3]=b[d];this.normalArray[j+4]=b[d+1];this.normalArray[j+5]=b[d+2];this.normalArray[j+6]=b[i];this.normalArray[j+7]=b[i+1];this.normalArray[j+8]=b[i+2];this.enableUvs&&(b=2*this.count,this.uvArray[b]=a[c],this.uvArray[b+1]=a[c+2],this.uvArray[b+2]=a[d],this.uvArray[b+3]=a[d+2],this.uvArray[b+4]=a[i],this.uvArray[b+5]=a[i+2]);this.enableColors&&(this.colorArray[j]=a[c],this.colorArray[j+1]=a[c+1],this.colorArray[j+2]=a[c+2],this.colorArray[j+3]=a[d],this.colorArray[j+4]=a[d+1],this.colorArray[j+5]=
a[d+2],this.colorArray[j+6]=a[i],this.colorArray[j+7]=a[i+1],this.colorArray[j+8]=a[i+2]);this.count+=3;this.count>=this.maxCount-3&&(this.hasNormals=this.hasPositions=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),k(this))};this.begin=function(){this.count=0;this.hasColors=this.hasUvs=this.hasNormals=this.hasPositions=!1};this.end=function(a){if(0!==this.count){for(var b=3*this.count;b<this.positionArray.length;b++)this.positionArray[b]=0;this.hasNormals=this.hasPositions=
!0;this.enableUvs&&(this.hasUvs=!0);this.enableColors&&(this.hasColors=!0);a(this)}};this.addBall=function(a,b,c,d,i){var k=this.size*Math.sqrt(d/i),j=c*this.size,l=b*this.size,m=a*this.size,o=Math.floor(j-k);1>o&&(o=1);j=Math.floor(j+k);j>this.size-1&&(j=this.size-1);var p=Math.floor(l-k);1>p&&(p=1);l=Math.floor(l+k);l>this.size-1&&(l=this.size-1);var q=Math.floor(m-k);1>q&&(q=1);k=Math.floor(m+k);k>this.size-1&&(k=this.size-1);for(var t,s,y,w,r,B;o<j;o++){m=this.size2*o;s=o/this.size-c;r=s*s;for(s=
p;s<l;s++){y=m+this.size*s;t=s/this.size-b;B=t*t;for(t=q;t<k;t++)w=t/this.size-a,w=d/(1E-6+w*w+B+r)-i,0<w&&(this.field[y+t]+=w)}}};this.addPlaneX=function(a,b){var c,d,i,k,j,l=this.size,m=this.yd,o=this.zd,p=this.field,q=l*Math.sqrt(a/b);q>l&&(q=l);for(c=0;c<q;c++)if(d=c/l,d*=d,k=a/(1E-4+d)-b,0<k)for(d=0;d<l;d++){j=c+d*m;for(i=0;i<l;i++)p[o*i+j]+=k}};this.addPlaneY=function(a,b){var c,d,i,k,j,l,m=this.size,o=this.yd,p=this.zd,q=this.field,t=m*Math.sqrt(a/b);t>m&&(t=m);for(d=0;d<t;d++)if(c=d/m,c*=
c,k=a/(1E-4+c)-b,0<k){j=d*o;for(c=0;c<m;c++){l=j+c;for(i=0;i<m;i++)q[p*i+l]+=k}}};this.addPlaneZ=function(a,b){var c,d,i,k,j,l,m=this.size,o=this.yd,p=this.zd,q=this.field,t=m*Math.sqrt(a/b);t>m&&(t=m);for(i=0;i<t;i++)if(c=i/m,c*=c,k=a/(1E-4+c)-b,0<k){j=p*i;for(d=0;d<m;d++){l=j+d*o;for(c=0;c<m;c++)q[l+c]+=k}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[3*a]=0,this.field[a]=0};this.render=function(a){this.begin();var b,c,d,i,k,j,l,m,o,p=this.size-2;for(i=1;i<p;i++){o=this.size2*
i;l=(i-this.halfsize)/this.halfsize;for(d=1;d<p;d++){m=o+this.size*d;j=(d-this.halfsize)/this.halfsize;for(c=1;c<p;c++)k=(c-this.halfsize)/this.halfsize,b=m+c,this.polygonize(k,j,l,b,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,c=[];this.render(function(d){var i,k,j,l,m,o,p,q;for(i=0;i<d.count;i++)o=3*i,p=o+1,q=o+2,k=d.positionArray[o],j=d.positionArray[p],l=d.positionArray[q],m=new THREE.Vector3(k,j,l),k=d.normalArray[o],j=d.normalArray[p],l=d.normalArray[q],
o=new THREE.Vector3(k,j,l),o.normalize(),b.vertices.push(m),c.push(o);m=d.count/3;for(i=0;i<m;i++)o=3*(a+i),p=o+1,q=o+2,k=c[o],j=c[p],l=c[q],o=new THREE.Face3(o,p,q,[k,j,l]),b.faces.push(o);a+=m;d.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=Object.create(THREE.ImmediateRenderObject.prototype);
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);
THREE.MD2Character=function(){function a(a,b){for(var d=new THREE.UVMapping,h=[],i=0;i<b.length;i++)h[i]=THREE.ImageUtils.loadTexture(a+b[i],d,c),h[i].name=b[i];return h}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:!0,shading:THREE.SmoothShading,map:c,morphTargets:!0,morphNormals:!0,metal:!1}),h=new THREE.MeshPhongMaterial({color:16777215,specular:1118481,
shininess:50,wireframe:!1,shading:THREE.SmoothShading,map:b,morphTargets:!0,morphNormals:!0,metal:!1});h.wrapAround=!0;var i=new THREE.MorphAnimMesh(a,h);i.rotation.y=-Math.PI/2;i.castShadow=!0;i.receiveShadow=!0;i.materialTexture=h;i.materialWireframe=c;i.parseAnimations();i.playAnimation(a.firstAnimation,d.animationFPS);i.baseDuration=i.duration;return i}function c(){d.loadCounter-=1;if(0===d.loadCounter)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.root=new THREE.Object3D;
this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.activeAnimation=null;this.onLoadComplete=function(){};this.loadCounter=0;this.loadParts=function(e){this.loadCounter=2*e.weapons.length+e.skins.length+1;for(var f=[],g=0;g<e.weapons.length;g++)f[g]=e.weapons[g][1];this.skinsBody=a(e.baseUrl+"skins/",e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",f);f=new THREE.JSONLoader;f.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*
a.boundingBox.min.y;var e=b(a,d.skinsBody[0]);e.scale.set(d.scale,d.scale,d.scale);d.root.add(e);d.meshBody=e;d.activeAnimation=a.firstAnimation;c()});for(var h=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=!1;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;c()}},g=0;g<e.weapons.length;g++)f.load(e.baseUrl+e.weapons[g][0],h(g,e.weapons[g][0]))};this.setPlaybackRate=function(a){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/
a);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/a)};this.setWireframe=function(a){if(a){if(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialWireframe}else if(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialTexture};this.setSkin=function(a){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=
this.skinsBody[a])};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=!1;if(a=this.weapons[a])a.visible=!0,this.meshWeapon=a,a.playAnimation(this.activeAnimation,this.animationFPS),this.meshWeapon.baseDuration=this.meshWeapon.duration,this.meshWeapon.time=this.meshBody.time,this.meshWeapon.duration=this.meshBody.duration};this.setAnimation=function(a){this.meshBody&&(this.meshBody.playAnimation(a,this.animationFPS),this.meshBody.baseDuration=this.meshBody.duration);
this.meshWeapon&&(this.meshWeapon.playAnimation(a,this.animationFPS),this.meshWeapon.baseDuration=this.meshWeapon.duration,this.meshWeapon.time=this.meshBody.time);this.activeAnimation=a};this.update=function(a){this.meshBody&&this.meshBody.updateAnimation(1E3*a);this.meshWeapon&&this.meshWeapon.updateAnimation(1E3*a)}};
THREE.MD2CharacterComplex=function(){function a(a,b){for(var d=new THREE.UVMapping,h=[],i=0;i<b.length;i++)h[i]=THREE.ImageUtils.loadTexture(a+b[i],d,c),h[i].name=b[i];return h}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:!0,shading:THREE.SmoothShading,map:c,morphTargets:!0,morphNormals:!0,metal:!0}),h=new THREE.MeshPhongMaterial({color:16777215,
specular:1118481,shininess:50,wireframe:!1,shading:THREE.SmoothShading,map:b,morphTargets:!0,morphNormals:!0,metal:!0});h.wrapAround=!0;var i=new THREE.MorphBlendMesh(a,h);i.rotation.y=-Math.PI/2;i.materialTexture=h;i.materialWireframe=c;i.autoCreateAnimations(d.animationFPS);return i}function c(){d.loadCounter-=1;if(0===d.loadCounter)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.transitionFrames=15;this.maxSpeed=275;this.maxReverseSpeed=-275;this.frontDecceleration=this.backAcceleration=
this.frontAcceleration=600;this.angularSpeed=2.5;this.root=new THREE.Object3D;this.controls=this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.currentSkin=void 0;this.onLoadComplete=function(){};this.meshes=[];this.animations={};this.bodyOrientation=this.speed=this.loadCounter=0;this.walkSpeed=this.maxSpeed;this.crouchSpeed=0.5*this.maxSpeed;this.oldAnimation=this.activeAnimation=null;this.enableShadows=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].castShadow=
a,this.meshes[b].receiveShadow=a};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].visible=a,this.meshes[b].visible=a};this.shareParts=function(a){this.animations=a.animations;this.walkSpeed=a.walkSpeed;this.crouchSpeed=a.crouchSpeed;this.skinsBody=a.skinsBody;this.skinsWeapon=a.skinsWeapon;var c=b(a.meshBody.geometry,this.skinsBody[0]);c.scale.set(this.scale,this.scale,this.scale);this.root.position.y=a.root.position.y;this.root.add(c);this.meshBody=c;this.meshes.push(c);
for(c=0;c<a.weapons.length;c++){var d=b(a.weapons[c].geometry,this.skinsWeapon[c]);d.scale.set(this.scale,this.scale,this.scale);d.visible=!1;d.name=a.weapons[c].name;this.root.add(d);this.meshWeapon=this.weapons[c]=d;this.meshes.push(d)}};this.loadParts=function(e){this.animations=e.animations;this.walkSpeed=e.walkSpeed;this.crouchSpeed=e.crouchSpeed;this.loadCounter=2*e.weapons.length+e.skins.length+1;for(var f=[],g=0;g<e.weapons.length;g++)f[g]=e.weapons[g][1];this.skinsBody=a(e.baseUrl+"skins/",
e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",f);f=new THREE.JSONLoader;f.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*a.boundingBox.min.y;a=b(a,d.skinsBody[0]);a.scale.set(d.scale,d.scale,d.scale);d.root.add(a);d.meshBody=a;d.meshes.push(a);c()});for(var h=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=!1;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;d.meshes.push(f);c()}},g=0;g<e.weapons.length;g++)f.load(e.baseUrl+
e.weapons[g][0],h(g,e.weapons[g][0]))};this.setPlaybackRate=function(a){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/a);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/a)};this.setWireframe=function(a){if(a){if(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialWireframe}else if(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon)this.meshWeapon.material=
this.meshWeapon.materialTexture};this.setSkin=function(a){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[a],this.currentSkin=a)};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=!1;if(a=this.weapons[a])a.visible=!0,this.meshWeapon=a,this.activeAnimation&&(a.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation)))};this.setAnimation=
function(a){if(a!==this.activeAnimation&&a&&(this.meshBody&&(this.meshBody.setAnimationWeight(a,0),this.meshBody.playAnimation(a),this.oldAnimation=this.activeAnimation,this.activeAnimation=a,this.blendCounter=this.transitionFrames),this.meshWeapon))this.meshWeapon.setAnimationWeight(a,0),this.meshWeapon.playAnimation(a)};this.update=function(a){this.controls&&this.updateMovementModel(a);this.animations&&(this.updateBehaviors(a),this.updateAnimations(a))};this.updateAnimations=function(a){var b=1;
0<this.blendCounter&&(b=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1);this.meshBody&&(this.meshBody.update(a),this.meshBody.setAnimationWeight(this.activeAnimation,b),this.meshBody.setAnimationWeight(this.oldAnimation,1-b));this.meshWeapon&&(this.meshWeapon.update(a),this.meshWeapon.setAnimationWeight(this.activeAnimation,b),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-b))};this.updateBehaviors=function(){var a=this.controls,b=this.animations,c,d;
a.crouch?(c=b.crouchMove,d=b.crouchIdle):(c=b.move,d=b.idle);a.jump&&(d=c=b.jump);a.attack&&(d=a.crouch?c=b.crouchAttack:c=b.attack);(a.moveForward||a.moveBackward||a.moveLeft||a.moveRight)&&this.activeAnimation!==c&&this.setAnimation(c);Math.abs(this.speed)<0.2*this.maxSpeed&&!a.moveLeft&&!a.moveRight&&!a.moveForward&&!a.moveBackward&&this.activeAnimation!==d&&this.setAnimation(d);if(a.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),
this.meshWeapon))this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);if(a.moveBackward&&(this.meshBody&&(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon))this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)};this.updateMovementModel=function(a){var b=
this.controls;this.maxSpeed=b.crouch?this.crouchSpeed:this.walkSpeed;this.maxReverseSpeed=-this.maxSpeed;b.moveForward&&(this.speed=THREE.Math.clamp(this.speed+a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-a*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveLeft&&(this.bodyOrientation+=a*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveRight&&
(this.bodyOrientation-=a*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));!b.moveForward&&!b.moveBackward&&(0<this.speed?(b=1===this.speed/this.maxSpeed?1:-Math.pow(2,-10*(this.speed/this.maxSpeed))+1,this.speed=THREE.Math.clamp(this.speed-b*a*this.frontDecceleration,0,this.maxSpeed)):(b=1===this.speed/this.maxReverseSpeed?1:-Math.pow(2,-10*(this.speed/this.maxReverseSpeed))+1,this.speed=THREE.Math.clamp(this.speed+b*a*this.backAcceleration,
this.maxReverseSpeed,0)));a*=this.speed;this.root.position.x+=Math.sin(this.bodyOrientation)*a;this.root.position.z+=Math.cos(this.bodyOrientation)*a;this.root.rotation.y=this.bodyOrientation}};
THREE.ParametricGeometries={klein:function(a,b){var b=b*Math.PI,a=a*2*Math.PI,b=2*b,c,d,e;b<Math.PI?(c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(b)*Math.cos(a),e=-8*Math.sin(b)-2*(1-Math.cos(b)/2)*Math.sin(b)*Math.cos(a)):(c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(a+Math.PI),e=-8*Math.sin(b));d=-2*(1-Math.cos(b)/2)*Math.sin(a);return new THREE.Vector3(c,d,e)},plane:function(a,b){return function(c,d){return new THREE.Vector3(c*a,0,d*b)}},mobius:function(a,b){var a=
a-0.5,c=2*Math.PI*b,d,e;d=Math.cos(c)*(2+a*Math.cos(c/2));e=Math.sin(c)*(2+a*Math.cos(c/2));c=a*Math.sin(c/2);return new THREE.Vector3(d,e,c)},mobius3d:function(a,b){var a=a*Math.PI,b=b*2*Math.PI,a=2*a,c=a/2,d,e;d=0.125*Math.cos(b)*Math.cos(c)-0.65*Math.sin(b)*Math.sin(c);e=0.125*Math.cos(b)*Math.sin(c)+0.65*Math.sin(b)*Math.cos(c);c=(2.25+d)*Math.sin(a);d=(2.25+d)*Math.cos(a);return new THREE.Vector3(d,c,e)}};
THREE.ParametricGeometries.TubeGeometry=function(a,b,c,d,e,f){this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);var g=this,h,i,k,j=this.segments+1,l,m,o,p=new THREE.Vector3,q,e=new THREE.TubeGeometry.FrenetFrames(a,b,e),t=e.tangents,s=e.normals,y=e.binormals;this.tangents=t;this.normals=s;this.binormals=y;THREE.ParametricGeometry.call(this,function(b,d){d=d*2*Math.PI;q=b*(j-1);q=Math.floor(q);o=a.getPointAt(b);h=t[q];i=s[q];
k=y[q];if(g.debug){g.debug.add(new THREE.ArrowHelper(h,o,c,255));g.debug.add(new THREE.ArrowHelper(i,o,c,16711680));g.debug.add(new THREE.ArrowHelper(k,o,c,65280))}l=-g.radius*Math.cos(d);m=g.radius*Math.sin(d);p.copy(o);p.x=p.x+(l*i.x+m*k.x);p.y=p.y+(l*i.y+m*k.y);p.z=p.z+(l*i.z+m*k.z);return p.clone()},b,d)};THREE.ParametricGeometries.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.TorusKnotGeometry=function(a,b,c,d,e,f,g){this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;var h=new (THREE.Curve.create(function(){},function(b){var b=b*2*Math.PI,c=(1+0.5*Math.cos(f*b))*Math.cos(e*b),d=(1+0.5*Math.cos(f*b))*Math.sin(e*b),b=0.5*Math.sin(f*b);return(new THREE.Vector3(c,d*g,b)).multiplyScalar(a)}));THREE.ParametricGeometries.TubeGeometry.call(this,h,c,b,d,!0,!1)};
THREE.ParametricGeometries.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometries.SphereGeometry=function(a,b,c){THREE.ParametricGeometry.call(this,function(b,c){var b=b*Math.PI,c=c*2*Math.PI,f=a*Math.sin(b)*Math.cos(c),g=a*Math.sin(b)*Math.sin(c),h=a*Math.cos(b);return new THREE.Vector3(f,g,h)},b,c,!1)};THREE.ParametricGeometries.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.PlaneGeometry=function(a,b,c,d){THREE.ParametricGeometry.call(this,function(c,d){return new THREE.Vector3(c*a,0,d*b)},c,d)};THREE.ParametricGeometries.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{type:"t",value:null},fStepSize:{type:"f",value:1},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define TAPS_PER_PASS 6.0\nvarying vec2 vUv;\nuniform sampler2D tInput;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize;\nvoid main() {\nvec2 delta = vSunPositionScreenSpace - vUv;\nfloat dist = length( delta );\nvec2 stepv = fStepSize * delta / dist;\nfloat iters = dist/fStepSize;\nvec2 uv = vUv.xy;\nfloat col = 0.0;\nif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\ngl_FragColor = vec4( col/TAPS_PER_PASS );\ngl_FragColor.a = 1.0;\n}"},
godrays_combine:{uniforms:{tColors:{type:"t",value:null},tGodRays:{type:"t",value:null},fGodRayIntensity:{type:"f",value:0.69},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\nvoid main() {\ngl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\ngl_FragColor.a = 1.0;\n}"},
godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)},fAspect:{type:"f",value:1},sunColor:{type:"c",value:new THREE.Color(16772608)},bgColor:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\nuniform vec3 sunColor;\nuniform vec3 bgColor;\nvoid main() {\nvec2 diff = vUv - vSunPositionScreenSpace;\ndiff.x *= fAspect;\nfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\nprop = 0.35 * pow( 1.0 - prop, 3.0 );\ngl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\ngl_FragColor.w = 1.0;\n}"}};
THREE.ShaderSkin={skinSimple:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableBump:{type:"i",value:0},enableSpecular:{type:"i",value:0},tDiffuse:{type:"t",value:null},tBeckmann:{type:"t",value:null},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",
value:0.75},bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},specularMap:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},uWrapRGB:{type:"v3",value:new THREE.Vector3(0.75,0.375,0.1875)}}]),fragmentShader:["#define USE_BUMPMAP\n#extension GL_OES_standard_derivatives : enable\nuniform bool enableBump;\nuniform bool enableSpecular;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform vec3 uWrapRGB;\nuniform sampler2D tDiffuse;\nuniform sampler2D tBeckmann;\nuniform sampler2D specularMap;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse.rgb *= colDiffuse.rgb;\ngl_FragColor = gl_FragColor * colDiffuse;\nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nfloat specularStrength;\nif ( enableSpecular ) {\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n} else {\nspecularStrength = 1.0;\n}\n#ifdef USE_BUMPMAP\nif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\nfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\npointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\nspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirTotal = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\nfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\ndirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\nspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\nvec3 lVectorGround = -lVector;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\nspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\n}\n#endif\nvec3 totalLight = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalLight += hemiTotal;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform vec4 offsetRepeat;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},skin:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,{passID:{type:"i",value:0},tDiffuse:{type:"t",value:null},tNormal:{type:"t",value:null},tBlur1:{type:"t",value:null},tBlur2:{type:"t",value:null},tBlur3:{type:"t",value:null},tBlur4:{type:"t",value:null},tBeckmann:{type:"t",value:null},uNormalScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},
uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",value:0.75}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform int passID;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tBlur1;\nuniform sampler2D tBlur2;\nuniform sampler2D tBlur3;\nuniform sampler2D tBlur4;\nuniform sampler2D tBeckmann;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.fog_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( 1.0 );\nvec4 mColor = vec4( uDiffuseColor, uOpacity );\nvec4 mSpecular = vec4( uSpecularColor, uOpacity );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse *= colDiffuse;\ngl_FragColor = gl_FragColor * colDiffuse;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointTotal = vec4( vec3( 0.0 ), 1.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\npointTotal  += pointDistance * vec4( pointLightColor[ i ], 1.0 ) * ( mColor * pointDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += pointDistance * mSpecular.xyz * pointLightColor[ i ] * KS_Skin_Specular( normal, pointVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirTotal = vec4( vec3( 0.0 ), 1.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\ndirTotal  += vec4( directionalLightColor[ i ], 1.0 ) * ( mColor * dirDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += mSpecular.xyz * directionalLightColor[ i ] * KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\nvec4 totalLight = vec4( vec3( 0.0 ), uOpacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\ngl_FragColor = gl_FragColor * totalLight;\nif ( passID == 0 ) {\ngl_FragColor = vec4( sqrt( gl_FragColor.xyz ), gl_FragColor.w );\n} else if ( passID == 1 ) {\n#ifdef VERSION1\nvec3 nonblurColor = sqrt( gl_FragColor.xyz );\n#else\nvec3 nonblurColor = gl_FragColor.xyz;\n#endif\nvec3 blur1Color = texture2D( tBlur1, vUv ).xyz;\nvec3 blur2Color = texture2D( tBlur2, vUv ).xyz;\nvec3 blur3Color = texture2D( tBlur3, vUv ).xyz;\nvec3 blur4Color = texture2D( tBlur4, vUv ).xyz;\ngl_FragColor = vec4( vec3( 0.22,  0.437, 0.635 ) * nonblurColor + \nvec3( 0.101, 0.355, 0.365 ) * blur1Color + \nvec3( 0.119, 0.208, 0.0 )   * blur2Color + \nvec3( 0.114, 0.0,   0.0 )   * blur3Color + \nvec3( 0.444, 0.0,   0.0 )   * blur4Color\n, gl_FragColor.w );\ngl_FragColor.xyz *= pow( colDiffuse.xyz, vec3( 0.5 ) );\ngl_FragColor.xyz += ambientLightColor * uAmbientColor * colDiffuse.xyz + specularTotal;\n#ifndef VERSION1\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif\n}",
THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}",
vertexShaderUV:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\ngl_Position = vec4( uv.x * 2.0 - 1.0, uv.y * 2.0 - 1.0, 0.0, 1.0 );\n}"},
beckmann:{uniforms:{},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nfloat PHBeckmann( float ndoth, float m ) {\nfloat alpha = acos( ndoth );\nfloat ta = tan( alpha );\nfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\nreturn val;\n}\nfloat KSTextureCompute( vec2 tex ) {\nreturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n}\nvoid main() {\nfloat x = KSTextureCompute( vUv );\ngl_FragColor = vec4( x, x, x, 1.0 );\n}"}};
THREE.ShaderTerrain={terrain:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableDiffuse1:{type:"i",value:0},enableDiffuse2:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},tDetail:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tDisplacement:{type:"t",value:null},uNormalScale:{type:"f",value:1},
uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uRepeatBase:{type:"v2",value:new THREE.Vector2(1,1)},uRepeatOverlay:{type:"v2",value:new THREE.Vector2(1,1)},uOffset:{type:"v2",value:new THREE.Vector2(0,0)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\nuniform float uNormalScale;\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\nuniform vec2 uOffset;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\nvec2 uvBase = uRepeatBase * vUv;\nvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse1 && enableDiffuse2 ) {\nvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\nvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n#ifdef GAMMA_INPUT\ncolDiffuse1.xyz *= colDiffuse1.xyz;\ncolDiffuse2.xyz *= colDiffuse2.xyz;\n#endif\ngl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n } else if( enableDiffuse1 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n} else if( enableDiffuse2 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\nhemiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uRepeatBase;\nuniform sampler2D tNormal;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec2 uvBase = uv * uRepeatBase;\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec3 displacedPosition = normal * df + position;\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n#else\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\nvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\nvNormal = normalMatrix * normalTex;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")}};
THREE.ShaderToon={toon1:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvNormal = normalize( normalMatrix * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvRefract = refract( normalize( I ), worldNormal, 1.02 );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\nfloat intensity = smoothstep( - 0.5, 1.0, pow( length(lightWeighting), 20.0 ) );\nintensity += length(lightWeighting) * 0.2;\nfloat cameraWeighting = dot( normalize( vNormal ), vRefract );\nintensity += pow( 1.0 - length( cameraWeighting ), 6.0 );\nintensity = intensity * 0.2 + 0.3;\nif ( intensity < 0.50 ) {\ngl_FragColor = vec4( 2.0 * intensity * uBaseColor, 1.0 );\n} else {\ngl_FragColor = vec4( 1.0 - 2.0 * ( 1.0 - intensity ) * ( 1.0 - uBaseColor ), 1.0 );\n}\n}"},
toon2:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(15658734)},uLineColor1:{type:"c",value:new THREE.Color(8421504)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat camera = max( dot( normalize( vNormal ), vec3( 0.0, 0.0, 1.0 ) ), 0.4);\nfloat light = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(uAmbientLightColor + uDirLightColor * light) < 1.00 ) {\ngl_FragColor *= vec4( uLineColor1, 1.0 );\n}\nif ( length(uAmbientLightColor + uDirLightColor * camera) < 0.50 ) {\ngl_FragColor *= vec4( uLineColor2, 1.0 );\n}\n}"},
hatching:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.75 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor2, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor3, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.3465 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor4, 1.0 );\n}\n}\n}"},
dotted:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( ( mod(gl_FragCoord.x, 4.001) + mod(gl_FragCoord.y, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif ( ( mod(gl_FragCoord.x + 2.0, 4.001) + mod(gl_FragCoord.y + 2.0, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\n}"}};
var SPARKS={Emitter:function(a){this._counter=a?a:new SPARKS.SteadyCounter(10);this._particles=[];this._initializers=[];this._actions=[];this._activities=[];this._handlers=[];this.callbacks={}}};
SPARKS.Emitter.prototype={_TIMESTEP:15,_timer:null,_lastTime:null,_timerStep:10,_velocityVerlet:!0,start:function(){this._lastTime=Date.now();this._timer=setTimeout(this.step,this._timerStep,this);this._isRunning=!0},stop:function(){this._isRunning=!1;clearTimeout(this._timer)},isRunning:function(){return this._isRunning&1},step:function(a){var b=Date.now(),c=b-a._lastTime;if(this._velocityVerlet)a.update(c/1E3),a._lastTime=b;else{var d=20*a._TIMESTEP;for(c>=d&&(c=d);c>=a._TIMESTEP;)a.update(a._TIMESTEP/
1E3),c-=a._TIMESTEP;a._lastTime=b-c}a._isRunning&&setTimeout(a.step,a._timerStep,a)},update:function(a){var b,c,d=this._counter.updateEmitter(this,a);for(b=0;b<d;b++)this.createParticle();d=this._activities.length;for(b=0;b<d;b++)this._activities[b].update(this,a);var d=this._actions.length,e,f,g=this._particles.length;for(c=0;c<d;c++){f=this._actions[c];for(b=0;b<g;++b)e=this._particles[b],f.update(this,e,a)}for(b=g;b--;)e=this._particles[b],e.isDead?(this._particles.splice(b,1),this.dispatchEvent("dead",
e),SPARKS.VectorPool.release(e.position),SPARKS.VectorPool.release(e.velocity)):this.dispatchEvent("updated",e);this.dispatchEvent("loopUpdated")},createParticle:function(){var a=new SPARKS.Particle,b=this._initializers.length,c;for(c=0;c<b;c++)this._initializers[c].initialize(this,a);this._particles.push(a);this.dispatchEvent("created",a);return a},addInitializer:function(a){this._initializers.push(a)},addAction:function(a){this._actions.push(a)},removeInitializer:function(a){a=this._initializers.indexOf(a);
-1<a&&this._initializers.splice(a,1)},removeAction:function(a){a=this._actions.indexOf(a);-1<a&&this._actions.splice(a,1)},addCallback:function(a,b){this.callbacks[a]=b},dispatchEvent:function(a,b){var c=this.callbacks[a];c&&c(b)}};SPARKS.EVENT_PARTICLE_CREATED="created";SPARKS.EVENT_PARTICLE_UPDATED="updated";SPARKS.EVENT_PARTICLE_DEAD="dead";SPARKS.EVENT_LOOP_UPDATED="loopUpdated";SPARKS.SteadyCounter=function(a){this.rate=a;this.leftover=0};
SPARKS.SteadyCounter.prototype.updateEmitter=function(a,b){var c=b*this.rate+this.leftover,d=Math.floor(c);this.leftover=c-d;return d};SPARKS.ShotCounter=function(a){this.particles=a;this.used=!1};SPARKS.ShotCounter.prototype.updateEmitter=function(){if(this.used)return 0;this.used=!0;return this.particles};
SPARKS.Particle=function(){this.age=this.lifetime=0;this.energy=1;this.isDead=!1;this.target=null;this.position=SPARKS.VectorPool.get().set(0,0,0);this.velocity=SPARKS.VectorPool.get().set(0,0,0);this._oldvelocity=SPARKS.VectorPool.get().set(0,0,0)};SPARKS.Action=function(){this._priority=0};SPARKS.Age=function(a){this._easing=null==a?TWEEN.Easing.Linear.None:a};
SPARKS.Age.prototype.update=function(a,b,c){b.age+=c;b.age>=b.lifetime?(b.energy=0,b.isDead=!0):(a=this._easing(b.age/b.lifetime),b.energy=-1*a+1)};SPARKS.Move=function(){};SPARKS.Move.prototype.update=function(a,b,c){var a=b.position,d=b.velocity,b=b._oldvelocity;this._velocityVerlet?(a.x+=0.5*(d.x+b.x)*c,a.y+=0.5*(d.y+b.y)*c,a.z+=0.5*(d.z+b.z)*c):(a.x+=d.x*c,a.y+=d.y*c,a.z+=d.z*c)};SPARKS.DeathZone=function(a){this.zone=a};
SPARKS.DeathZone.prototype.update=function(a,b){this.zone.contains(b.position)&&(b.isDead=!0)};SPARKS.ActionZone=function(a,b){this.action=a;this.zone=b};SPARKS.ActionZone.prototype.update=function(a,b,c){this.zone.contains(b.position)&&this.action.update(a,b,c)};SPARKS.Accelerate=function(a,b,c){this.acceleration=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};
SPARKS.Accelerate.prototype.update=function(a,b,c){var a=this.acceleration,d=b.velocity;b._oldvelocity.set(d.x,d.y,d.z);d.x+=a.x*c;d.y+=a.y*c;d.z+=a.z*c};SPARKS.AccelerateFactor=function(a){this.factor=a};SPARKS.AccelerateFactor.prototype.update=function(a,b,c){var a=this.factor,b=b.velocity,d=b.length();0<d&&b.multiplyScalar(a*c/d+1)};SPARKS.AccelerateVelocity=function(a){this.factor=a};
SPARKS.AccelerateVelocity.prototype.update=function(a,b){var c=this.factor,d=b.velocity;d.z+=-d.x*c;d.y+=d.z*c;d.x+=d.y*c};SPARKS.RandomDrift=function(a,b,c){this.drift=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};SPARKS.RandomDrift.prototype.update=function(a,b,c){a=this.drift;b=b.velocity;b.x+=(Math.random()-0.5)*a.x*c;b.y+=(Math.random()-0.5)*a.y*c;b.z+=(Math.random()-0.5)*a.z*c};SPARKS.Zone=function(){};SPARKS.PointZone=function(a){this.pos=a};
SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.PointZone=function(a){this.pos=a};SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.LineZone=function(a,b){this.start=a;this.end=b;this._length=b.clone().subSelf(a)};SPARKS.LineZone.prototype.getLocation=function(){var a=this._length.clone();a.multiplyScalar(Math.random());return a.addSelf(this.start)};SPARKS.ParallelogramZone=function(a,b,c){this.corner=a;this.side1=b;this.side2=c};
SPARKS.ParallelogramZone.prototype.getLocation=function(){var a=this.side1.clone().multiplyScalar(Math.random()),b=this.side2.clone().multiplyScalar(Math.random());a.addSelf(b);return a.addSelf(this.corner)};SPARKS.CubeZone=function(a,b,c,d){this.position=a;this.x=b;this.y=c;this.z=d};SPARKS.CubeZone.prototype.getLocation=function(){var a=this.position.clone();a.x+=Math.random()*this.x;a.y+=Math.random()*this.y;a.z+=Math.random()*this.z;return a};
SPARKS.CubeZone.prototype.contains=function(a){var b=this.position.x,c=this.position.y,d=this.position.z,e=this.x,f=this.y,g=this.z;0>e&&(b+=e,e=Math.abs(e));0>f&&(c+=f,f=Math.abs(f));0>g&&(d+=g,g=Math.abs(g));b=a.x-b;c=a.y-c;a=a.z-d;return 0<b&&b<e&&0<c&&c<f&&0<a&&a<g?!0:!1};SPARKS.SphereCapZone=function(a,b,c,d,e,f){this.x=a;this.y=b;this.z=c;this.minr=d;this.maxr=e;this.angle=f};
SPARKS.SphereCapZone.prototype.getLocation=function(){var a=2*Math.PI*SPARKS.Utils.random(),b=SPARKS.Utils.random(),a=SPARKS.VectorPool.get().set(b*Math.cos(a),-1/Math.tan(this.angle*SPARKS.Utils.DEGREE_TO_RADIAN),b*Math.sin(a)),b=this.minr-(this.minr-this.maxr)*Math.random();a.multiplyScalar(b);a.__markedForReleased=!0;return a};SPARKS.Lifetime=function(a,b){this._min=a;this._max=b?b:a};SPARKS.Lifetime.prototype.initialize=function(a,b){b.lifetime=this._min+SPARKS.Utils.random()*(this._max-this._min)};
SPARKS.Position=function(a){this.zone=a};SPARKS.Position.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.position.set(c.x,c.y,c.z)};SPARKS.Velocity=function(a){this.zone=a};SPARKS.Velocity.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.velocity.set(c.x,c.y,c.z);c.__markedForReleased&&(SPARKS.VectorPool.release(c),c.__markedForReleased=!1)};SPARKS.Target=function(a,b){this.target=a;this.callback=b};
SPARKS.Target.prototype.initialize=function(a,b){b.target=this.callback?this.callback():this.target};SPARKS.VectorPool={__pools:[],get:function(){return 0<this.__pools.length?this.__pools.pop():this._addToPool()},release:function(a){this.__pools.push(a)},_addToPool:function(){for(var a=0;100>a;a++)this.__pools.push(new THREE.Vector3);return new THREE.Vector3}};
SPARKS.Utils={random:function(){return Math.random()},DEGREE_TO_RADIAN:Math.PI/180,TWOPI:2*Math.PI,getPerpendiculars:function(a){var b=this.getPerpendicular(a),a=a.cross(b);a.normalize();return[b,a]},getPerpendicular:function(a){return 0==a.x?new THREE.Vector3D(1,0,0):(new THREE.Vector3(a.y,-a.x,0)).normalize()}};THREE.UVsUtils={};THREE.UVsUtils.CylinderUVGenerator=function(){this.uRepeat=1;this.lengthCache=this.targetGeometry=null};
THREE.UVsUtils.CylinderUVGenerator.prototype={generateTopUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateTopUV,generateBottomUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateBottomUV,generateSideWallUV:function(a,b,c,d,e,f,g,h,i,k,j,l){this.targetGeometry!==a&&this.prepare(a,c);b=this.lengthCache;a=i/k;i=(i+1)/k;j=b[j];l=b[l];j<l&&(j+=1);j*=this.uRepeat;l*=this.uRepeat;return[new THREE.UV(j,a),new THREE.UV(l,a),new THREE.UV(l,i),new THREE.UV(j,i)]},prepare:function(a,b){for(var c,d,e=[],f=0,g=
b.length,h=0;h<g;h++){c=b[h];d=b[(h+1)%g];var i=c.x-d.x;c=c.y-d.y;i=Math.sqrt(i*i+c*c);e.push(f);f+=i}this.normalizeArray(e,f);this.targetGeometry=a;this.lengthCache=e},normalizeArray:function(a,b){for(var c=a.length,d=0;d<c;d++)a[d]/=b;return a}};
THREE.UVsDebug=function(a){var b=a.faces,c=a.faceVertexUvs[0];console.log("debugging geometry",a);a=document.createElement("canvas");a.width=1024;a.height=1024;var d=a.getContext("2d");d.lineWidth=1;d.strokeStyle="rgba(0,0,0,0.8)";d.fillStyle="rgba(255,255,255, 1.0)";d.fillRect(0,0,1024,1024);var e,f,g,h,i,k,j=new THREE.Vector2,l=new THREE.Vector2;g=0;for(h=c.length;g<h;g++){e=c[g];d.beginPath();j.set(0,0);i=0;for(k=e.length;i<k;i++)f=e[i],j.x+=f.u,j.y+=f.v,0==i?d.moveTo(1024*f.u,1024*f.v):d.lineTo(1024*
f.u,1024*f.v);d.closePath();d.stroke();j.divideScalar(k);d.font="12pt Arial bold";d.fillStyle="rgba(0,0,0,0.8)";d.fillText(g,1024*j.x,1024*j.y);d.font="8pt Arial bold";d.fillStyle="rgba(30,30,0,0.8)";i=0;for(k=e.length;i<k;i++)f=e[i],l.set(f.u,f.v).subSelf(j).divideScalar(4),l.x=f.u-l.x,l.y=f.v-l.y,d.fillText("abcd"[i]+":"+b[g]["abcd"[i]],1024*l.x,1024*l.y)}return a};
var ImprovedNoise=function(){function a(a){return a*a*a*(a*(6*a-15)+10)}function b(a,b,c){return b+a*(c-b)}function c(a,b,c,d){var a=a&15,e=8>a?b:c,b=4>a?c:12==a||14==a?b:d;return(0==(a&1)?e:-e)+(0==(a&2)?b:-b)}for(var d=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,
211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,
181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],e=0;256>e;e++)d[256+e]=d[e];return{noise:function(e,g,h){var i=~~e,k=~~g,j=~~h,l=i&255,m=k&255,o=j&255,e=e-i,g=g-k,h=h-j,i=e-1,k=g-1,j=h-1,p=a(e),q=a(g),t=a(h),s=d[l]+m,y=d[s]+o,s=d[s+1]+o,m=d[l+1]+m,l=d[m]+o,o=d[m+1]+o;return b(t,b(q,b(p,c(d[y],e,g,h),c(d[l],i,g,h)),b(p,c(d[s],e,k,h),c(d[o],i,k,h))),b(q,b(p,c(d[y+1],e,g,j),c(d[l+1],i,g,h-1)),b(p,c(d[s+1],e,k,j),c(d[o+
1],i,k,j))))}}},SimplexNoise=function(a){void 0==a&&(a=Math);this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]];this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],
[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]];this.p=[];for(var b=0;256>b;b++)this.p[b]=Math.floor(256*a.random());this.perm=[];for(b=0;512>b;b++)this.perm[b]=this.p[b&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],
[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]};SimplexNoise.prototype.dot=function(a,b,c){return a[0]*b+a[1]*c};SimplexNoise.prototype.dot3=function(a,b,c,d){return a[0]*b+a[1]*c+a[2]*d};
SimplexNoise.prototype.dot4=function(a,b,c,d,e){return a[0]*b+a[1]*c+a[2]*d+a[3]*e};
SimplexNoise.prototype.noise=function(a,b){var c,d,e;e=0.5*(Math.sqrt(3)-1);e*=a+b;var f=Math.floor(a+e),g=Math.floor(b+e),h=(3-Math.sqrt(3))/6;e=(f+g)*h;c=a-(f-e);var i=b-(g-e),k,j;c>i?(k=1,j=0):(k=0,j=1);d=c-k+h;var l=i-j+h;e=c-1+2*h;var h=i-1+2*h,m=f&255,g=g&255,f=this.perm[m+this.perm[g]]%12;k=this.perm[m+k+this.perm[g+j]]%12;j=this.perm[m+1+this.perm[g+1]]%12;g=0.5-c*c-i*i;0>g?c=0:(g*=g,c=g*g*this.dot(this.grad3[f],c,i));i=0.5-d*d-l*l;0>i?d=0:(i*=i,d=i*i*this.dot(this.grad3[k],d,l));l=0.5-e*
e-h*h;0>l?e=0:(l*=l,e=l*l*this.dot(this.grad3[j],e,h));return 70*(c+d+e)};
SimplexNoise.prototype.noise3d=function(a,b,c){var d,e,f,g=(a+b+c)*(1/3),h=Math.floor(a+g),i=Math.floor(b+g),k=Math.floor(c+g),g=1/6;f=(h+i+k)*g;d=a-(h-f);e=b-(i-f);var j=c-(k-f),l,m,o,p,q,t;d>=e?e>=j?(l=1,o=m=0,q=p=1,t=0):(d>=j?(l=1,o=m=0):(m=l=0,o=1),p=1,q=0,t=1):e<j?(m=l=0,o=1,p=0,t=q=1):d<j?(l=0,m=1,p=o=0,t=q=1):(l=0,m=1,o=0,q=p=1,t=0);var s=d-l+g,y=e-m+g,w=j-o+g;f=d-p+2*g;var a=e-q+2*g,r=j-t+2*g,c=d-1+3*g,b=e-1+3*g,g=j-1+3*g,h=h&255,B=i&255,v=k&255,i=this.perm[h+this.perm[B+this.perm[v]]]%12,
k=this.perm[h+l+this.perm[B+m+this.perm[v+o]]]%12;p=this.perm[h+p+this.perm[B+q+this.perm[v+t]]]%12;h=this.perm[h+1+this.perm[B+1+this.perm[v+1]]]%12;q=0.6-d*d-e*e-j*j;0>q?d=0:(q*=q,d=q*q*this.dot3(this.grad3[i],d,e,j));e=0.6-s*s-y*y-w*w;0>e?e=0:(e*=e,e=e*e*this.dot3(this.grad3[k],s,y,w));s=0.6-f*f-a*a-r*r;0>s?f=0:(s*=s,f=s*s*this.dot3(this.grad3[p],f,a,r));a=0.6-c*c-b*b-g*g;0>a?c=0:(a*=a,c=a*a*this.dot3(this.grad3[h],c,b,g));return 32*(d+e+f+c)};
SimplexNoise.prototype.noise4d=function(a,b,c,d){var e=this.grad4,f=this.simplex,g=this.perm,h=(Math.sqrt(5)-1)/4,i=(5-Math.sqrt(5))/20,k,j,h=(a+b+c+d)*h,l=Math.floor(a+h),m=Math.floor(b+h),o=Math.floor(c+h),p=Math.floor(d+h),h=(l+m+o+p)*i,a=a-(l-h);k=b-(m-h);j=c-(o-h);var q=d-(p-h),d=(a>k?32:0)+(a>j?16:0)+(k>j?8:0)+(a>q?4:0)+(k>q?2:0)+(j>q?1:0),t,s,y,w,r,B,v,u,x,F,C,E;t=3<=f[d][0]?1:0;s=3<=f[d][1]?1:0;y=3<=f[d][2]?1:0;w=3<=f[d][3]?1:0;r=2<=f[d][0]?1:0;B=2<=f[d][1]?1:0;v=2<=f[d][2]?1:0;u=2<=f[d][3]?
1:0;x=1<=f[d][0]?1:0;F=1<=f[d][1]?1:0;C=1<=f[d][2]?1:0;E=1<=f[d][3]?1:0;var M=a-t+i,D=k-s+i,K=j-y+i,I=q-w+i,N=a-r+2*i,O=k-B+2*i,P=j-v+2*i,T=q-u+2*i,b=a-x+3*i,h=k-F+3*i,ba=j-C+3*i,Q=q-E+3*i,f=a-1+4*i,d=k-1+4*i,c=j-1+4*i,i=q-1+4*i,l=l&255,m=m&255,G=o&255,p=p&255,o=g[l+g[m+g[G+g[p]]]]%32;t=g[l+t+g[m+s+g[G+y+g[p+w]]]]%32;r=g[l+r+g[m+B+g[G+v+g[p+u]]]]%32;x=g[l+x+g[m+F+g[G+C+g[p+E]]]]%32;g=g[l+1+g[m+1+g[G+1+g[p+1]]]]%32;p=0.6-a*a-k*k-j*j-q*q;0>p?a=0:(p*=p,a=p*p*this.dot4(e[o],a,k,j,q));k=0.6-M*M-D*D-K*
K-I*I;0>k?k=0:(k*=k,k=k*k*this.dot4(e[t],M,D,K,I));j=0.6-N*N-O*O-P*P-T*T;0>j?j=0:(j*=j,j=j*j*this.dot4(e[r],N,O,P,T));N=0.6-b*b-h*h-ba*ba-Q*Q;0>N?b=0:(N*=N,b=N*N*this.dot4(e[x],b,h,ba,Q));h=0.6-f*f-d*d-c*c-i*i;0>h?e=0:(h*=h,e=h*h*this.dot4(e[g],f,d,c,i));return 27*(a+k+j+b+e)};
var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";
a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){var b,c,a=a||{};b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};
